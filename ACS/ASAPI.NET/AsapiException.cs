/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace Asterics.ASAPI {

    [Serializable]
    public partial class AsapiException : Exception, TBase {
        private int _number;
        private string _description;

        public int Number {
            get {
                return _number;
            }
            set {
                __isset.number = true;
                this._number = value;
            }
        }

        public string Description {
            get {
                return _description;
            }
            set {
                __isset.description = true;
                this._description = value;
            }
        }


        public Isset __isset;
        [Serializable]
        public struct Isset {
            public bool number;
            public bool description;
        }

        public AsapiException() {
        }

        public void Read(TProtocol iprot) {
            TField field;
            iprot.ReadStructBegin();
            while (true) {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop) {
                    break;
                }
                switch (field.ID) {
                    case 1:
                        if (field.Type == TType.I32) {
                            Number = iprot.ReadI32();
                        } else {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    case 2:
                        if (field.Type == TType.String) {
                            Description = iprot.ReadString();
                        } else {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;
                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
        }

        public void Write(TProtocol oprot) {
            TStruct struc = new TStruct("AsapiException");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            if (__isset.number) {
                field.Name = "number";
                field.Type = TType.I32;
                field.ID = 1;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(Number);
                oprot.WriteFieldEnd();
            }
            if (Description != null && __isset.description) {
                field.Name = "description";
                field.Type = TType.String;
                field.ID = 2;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(Description);
                oprot.WriteFieldEnd();
            }
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString() {
            StringBuilder sb = new StringBuilder("AsapiException(");
            sb.Append("Number: ");
            sb.Append(Number);
            sb.Append(",Description: ");
            sb.Append(Description);
            sb.Append(")");
            return sb.ToString();
        }

    }

}
