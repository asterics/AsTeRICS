<?xml version="1.0"?><componentTypes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"> <componentType canonical_name="eu.asterics.component.actuator.analogout.AnalogOutInstance" id="asterics.AnalogOut">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>false</singleton>
        <description>Digital-to-Analog (DAC-CIM) actuator interface, enables analog control outputs</description>
        <ports>
            <inputPort id="out1">
                <description>desired value for DAC channel 1</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out2">
                <description>desired value for DAC channel 2</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out3">
                <description>desired value for DAC channel 3</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out4">
                <description>desired value for DAC channel 4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.androidphonecontrol.AndroidPhoneControlInstance" id="asterics.AndroidPhoneControl">
        <type subtype="Phone Interface">actuator</type>
        <singleton>true</singleton>
        <description>Control Android phone with AsTeRICS  application running</description>
        <ports>
			<inputPort id="PhoneID">
				<description>Phone number for the call</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="SMSContent">
				<description>SMS for send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="action">
				<description>Command port for action strings</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="RemotePhoneID">
				<description>The number of the remote phone.</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="ReceivedSMS">
				<description>Received SMS</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="ErrorNumber">
				<description>Number of the error</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="SendSMS">
				<description>Send SMS</description>
			</eventListenerPort>
			<eventListenerPort id="MakePhoneCall">
				<description>Make phone call</description>
			</eventListenerPort>
			<eventListenerPort id="AcceptPhoneCall">
				<description>Accept phone call</description>
			</eventListenerPort>
			<eventListenerPort id="DropPhoneCall">
				<description>Drop phone call</description>
			</eventListenerPort>

			<eventTriggererPort id="idleState">
				<description>Phone is in the idle state</description>
			</eventTriggererPort>
			<eventTriggererPort id="ringState">
				<description>Ring state</description>
			</eventTriggererPort>
			<eventTriggererPort id="connectedState">
				<description>Phone is connected</description>
			</eventTriggererPort>
			<eventTriggererPort id="newSMS">
				<description>There is a new message</description>
			</eventTriggererPort>
			<eventTriggererPort id="error">
				<description>Error event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="server//client" description="Type of the connection for this plugin: server or client" name="connectionType" type="integer" value="0"/>
			<property description="IP of the remote server" name="IP" type="string" value="localhost"/>
			<property description="Port used in IP/TCP connection" name="port" type="integer" value="21111"/>
			<property description="Default phone number" name="defaultPhoneID" type="string" value=""/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.applicationlauncher.ApplicationLauncherInstance" id="asterics.ApplicationLauncher">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>starts external software applications via path and  filename (.exe)</description>
        <ports>
			<inputPort id="filename">
				<description>File name of executable file which shall be started</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="launchNow">
				<description>an incoming event launches the  application</description>
			</eventListenerPort>
			<eventListenerPort id="closeNow">
				<description>an incoming event closes a launched application</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="Default application file name (including path)" name="defaultApplication" type="string" value="c:\windows\notepad.exe"/>
			<property description="arguments for default application" name="arguments" type="string" value=""/>
			<property description="working directory for application" name="workingDirectory" type="string" value="."/>
			<property description="Launch the default application immediately at model startup" name="autoLaunch" type="boolean" value="false"/>
			<property description="if true, a launched application is closed when the model is stopped or switched" name="autoClose" type="boolean" value="true"/>
			<property description="if true, an incoming filename at the input port is not lauched before the launchNow event is triggered" name="onlyByEvent" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.bardisplay.BardisplayInstance" id="asterics.BarDisplay">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Bar-display</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
        <properties>
            <property description="How many values will be buffered before redraw of bargraph" name="displayBuffer" type="integer" value="0"/>
            <property description="minimum value" name="min" type="double" value="0"/>
            <property description="maximum value" name="max" type="double" value="1000"/>
            <property description="threshold value" name="threshold" type="double" value="500"/>
            <property description="display marker for threshold value ?" name="displayThreshold" type="boolean" value="false"/> 
            <property description="round double values to integral type ?" name="integerDisplay" type="boolean" value="false"/> 
            <property combobox="clip to min and max//autoupdate min and max" description="how to deal with values exceeding min or max" name="mode" type="integer" value="1"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of the grid" name="gridColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of bar display" name="barColor" type="integer" value="8"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/> 
            <property description="font size of bardisplay captions" name="fontSize" type="integer" value="14"/>
            <property description="caption of the bar graph" name="caption" type="string" value="bar-graph"/>                                                       
        </properties>
        <gui>
            <width>1000</width>
            <height>3000</height>
        </gui>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.digitalout.DigitalOutInstance" id="asterics.DigitalOut">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>true</singleton>
        <description>Digital Output control of GPIO-CIM</description>
        <ports>
            <inputPort id="action">
                <description>Commands for switching outputs, Examples: @GPIO:set,1/@GPIO:clear,2/@GPIO:toggle,1/@GPIO:press,4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOutput1">
                <description>An incoming event switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput2">
                <description>An incoming event switches Output2 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput3">
                <description>An incoming event switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput4">
                <description>An incoming event switches Output4 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput5">
                <description>An incoming event switches Output5 to high level</description>
            </eventListenerPort>

            <eventListenerPort id="clearOutput1">
                <description>An incoming event switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput2">
                <description>An incoming event switches Output2 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput3">
                <description>An incoming event switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput4">
                <description>An incoming event switches Output4 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput5">
                <description>An incoming event switches Output5 to low level</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Sets pull up state for output 3, true enables pull up" name="pullupStateOut3" type="boolean" value="false"/>
            <property description="Sets pull up state for output 4, true enables pull up" name="pullupStateOut4" type="boolean" value="false"/>
            <property description="Sets pull up state for output 5, true enables pull up" name="pullupStateOut5" type="boolean" value="false"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
            
        </properties>
    </componentType>
    
    
    <componentType canonical_name="eu.asterics.component.actuator.digitalout.DigitalOutInstance" id="asterics.LegacyDigitalOut">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>true</singleton>
        <description>Digital Output control of GPIO-CIM</description>
        <ports>
            <inputPort id="action">
                <description>Commands for switching outputs, Examples: @GPIO:set,1/@GPIO:clear,2/@GPIO:toggle,1/@GPIO:press,4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOutput1">
                <description>An incoming event switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput2">
                <description>An incoming event switches Output2 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput3">
                <description>An incoming event switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput4">
                <description>An incoming event switches Output4 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput5">
                <description>An incoming event switches Output5 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput6">
                <description>An incoming event switches Output6 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput7">
                <description>An incoming event switches Output7 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput8">
                <description>An incoming event switches Output8 to high level</description>
            </eventListenerPort>

            <eventListenerPort id="clearOutput1">
                <description>An incoming event switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput2">
                <description>An incoming event switches Output2 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput3">
                <description>An incoming event switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput4">
                <description>An incoming event switches Output4 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput5">
                <description>An incoming event switches Output5 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput6">
                <description>An incoming event switches Output6 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput7">
                <description>An incoming event switches Output7 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput8">
                <description>An incoming event switches Output8 to low level</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Sets pull up state for output 1, true enables pull up" name="pullupStateOut1" type="boolean" value="false"/>
            <property description="Sets pull up state for output 2, true enables pull up" name="pullupStateOut2" type="boolean" value="false"/>
            <property description="Sets pull up state for output 3, true enables pull up" name="pullupStateOut3" type="boolean" value="false"/>
            <property description="Sets pull up state for output 4, true enables pull up" name="pullupStateOut4" type="boolean" value="false"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
        </properties>
    </componentType>
    


 <componentType canonical_name="eu.asterics.component.actuator.dotmeter.DotmeterInstance" id="asterics.DotMeter">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>DotMeter</description>
        <ports>
            <inputPort id="x">
                <description>Input port for x-position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="y">
                <description>Input port for y-position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
		<events>
			<eventListenerPort id="dotOn">
				<description>display the dot</description>
			</eventListenerPort>
			<eventListenerPort id="dotOff">
				<description>hide the dot</description>
			</eventListenerPort>
		</events>			        
        <properties>
            <property description="minimum X value" name="xMin" type="double" value="0"/>
            <property description="maximum X value" name="xMax" type="double" value="1000"/>
            <property description="minimum Y value" name="yMin" type="double" value="0"/>
            <property description="maximum Y value" name="yMax" type="double" value="1000"/>
            <property combobox="clip to min and max//autoupdate min and max" description="how to deal with values exceeding min or max" name="mode" type="integer" value="1"/> 
            <property description="size of the dot" name="dotSize" type="integer" value="10"/>
            <property description="draw line to center?" name="centerLine" type="boolean" value="true"/>
            <property description="display dot at startup?" name="displayDot" type="boolean" value="true"/>
            <property description="display meter captions?" name="displayCaptions" type="boolean" value="true"/>
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of the grid" name="gridColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of bar display" name="dotColor" type="integer" value="8"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/> 
            <property description="font size of dotmeter captions" name="fontSize" type="integer" value="14"/>
            <property description="caption of the meter" name="caption" type="string" value="dotMeter"/>                                                       
        </properties>
        <gui>
            <width>3000</width>
            <height>3000</height>
        </gui>
    </componentType>

 <componentType canonical_name="com.starlab.component.actuator.enobiodisplay.EnobioDisplayInstance" id="asterics.EnobioDisplay">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>true</singleton>
        <description>Enobio actuator which displays the Enobio data</description>
        <ports>
            <inputPort id="Channel1">
                <description>Input port for Enobio channel 1 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel2">
                <description>Input port for Enobio channel 2 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel3">
                <description>Input port for Enobio channel 3 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel4">
                <description>Input port for Enobio channel 4 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Status">
                <description>Input port for the Enobio status signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <gui>
            <width>6000</width>
            <height>9000</height>
        </gui>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.enocean.EnoceanInstance" id="asterics.enocean">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Enables the ARE to communicate with an EnOcean wireless network</description>
        <ports>
			<inputPort id="command">
				<description>command string to send an EnOcean command</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="slider1">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider2">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider3">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider4">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider5">
				<description>v</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider6">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output1">
				<description>the output value, from device with IDTrigger1</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output2">
				<description>the output value, from device with IDTrigger2</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output3">
				<description>the output value, from device with IDTrigger3</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output4">
				<description>the output value, from device with IDTrigger4</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output5">
				<description>the output value, from device with IDTrigger5</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output6">
				<description>the output value, from device with IDTrigger6</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		
            <eventTriggererPort id="event_out_1">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_2">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_3">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_4">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_5">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_6">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>                                                            
			<eventListenerPort id="send1">
				<description>Sending the value defined in send property sendvalue1 with id1</description>
			</eventListenerPort>
			<eventListenerPort id="send2">
				<description>Sending the value defined in send property sendvalue2 with id2</description>
			</eventListenerPort>
			<eventListenerPort id="send3">
				<description>Sending the value defined in send property sendvalue3 with id3</description>
			</eventListenerPort>
			<eventListenerPort id="send4">
				<description>Sending the value defined in send property sendvalue4 with id4</description>
			</eventListenerPort>
			<eventListenerPort id="send5">
				<description>Sending the value defined in send property sendvalue5 with id5</description>
			</eventListenerPort>
			<eventListenerPort id="send6">
				<description>Sending the value defined in send property sendvalue6 with id6</description>
			</eventListenerPort>


		</events>			
        <properties>
            <property description="The local IP of network interface, which is connected to KNX/IP network" name="localIP" type="string" value="127.0.0.1"/>
            <property description="The hostname/IP of EnOcean IP gateway device" name="gatewayIP" type="string" value="172.0.10.2"/>
            <property description="Use USB communication" name="USB" type="boolean" value="true"/>
            <property description="Sending ID 1" name="id1" type="string" value="0"/>
            <property description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType1" type="string" value="binary"/>
            <property description="Value 1" name="dataValue1" type="string" value="0"/>
            <property description="Sending ID 2" name="id2" type="string" value="0"/>
            <property description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType2" type="string" value="binary"/>
            <property description="Value 2" name="dataValue2" type="string" value="0"/>
            <property description="Sending ID 3" name="id3" type="string" value="0"/>
            <property description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType3" type="string" value="binary"/>
            <property description="Value 3" name="dataValue3" type="string" value="0"/>
            <property description="Sending ID 4" name="id4" type="string" value="0"/>
            <property description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType4" type="string" value="binary"/>
            <property description="Value 4" name="dataValue4" type="string" value="0"/>
            <property description="Sending ID 5" name="id5" type="string" value="0"/>
            <property description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType5" type="string" value="binary"/>
            <property description="Value 5" name="dataValue5" type="string" value="0"/>
            <property description="Sending ID 6" name="id6" type="string" value="0"/>
            <property description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendType6" type="string" value="binary"/>
            <property description="Value 6" name="dataValue6" type="string" value="0"/>
                      
                      
            <property description="Sending ID Slider 1" name="IDSlider1" type="string" value="0"/>
	        <property description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider1" type="string" value="binary"/>
	        <property description="Sending ID Slider 2" name="IDSlider2" type="string" value="0"/>
	        <property description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider2" type="string" value="binary"/>
	        <property description="Sending ID Slider 3" name="IDSlider3" type="string" value="0"/>
	        <property description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider3" type="string" value="binary"/>
	        <property description="Sending ID Slider 4" name="IDSlider4" type="string" value="0"/>
	        <property description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider4" type="string" value="binary"/>
	        <property description="Sending ID Slider 5" name="IDSlider5" type="string" value="0"/>
	        <property description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider5" type="string" value="binary"/>
	        <property description="Sending ID Slider 6" name="IDSlider6" type="string" value="0"/>
	        <property description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)" name="sendTypeSlider6" type="string" value="binary"/>   
           
            <property description="Listening ID for event trigger/output value 1" name="IDTrigger1" type="string" value="AABBCCDD"/>
	        <property description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger1" type="string" value="binary"/>   
            <property description="Listening ID for event trigger/output value 2" name="IDTrigger2" type="string" value="AABBCCDD"/>
	        <property description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger2" type="string" value="binary"/> 
	        <property description="Listening ID for event trigger/output value 3" name="IDTrigger3" type="string" value="AABBCCDD"/>
	        <property description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger3" type="string" value="binary"/> 
	        <property description="Listening ID for event trigger/output value 4" name="IDTrigger4" type="string" value="AABBCCDD"/>
	        <property description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger4" type="string" value="binary"/> 
	        <property description="Listening ID for event trigger/output value 5" name="IDTrigger5" type="string" value="AABBCCDD"/>
	        <property description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger5" type="string" value="binary"/> 
	        <property description="Listening ID for event trigger/output value 6" name="IDTrigger6" type="string" value="AABBCCDD"/>
	        <property description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)" name="TypeTrigger6" type="string" value="binary"/> 
	                                  	                  	                  	        
        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.event_visualizer.EventVisualizerInstance" id="asterics.EventVisualizer">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Simple Event Visualizer</description>
        <ports>
        </ports>
        <events>
            <eventListenerPort id="eventDisplay">
                <description>Incoming events are displayed in the visualizer window</description>
            </eventListenerPort>
        </events>
        <gui>
            <width>3000</width>
            <height>1000</height>
        </gui>
    </componentType>


 <componentType canonical_name="com.starlab.component.actuator.filewriter.FileWriterInstance" id="asterics.FileWriter">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>File Writer actuator</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
		<properties>
            <property description="Name of the file that will be written" name="FileName" type="string" value="filewriter"/>                      
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.actuator.flickeringlightstimulator.FlickeringLightStimulatorInstance" id="asterics.FlickeringLightStimulator">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>Flickering light stimulator</description>
        <ports>
			<inputPort id="panel1">
				<description>Frequency input for panel 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel2">
				<description>Frequency input for panel 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel3">
				<description>Frequency input for panel 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel4">
				<description>Frequency input for panel 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="startStim">
				<description>Start stimulation event</description></eventListenerPort>
			<eventListenerPort id="stopStim">
				<description>Stop stimulation event</description></eventListenerPort>
			<eventListenerPort id="updateConfiguration">
				<description>Update configuration event</description></eventListenerPort>
			<eventListenerPort id="startStimPeriod">
				<description>Start Stimulation for a period of N seconds</description></eventListenerPort>
			<eventTriggererPort id="stimPeriodFinished">
				<description>Stimulation period of N seconds finished</description></eventTriggererPort>
		</events>			
        <properties>
			<property description="Frequency for panel 1" name="frequencyPanel1" type="integer" value="1"/>
			<property description="Frequency for panel 2" name="frequencyPanel2" type="integer" value="1"/>
			<property description="Frequency for panel 3" name="frequencyPanel3" type="integer" value="1"/>
			<property description="Frequency for panel 4" name="frequencyPanel4" type="integer" value="1"/>
			<property description="Duty cycle for panel 1" name="dcPanel1" type="integer" value="50"/>
			<property description="Duty cycle for panel 2" name="dcPanel2" type="integer" value="50"/>
			<property description="Duty cycle for panel 3" name="dcPanel3" type="integer" value="50"/>
			<property description="Duty cycle for panel 4" name="dcPanel4" type="integer" value="50"/>
			<property description="Intensity for panel 1" name="intPanel1" type="integer" value="100"/>
			<property description="Intensity for panel 2" name="intPanel2" type="integer" value="100"/>
			<property description="Intensity for panel 3" name="intPanel3" type="integer" value="100"/>
			<property description="Intensity for panel 4" name="intPanel4" type="integer" value="100"/>
			<property description="Red color" name="red" type="boolean" value="true"/>
			<property description="Blue color" name="blue" type="boolean" value="true"/>
        	<property description="Green color" name="green" type="boolean" value="true"/>
        	<property description="COMM port" name="comPort" type="string" value="COM7"/>
        	<property description="Stimulation of N milliseconds" name="N" type="integer" value="3000"/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.fS20Sender.FS20SenderInstance" id="asterics.FS20Sender">
        <type subtype="Home Control">actuator</type>
        <singleton>true</singleton>
        <description>Sends FS20 commands</description>
        <ports>
			<inputPort id="Housecode">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="Address">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="Action">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
			<eventListenerPort id="off">
				<description>turn off (0 %)</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel1">
				<description>dim to brightness level 6,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel2">
				<description>dim to brightness level 12,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel3">
				<description>dim to brightness level 18,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel4">
				<description>dim to brightness level 25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel5">
				<description>dim to brightness level 31,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel6">
				<description>dim to brightness level 37,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel7">
				<description>dim to brightness level 43,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel8">
				<description>dim to brightness level 50 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel9">
				<description>dim to brightness level 56,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel10">
				<description>dim to brightness level 62,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel11">
				<description>dim to brightness level 68,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel12">
				<description>dim to brightness level 75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel13">
				<description>dim to brightness level 81,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel14">
				<description>dim to brightness level 87,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel15">
				<description>dim to brightness level 93,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel16">
				<description>dim to brightness level 100 %</description>
			</eventListenerPort>
			<eventListenerPort id="onOldLevel">
				<description>dim to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="toggle">
				<description>toggle between on and off</description>
			</eventListenerPort>
			<eventListenerPort id="dimUp">
				<description>dim up for one brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="dimDown">
				<description>dim down for one brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="dimUpAndDown">
				<description>dim up to maximum wait for the internal timer time dim down to minimum</description>
			</eventListenerPort>
			<eventListenerPort id="programTimer">
				<description>start or end programming of the internal timer time</description>
			</eventListenerPort>
			<eventListenerPort id="offForTimerThenOldLevel">
				<description>off (0%) for the time specified by the internal timer then dim to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="OnForTimerThenOff">
				<description>On (100 %) for the time specified by the internal timer then off</description>
			</eventListenerPort>
			<eventListenerPort id="OnOldLevelForTimerThenOff">
				<description>Dim to previous brightness level, wait for the time specified by the internal timer, then turn off (0 %)</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>reset to factory defaults (not all devices support this function)</description>
			</eventListenerPort>
			<eventListenerPort id="onForTimerThenOldLevel">
				<description>on (100 %) for the time specified by the internal timer then dim back to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="onOldLevelForTimerThenPreviousState">
				<description>dim to previous brightness level, wait for the time specified by the internal timer  enable the state before this command</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="Default housecode" name="Housecode" type="integer" value="11111111"/>
			<property description="Default device address" name="Address" type="integer" value="1111"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.gsmmodem.GSMModemInstance" id="asterics.GSMModem">
        <type subtype="Communication">actuator</type>
        <singleton>true</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="phoneID">
				<description>Phone ID for the SMS send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="SMSContent">
				<description>SMS content to send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="remotePhoneID">
				<description>remote Phone ID</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="receivedSMS">
				<description>Received SMS content</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="errorNumber">
				<description>Error number out</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="sendSMS">
				<description>Send SMS</description>
			</eventListenerPort>

			<eventTriggererPort id="newSMS">
				<description>There is a new message</description>
			</eventTriggererPort>
			<eventTriggererPort id="error">
				<description>Error event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Modem port" name="serialPort" type="string" value=""/>
			<property description="SIM card PIN" name="pin" type="string" value=""/>
			<property description="SMS Center ID" name="smsCenterID" type="string" value=""/>
			<property description="SMS Center ID" name="defaultPhoneID" type="string" value=""/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.imagebox.ImageBoxInstance" id="asterics.ImageBox">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays a picture.</description>
        <ports>
			<inputPort id="input">
				<description>Picture path</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="clear">
				<description>Clear the picture</description>
			</eventListenerPort>

			<eventTriggererPort id="clicked">
				<description>component clicked</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Caption of the component" name="caption" type="string" value="Image Box"/>
			<property description="Default picture" name="default" type="string" value=""/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="Background color" name="backgroundColor" type="integer" value="11"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>3000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.irtrans.IrTransInstance" id="asterics.IrTrans">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Infrared Transmission Module, interfaces to the IrTrans device</description>
        <ports>
            <inputPort id="action">
                <description>Commands to send directly to IRTrans, Example: @IRTRANS:snd myremote,mycommand</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="sendprop1">
                <description>Sending the string defined in send property 1</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop2">
                <description>Sending the string defined in send property 2</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop3">
                <description>Sending the string defined in send property 3</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop4">
                <description>Sending the string defined in send property 4</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop5">
                <description>Sending the string defined in send property 5</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop6">
                <description>Sending the string defined in send property 6</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop7">
                <description>Sending the string defined in send property 7</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop8">
                <description>Sending the string defined in send property 8</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop9">
                <description>Sending the string defined in send property 9</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop10">
                <description>Sending the string defined in send property 10</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop11">
                <description>Sending the string defined in send property 11</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop12">
                <description>Sending the string defined in send property 12</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop13">
                <description>Sending the string defined in send property 13</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop14">
                <description>Sending the string defined in send property 14</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop15">
                <description>Sending the string defined in send property 15</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop16">
                <description>Sending the string defined in send property 16</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop17">
                <description>Sending the string defined in send property 17</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop18">
                <description>Sending the string defined in send property 18</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop19">
                <description>Sending the string defined in send property 19</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop20">
                <description>Sending the string defined in send property 20</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop21">
                <description>Sending the string defined in send property 21</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop22">
                <description>Sending the string defined in send property 22</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop23">
                <description>Sending the string defined in send property 23</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop24">
                <description>Sending the string defined in send property 24</description>
            </eventListenerPort>                                    
        </events>         
        <properties>
            <property description="the hostname / IP of the IRTrans" name="hostname" type="string" value=""/>
            <property description="The port of the IRTrans" name="port" type="string" value="21000"/>
<!--            <property name="useTCP"
                      type="boolean"
                      value="false"
                      description="Using TCP if selected, otherwise UDP"/>-->
            <property description="The string, which will be send before the strings in the following properties" name="prestring" type="string" value=""/>
            <property description="The string, which will be send if sendprop1 will be triggered" name="send1" type="string" value=""/>
            <property description="The string, which will be send if sendprop2 will be triggered" name="send2" type="string" value=""/>
            <property description="The string, which will be send if sendprop3 will be triggered" name="send3" type="string" value=""/>
            <property description="The string, which will be send if sendprop4 will be triggered" name="send4" type="string" value=""/>
            <property description="The string, which will be send if sendprop5 will be triggered" name="send5" type="string" value=""/>
            <property description="The string, which will be send if sendprop6 will be triggered" name="send6" type="string" value=""/>
           <property description="The string, which will be send if sendprop7 will be triggered" name="send7" type="string" value=""/>
            <property description="The string, which will be send if sendprop8 will be triggered" name="send8" type="string" value=""/>
            <property description="The string, which will be send if sendprop9 will be triggered" name="send9" type="string" value=""/>
            <property description="The string, which will be send if sendprop10 will be triggered" name="send10" type="string" value=""/>
            <property description="The string, which will be send if sendprop11 will be triggered" name="send11" type="string" value=""/>
            <property description="The string, which will be send if sendprop12 will be triggered" name="send12" type="string" value=""/>
           <property description="The string, which will be send if sendprop13 will be triggered" name="send13" type="string" value=""/>
            <property description="The string, which will be send if sendprop14 will be triggered" name="send14" type="string" value=""/>
            <property description="The string, which will be send if sendprop15 will be triggered" name="send15" type="string" value=""/>
            <property description="The string, which will be send if sendprop16 will be triggered" name="send16" type="string" value=""/>
            <property description="The string, which will be send if sendprop17 will be triggered" name="send17" type="string" value=""/>
            <property description="The string, which will be send if sendprop18 will be triggered" name="send18" type="string" value=""/>
           <property description="The string, which will be send if sendprop19 will be triggered" name="send19" type="string" value=""/>
            <property description="The string, which will be send if sendprop20 will be triggered" name="send20" type="string" value=""/>
            <property description="The string, which will be send if sendprop21 will be triggered" name="send21" type="string" value=""/>
            <property description="The string, which will be send if sendprop22 will be triggered" name="send22" type="string" value=""/>
            <property description="The string, which will be send if sendprop23 will be triggered" name="send23" type="string" value=""/>
            <property description="The string, which will be send if sendprop24 will be triggered" name="send24" type="string" value=""/>                                                                  
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.keyboard.KeyboardInstance" id="asterics.Keyboard">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Local Keyboard actuator</description>
        <ports>
            <inputPort id="keyCodes">
                <description>input string for keycodes</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="sendKeys">
                <description>On incoming event, all keys in keycode-string are sent</description>
            </eventListenerPort>
            <eventListenerPort id="pressKey">
                <description>On incoming event, the next key in keycode-string is pressed</description>
            </eventListenerPort>
            <eventListenerPort id="holdKey">
                <description>On incoming event, hold the next key in keycode-string </description>
            </eventListenerPort>
            <eventListenerPort id="releaseKey">
                <description>On incoming event, release current key released</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Keycodes to send" name="keyCodeString" type="string" value="a"/>
            <property combobox="sending window messages//using system-wide SendInput API function" description="defines the way how keyboard input is injected" name="inputMethod" type="integer" value="1"/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.knx.KnxInstance" id="asterics.Knx">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Enables the ARE to communicate with a KNX network</description>
        <ports>
			<inputPort id="command">
				<description>command string to send a KNX command</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="slider1">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider2">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider3">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider4">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider5">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider6">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>


        </ports>
		<events>
		
            <eventTriggererPort id="event_out_1">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_2">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_3">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_4">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_5">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_6">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>                                                            
			<eventListenerPort id="send1">
				<description>Sending the value defined in send property sendvalue1 to group address sendaddr1</description>
			</eventListenerPort>
			<eventListenerPort id="send2">
				<description>Sending the value defined in send property sendvalue2 to group address sendaddr2</description>
			</eventListenerPort>
			<eventListenerPort id="send3">
				<description>Sending the value defined in send property sendvalue3 to group address sendaddr3</description>
			</eventListenerPort>
			<eventListenerPort id="send4">
				<description>Sending the value defined in send property sendvalue4 to group address sendaddr4</description>
			</eventListenerPort>
			<eventListenerPort id="send5">
				<description>Sending the value defined in send property sendvalue5 to group address sendaddr5</description>
			</eventListenerPort>
			<eventListenerPort id="send6">
				<description>Sending the value defined in send property sendvalue6 to group address sendaddr6</description>
			</eventListenerPort>


		</events>			
        <properties>
            <property description="The local IP of network interface, which is connected to KNX/IP network" name="localIP" type="string" value="172.22.1.10"/>
            <property description="The hostname/IP of KNXnet/IP device" name="KNXNetIP" type="string" value="knxip1.aat.technikum-wien.at"/>
            <property description="Use NAT mode of Calimero, if you are not directly connected to a KNX/IP network" name="NAT" type="boolean" value="true"/>
            <property description="Destination group address 1" name="groupAddress1" type="string" value="1/0/0"/>
            <property description="DPT 1 (string|boolean|int|float)" name="dataType1" type="string" value="boolean"/>
            <property description="Value 1" name="dataValue1" type="string" value="0"/>
            <property description="Destination group address 2" name="groupAddress2" type="string" value="1/0/0"/>
            <property description="DPT 2 (string|boolean|int|float)" name="dataType2" type="string" value="boolean"/>
            <property description="Value 2" name="dataValue2" type="string" value="1"/>
            <property description="Destination group address 3" name="groupAddress3" type="string" value="1/1/0"/>
            <property description="DPT 3 (string|boolean|int|float)" name="dataType3" type="string" value="boolean"/>
            <property description="Value 3" name="dataValue3" type="string" value="0"/>
            <property description="Destination group address 4" name="groupAddress4" type="string" value="1/1/0"/>
            <property description="DPT 4 (string|boolean|int|float)" name="dataType4" type="string" value="boolean"/>
            <property description="Value 4" name="dataValue4" type="string" value="1"/>
            <property description="Destination group address 5" name="groupAddress5" type="string" value="1/1/1"/>
            <property description="DPT 5 (string|boolean|int|float)" name="dataType5" type="string" value="boolean"/>
            <property description="Value 5" name="dataValue5" type="string" value="0"/>
            <property description="Destination group address 6" name="groupAddress6" type="string" value="1/1/1"/>
            <property description="DPT 6 (string|boolean|int|float)" name="dataType6" type="string" value="boolean"/>
            <property description="Value 6" name="dataValue6" type="string" value="1"/>
            <property description="Destination group address Slider" name="groupAddressSlider1" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressSlider2" type="string" value="1/1/1"/>	                  
            <property description="Destination group address Slider" name="groupAddressSlider3" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressSlider4" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressSlider5" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressSlider6" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger1" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger2" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger3" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger4" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger5" type="string" value="1/1/1"/>
            <property description="Destination group address Slider" name="groupAddressTrigger6" type="string" value="1/1/1"/>
	                                  	                  	                  	        
        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.mediaplayer.MediaPlayerInstance" id="asterics.MediaPlayer">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>Media player for supported file formats</description>
        <ports>
			<inputPort id="filename">
				<description>file name of media file</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="position">
				<description>position in media file (0-100%)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="rate">
				<description>playback speed (0-500%)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
        </ports>
		<events>
			<eventListenerPort id="play">
				<description>plays the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="pause">
				<description>pauses the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stops the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>resets the mediafile to initial position</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="path and filename of a valid media file" getStringList="true" name="filename" type="string" value=""/>
			<property description="automatically play the media file ar startup or as filename is received" name="autoplay" type="boolean" value="true"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.midi.MidiInstance" id="asterics.MidiPlayer">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>This plugin is used for MIDI applications</description>
        <ports>
			<inputPort id="trigger">
				<description>this input port triggers the keystroke of the midi plugin</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="pitch">
				<description>this input selects the pitch of the tone played.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="instrument">
				<description>accepts string inputs for instrument names of the active midi device, to select this instrument.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="scale">
				<description>accepts string inputs for filenames of a tonescale, to select this scale.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
		</events>			
        <properties>
			<property description="name of the Midi Output device" getStringList="true" name="midiDevice" type="string" value="Gervill"/>
			<property description="sets the channel for the midi instrument" name="channel" type="integer" value="1"/>
			<property description="name of the instrument or controller" getStringList="true" name="instrument" type="string" value="Vibraphone"/>
			<property description="sets the threshold for triggering a note" name="triggerThreshold" type="integer" value="50"/>
			<property description="sets the value for the trigger input where the tone will have maximum volume" name="triggerMax" type="integer" value="100"/>
			<property description="sets the minimum input value for computing the tone pitch" name="pitchMin" type="integer" value="0"/>
			<property description="sets the maximum input value for computing the tone pitch" name="pitchMax" type="integer" value="1000"/>
			<property description="filename of tone scale file" getStringList="true" name="toneScale" type="string" value="alltones.sc"/>
            <property description="if selected, only note changes will be played" name="playOnlyChangingNotes" type="boolean" value="true"/>
            <property description="if selected, the GUI window with tone parameters will be shown" name="displayGUI" type="boolean" value="true"/>
        </properties>
		<gui>
			<width>5000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.modelSwitcher.ModelSwitcherInstance" id="asterics.modelSwitcher">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>The ModelSwitcher plugin can be used to deploy and start a model via incoming event or model name</description>
        <ports>
			<inputPort id="modelName">
				<description>Name of the Model to be started </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
            <eventListenerPort id="switchModel">
                <description>incoming event switches to the default model given as property value</description>
            </eventListenerPort>
		</events>			
        <properties>
			<property description="default model name" name="model" type="string" value="autostart.acs"/>

        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.mouse.MouseInstance" id="asterics.Mouse">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Local mouse actuator, emulates mouse activity on local system</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>    
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>generates a left click</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>generates a middle click</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>generates a right click</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>generates a double left click</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>generates a left mouse button press</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>generates a left mouse button release</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>moves wheel up one step</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>moves wheel down one step</description>
            </eventListenerPort>
            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
            <eventListenerPort id="activate">
                <description>On incoming event, the mouse activity starts</description>
            </eventListenerPort>
            <eventListenerPort id="deactivate">
                <description>On incoming event, the mouse activity stops</description>
            </eventListenerPort>
            <eventListenerPort id="toggle">
                <description>On incoming event, the mouse activity toggles</description>
            </eventListenerPort>                        
        </events>         
        <properties>
            <property description="Defines if the mouse will move and clicks will be performed" name="enableMouse" type="boolean" value="true"/>
            <property description="X and Y values are absolute positions or relative movements" name="absolutePosition" type="boolean" value="true"/>
            <property description="minimum value for x-coordinate" name="xMin" type="integer" value="0"/>
            <property description="maximum value for x-coordinate (0 for auto-detect)" name="xMax" type="integer" value="2000"/>
            <property description="minimum value for y-coordinate" name="yMin" type="integer" value="0"/>
            <property description="maximum value for y-coordinate (0 for auto-detect)" name="yMax" type="integer" value="1024"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.mousecursoricon.MouseCursorIconInstance" id="asterics.MouseCursorIcon">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>sets different cursor icnos for the local mouse cursor</description>
        <ports>
			<inputPort id="iconName">
				<description>filename of the icon</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="setIcon1">
				<description>activates Icon1</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon2">
				<description>activates Icon2</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon3">
				<description>activates Icon3</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon4">
				<description>activates Icon4</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon5">
				<description>activates Icon5</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon6">
				<description>activates Icon6</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon7">
				<description>activates Icon7</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon8">
				<description>activates Icon8</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon9">
				<description>activates Icon9</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="filename of the icon" name="icon1name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon2name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon3name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon4name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon5name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon6name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon7name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon8name" type="string" value="arrow"/>
			<property description="filename of the icon" name="icon9name" type="string" value="arrow"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.netconnection.NetConnectionInstance" id="asterics.NetConnection">
        <type subtype="Communication">actuator</type>
        <singleton>false</singleton>
        <description>This component provides the interface for connecting this other application through the Internet.</description>
        <ports>
			<inputPort id="integerInputPort1">
				<description>Integer input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort2">
				<description>Integer input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort3">
				<description>Integer input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort4">
				<description>Integer input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort5">
				<description>Integer input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="doubleInputPort1">
				<description>Double input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort2">
				<description>Double input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort3">
				<description>Double input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort4">
				<description>Double input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort5">
				<description>Double input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="stringInputPort1">
				<description>String input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort2">
				<description>String input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort3">
				<description>String input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort4">
				<description>String input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort5">
				<description>String input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="integerOutputPort1">
				<description>Integer output port  1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort2">
				<description>Integer output port  2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort3">
				<description>Integer output port  3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort4">
				<description>Integer output port  4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort5">
				<description>Integer output port  5</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort1">
				<description>Double output port  1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort2">
				<description>Double output port  2</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort3">
				<description>Double output port  3</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort4">
				<description>Double output port  4</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort5">
				<description>Double output port  5</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="stringOutputPort1">
				<description>String output port  1</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort2">
				<description>String output port  2</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort3">
				<description>String output port  3</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort4">
				<description>String output port  4</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort5">
				<description>String output port  5</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="inputEvent1">
				<description>Input Event 1</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent2">
				<description>Input Event 2</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent3">
				<description>Input Event 3</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent4">
				<description>Input Event 4</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent5">
				<description>Input Event 5</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent6">
				<description>Input Event 6</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent7">
				<description>Input Event 7</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent8">
				<description>Input Event 8</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent9">
				<description>Input Event 9</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent10">
				<description>Input Event 10</description>
			</eventListenerPort>

			<eventTriggererPort id="outputEvent1">
				<description>output Event 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent2">
				<description>output Event 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent3">
				<description>output Event 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent4">
				<description>output Event 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent5">
				<description>output Event 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent6">
				<description>output Event 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent7">
				<description>output Event 7</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent8">
				<description>output Event 8</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent9">
				<description>output Event 9</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent10">
				<description>output Event 10</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="server//client" description="Type of the connection for this plugin: server or client" name="connectionType" type="integer" value="0"/>
			<property description="IP of the remote server" name="IP" type="string" value="localhost"/>
			<property description="Port used in IP/TCP connection" name="port" type="integer" value="21112"/>
			<property description="If the plugin is set to work as the server and this property is set, the plugin can connect to many clients." name="multisession" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.oscilloscope.OscilloscopeInstance" id="asterics.Oscilloscope">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Oscilloscope display for one signal channel</description>
        <ports>
            <inputPort id="in">
                <description>Input port of oscilloscope</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>

            </inputPort>
        </ports>
        <properties>
            <property description="How many values will be buffered before redraw of oscilloscope" name="displayBuffer" type="integer" value="3"/>
            <property combobox="autoupdate min and max//crop to min and max" description="drawing mode of the oscilloscope" name="drawingMode" type="integer" value="0"/> 
            <property combobox="redraw on incoming sample//draw periodically" description="display update mode of the oscilloscope" name="displayMode" type="integer" value="0"/> 
            <property description="draw interval in milliseconds (if periodic drawing is used)" name="drawingInterval" type="integer" value="100"/> 
            <property description="minimum display value (if crop drawing mode is used)" name="min" type="double" value="-100"/>
            <property description="maximum display value (if crop drawing mode is used)" name="max" type="double" value="100"/>
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of the grid" name="gridColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of channel 1 signal" name="channelColor" type="integer" value="10"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/>                 
            <property description="font size of oscilloscope captions" name="fontSize" type="integer" value="14"/>
            <property description="caption of the oscilloscope" name="caption" type="string" value="oscilloscope"/>                                                       
        </properties>
        <gui>
            <width>6000</width>
            <height>3000</height>
        </gui>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.oscoutclient.OscOutClientInstance" id="asterics.OscOutClient">
        <type subtype="Communication">actuator</type>
        <singleton>false</singleton>
        <description>Sends data out via OSC</description>
        <ports>
			<inputPort id="CH1">
				<description>Argument Nr. 0 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>Argument Nr. 1 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>Argument Nr. 2 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>Argument Nr. 3 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="StringIN">
				<description>String which is send by one OSC message to the Address specified by Property AddressStringCh </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>

			<eventTriggererPort id="TriggerOne">
				<description>not populated, reserved for future use</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Specifies the port which is used by OSC" name="Port" type="integer" value="57111"/>
			<property description="Specifies the IP where data is send to" name="PeerAddress" type="string" value="127.0.0.1"/>	
			<property description="Specifies the Address for channel 1" name="AddressCh1" type="string" value="/channel1"/>
			<property description="Specifies the Addres for the string channel" name="AddressStringCh" type="string" value="/AddressStringCh"/>
						

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.phonecontrol.PhoneControlInstance" id="asterics.PhoneControl">
        <type subtype="Phone Interface">actuator</type>
        <singleton>true</singleton>
        <description>Phone plugin</description>
        <ports>
            <inputPort id="phoneID">
                <description>Phone ID for the phone connection or send SMS</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="SMSContent">
                <description>SMS content to send</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="command">
                <description>String command</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="remotePhoneID">
                <description>remote Phone ID</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="receivedSMS">
                <description>Received SMS content</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="errorNumber">
                <description>Error number out</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sendSMS">
                <description>Send SMS</description>
            </eventListenerPort>
            <eventListenerPort id="makePhoneCall">
                <description>Make Phone Call</description>
            </eventListenerPort>
            <eventListenerPort id="acceptPhoneCall">
                <description>Accept phone call</description>
            </eventListenerPort>
            <eventListenerPort id="dropPhoneCall">
                <description>Drop phone call</description>
            </eventListenerPort>
            <eventListenerPort id="reconnect">
                <description>Reconnect to the phone</description>
            </eventListenerPort>
            <eventTriggererPort id="idleState">
                <description>Phone is in the idle state</description>
            </eventTriggererPort>
            <eventTriggererPort id="ringState">
                <description>Ring state</description>
            </eventTriggererPort>
            <eventTriggererPort id="connectedState">
                <description>Phone is connected</description>
            </eventTriggererPort>
            <eventTriggererPort id="newSMS">
                <description>There is a new message</description>
            </eventTriggererPort>
            <eventTriggererPort id="error">
                <description>Error event</description>
            </eventTriggererPort>
        </events>    
        <properties>
        	<property description="Default phone number" name="defaultPhoneID" type="string" value=""/>
            <property description="Bluetooth phone name" name="bluetoothPhoneName" type="string" value=""/>
            <property description="Phone server port number" name="port" type="integer" value="-1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.ponggame.PongGameInstance" id="asterics.PongGame">
        <type subtype="Others">actuator</type>
        <singleton>false</singleton>
        <description>Plugin displays a pong game in the AsTeRICS GUI</description>
        <ports>
			<inputPort id="playerOnePos">
				<description>range 0 to 300 will move paddle of player 1 to this position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerTwoPos">
				<description>range 0 to 300 will move paddle of player 2 to this position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerOneSpeed">
				<description>range -10 to 10 will move paddle up or down at specified speed</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerTwoSpeed">
				<description>range -10 to 10 will move paddle up or down at specified speed</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<outputPort id="ballX">
				<description>current X position of the Ball</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="ballY">
				<description>current Y position of the Ball</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="startGame">
				<description>incoming event will start the game</description>
			</eventListenerPort>
			<eventListenerPort id="playerOneToggleDirection">
				<description>incoming event will switch paddle direction in event and speed controlled drive</description>
			</eventListenerPort>
			<eventListenerPort id="playerTwoToggleDirection">
				<description>incoming event will switch paddle direction in event and speed controlled drive</description>
			</eventListenerPort>
			<eventListenerPort id="playerTwoMovement">
				<description>incoming event will add points/calories for player 2 (and move paddle in event controlled drive)</description>
			</eventListenerPort>
			<eventListenerPort id="playerOneMovement">
				<description>incoming event will add point for player 1 (and move paddle in event controlled drive)</description>
			</eventListenerPort>

			<eventTriggererPort id="gameOver">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="goalPlayerOne">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="goalPlayerTwo">
				<description>etp description</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="Position//Speed//Event" description="selects the type of drive control (position input ports, speed input ports or event ports)" name="controlMode" type="integer" value="1"/>
			<property description="speed to be multiplied by speed input (only in speed controlled drive)" name="speedStep" type="double" value="0.2"/>
			<property description="how many goals to win a game" name="goalsToWin" type="integer" value="3"/>
			<property description="mapping of input events to calories (0 = deactivate calory events and screens)" name="eventsToCaloryMultiplier" type="double" value="0.0"/>
			<property description="Base amount of points for a goal" name="goalScoreBase" type="integer" value="1000"/>
			<property description="Base amount of points for touching the ball with the paddle" name="goalTouchBase" type="integer" value="10"/>
			<property description="time to wait after reset of ball" name="resetWaitTime" type="integer" value="2000"/>
			<property description="top speed of ball" name="maxSpeed" type="double" value="5.0"/>
			<property description="speed threshold for x movement to avoid stalled game" name="minXSpeed" type="double" value="1.0"/>
			<property description="Base amount of y force applied to ball on touch to rectangular paddle" name="reflectionYImpulse" type="double" value="0.5"/>
			<property description="sound to be played when ball touches paddle" name="soundFilePaddleTouch" type="string" value="data/sounds/pong_2.wav"/>
			<property description="sound to be played when ball touches bounds" name="soundFileBoundsTouch" type="string" value="data/sounds/pong_1.wav"/>
			<property description="sound to be played when ball touches bounds" name="soundFileGoal" type="string" value="data/sounds/pong_3.wav"/>
			<property description="sound to be played when game ends" name="soundFileEndGame" type="string" value="data/sounds/pong_3.wav"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.platformdigitalout.PlatformDigitalOutInstance" id="asterics.PlatformDigitalOut">
        <type subtype="Personal Platform">actuator</type>
        <singleton>true</singleton>
        <description>Control for the digital outputs of the Personal Platform</description>
        <ports>
            <inputPort id="command">
                <description>Commands for switching outputs (on/off/toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOut1">
                <description>An incoming event switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOut2">
                <description>An incoming event switches Output2 to high level</description>
            </eventListenerPort>
<!--             
            <eventListenerPort id="setOut3">
                <description>An incoming event switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOut4">
                <description>An incoming event switches Output4 to high level</description>
            </eventListenerPort>
 -->
            <eventListenerPort id="clearOut1">
                <description>An incoming event switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOut2">
                <description>An incoming event switches Output2 to low level</description>
            </eventListenerPort>
<!-- 
            <eventListenerPort id="clearOut3">
                <description>An incoming event switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOut4">
                <description>An incoming event switches Output4 to low level</description>
            </eventListenerPort>
 -->
        </events>        
        <properties>
            <property description="Defines if pullup resistor of output 1 should be activated" name="pullupOutput1" type="boolean" value="false"/>
            <property description="Defines if pullup resistor of output 2 should be activated" name="pullupOutput2" type="boolean" value="false"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.platformlcd.PlatformLCDInstance" id="asterics.PlatformLCD">
        <type subtype="Personal Platform">actuator</type>
        <singleton>false</singleton>
        <description>LC-Display actuator for Personal Platform display control</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <properties>
        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.remotejoystick.RemoteJoystickInstance" id="asterics.RemoteJoystick">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Joystick emulator, communicates via HID actuator, compatible to PS3 sixaxis / SEGA Virtua Stick </description>
        <ports>
            <inputPort id="joystickX">
                <description>Input port for x-coordinate for joystick (Left-X)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickY">
                <description>Input port for y-coordinate for joystick (Left-Y)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickZ">
                <description>Input port for z-coordinate for joystick (Right-X)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickR">
                <description>Input port for r-coordinate for joystick (Right-Y)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickPov">
                <description>Input port for POV-hat for joystick (Direction)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="pressButton1">
                <description>presses button 1 (Square)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton1">
                <description>releases button 1 (Square)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton2">
                <description>presses button 2 (Cross)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton2">
                <description>releases button 2 (Cross)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton3">
                <description>presses button 3 (Circle)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton3">
                <description>releases button 3 (Circle)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton4">
                <description>presses button 4 (Triangle)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton4">
                <description>releases button 4 (Triangle)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton5">
                <description>presses button 5 (L1)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton5">
                <description>releases button 5 (L1)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton6">
                <description>presses button 6 (R1)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton6">
                <description>releases button 6 (R1)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton7">
                <description>presses button 7 (L2)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton7">
                <description>releases button 7 (L2)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton8">
                <description>presses button 8 (R2)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton8">
                <description>releases button 8 (R2)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton9">
                <description>presses button 9 (Select)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton9">
                <description>releases button 9 (Select)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton10">
                <description>presses button 10 (Start)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton10">
                <description>releases button 10 (Start)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton11">
                <description>presses button 11</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton11">
                <description>releases button 11</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton12">
                <description>presses button 12</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton12">
                <description>releases button 12</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton13">
                <description>presses button 13 (PS)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton13">
                <description>releases button 13 (PS)</description>
            </eventListenerPort>
            <eventListenerPort id="reset">
                <description>resets to default values (no button pressed, axis centered)</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="the minimim time between two update-packets to the joystick HID (in milliseconds)" name="refreshInterval" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.remotekeyboard.RemoteKeyboardInstance" id="asterics.RemoteKeyboard">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Keyboard emulator for remote keyboard input via HID actuator</description>
        <ports>
            <inputPort id="keyCodes">
                <description>input string for keycodes</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="sendKeys">
                <description>On incoming event, all keys in keycode-string are sent</description>
            </eventListenerPort>
            <eventListenerPort id="pressKey">
                <description>On incoming event, the next key in keycode-string is pressed</description>
            </eventListenerPort>
            <eventListenerPort id="holdKey">
                <description>On incoming event, hold the next key in keycode-string</description>
            </eventListenerPort>
            <eventListenerPort id="releaseKey">
                <description>On incoming event, release current keys</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Keycodes to send" name="keyCodeString" type="string" value="a"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                                            
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.remotemouse.RemoteMouseInstance" id="asterics.RemoteMouse">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Remote mouse emulation via HID actuator</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>On incoming event, middle mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>On incoming event, right mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>On incoming event, left mouse button is double-clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>On incoming event, left mouse button is released</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>On incoming event, mouse wheel position is increased</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>On incoming event, mouse wheel position is decreased</description>
            </eventListenerPort>
            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="X and Y values are absolute positions or relative movements" name="absolutePosition" type="boolean" value="true"/>
            <property description="center value for X location" name="centerX" type="integer" value="300"/>                      
            <property description="center value for Y location" name="centerY" type="integer" value="150"/>   
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                                         
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.remotetablet.RemoteTabletInstance" id="asterics.RemoteTablet">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Remote tablet emulation via HID actuator</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>On incoming event, middle mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>On incoming event, right mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>On incoming event, left mouse button is double-clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>On incoming event, left mouse button is released</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>On incoming event, mouse wheel position is increased</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>On incoming event, mouse wheel position is decreased</description>
            </eventListenerPort>
            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
            <eventListenerPort id="activate">
                <description>On incoming event, the mouse activity starts</description>
            </eventListenerPort>
            <eventListenerPort id="deactivate">
                <description>On incoming event, the mouse activity stops</description>
            </eventListenerPort>
            <eventListenerPort id="toggle">
                <description>On incoming event, the mouse activity toggles</description>
            </eventListenerPort>        </events>        
        <properties>
            <property description="X and Y values are absolute positions or relative movements" name="absolutePosition" type="boolean" value="true"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
   
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.serialSender.SerialSenderInstance" id="asterics.serialSender">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="Slot0">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot1">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot2">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot3">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot4">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot5">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot6">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot7">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot8">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot9">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot10">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot11">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot12">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot13">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot14">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot15">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="send">
				<description>elp description</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="property description" name="COMPort" type="string" value="COM0"/>
			<property description="property description" name="debug" type="boolean" value="false"/>
			<property description="property description" name="BaudRate" type="integer" value="600"/>
			<property description="slotValue" name="slot0" type="integer" value="0"/>
			<property description="slotValue" name="slot1" type="integer" value="0"/>
			<property description="slotValue" name="slot2" type="integer" value="0"/>
			<property description="slotValue" name="slot3" type="integer" value="0"/>
			<property description="slotValue" name="slot4" type="integer" value="0"/>
			<property description="slotValue" name="slot5" type="integer" value="0"/>
			<property description="slotValue" name="slot6" type="integer" value="0"/>
			<property description="slotValue" name="slot7" type="integer" value="0"/>
			<property description="slotValue" name="slot8" type="integer" value="0"/>
			<property description="slotValue" name="slot9" type="integer" value="0"/>
			<property description="slotValue" name="slot10" type="integer" value="0"/>
			<property description="slotValue" name="slot11" type="integer" value="0"/>
			<property description="slotValue" name="slot12" type="integer" value="0"/>
			<property description="slotValue" name="slot13" type="integer" value="0"/>
			<property description="slotValue" name="slot14" type="integer" value="0"/>
			<property description="slotValue" name="slot15" type="integer" value="0"/>
			<property description="activate this slot" name="slot0Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot1Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot2Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot3Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot4Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot5Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot6Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot7Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot8Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot9Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot10Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot11Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot12Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot13Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot14Active" type="boolean" value="false"/>
			<property description="activate this slot" name="slot15Active" type="boolean" value="false"/>
			<property description="slot delay to send data" name="slot0Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot1Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot2Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot3Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot4Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot5Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot6Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot7Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot8Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot9Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot10Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot11Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot12Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot13Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot14Delay" type="integer" value="0"/>
			<property description="slot delay to send data" name="slot15Delay" type="integer" value="0"/>

        </properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.actuator.ssvepfilewriter.SSVEPFileWriterInstance" id="asterics.SSVEPFileWriter">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>This plugin writes to a text file the 4 EEG channels along with a software trigger received through the event listener ports</description>
        <ports>
        	<inputPort id="filename">
				<description>Name of the file to be saved</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="channel1">
				<description>Input EEG signal channel 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel2">
				<description>Input EEG signal channel 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel3">
				<description>Input EEG signal channel 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel4">
				<description>Input EEG signal channel 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="StimulationFrequency">
				<description>If a stimulation frequency value is received before the StarStimulation Event the stimulation freqeuncy is appended to the name of the output file to be saved</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="StartTrial">
				<description>An incoming event at this port starts the file writer process </description>
			</eventListenerPort>
			<eventListenerPort id="StopTrial">
				<description>Stops the file writer process</description>
			</eventListenerPort>
			<eventListenerPort id="StartStimulation">
				<description>Sets the trigger channel to the corresponding stimulation frequency value in Hz</description>
			</eventListenerPort>
			<eventListenerPort id="StopStimulation">
				<description>Sets  the trigger channel to zeros </description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="The default file name" name="DefaultFileName" type="string" value="ssveptrial.txt"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.ssvepstimulator.SSVEPStimulatorInstance" id="asterics.SSVEPStimulator">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>SSVEP flickering stimulator</description>
        <ports>
        	<inputPort id="frequency">
				<description>Frequency input for panel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
        </ports>
        <events>
            <eventListenerPort id="startStim">
                <description>On incoming event, flickering starts</description>
            </eventListenerPort>
            <eventListenerPort id="stopStim">
                <description>On incoming event, flickering stops</description>
            </eventListenerPort>
            <eventTriggererPort id="stimPeriodFinished">
				<description>Stimulation period finished</description>
			</eventTriggererPort>
        </events>        
        <properties>
            <property description="bitmap file for stimulation on-phase" name="onBitmapFile" type="string" value="arrow_up"/>
            <property description="bitmap file for stimulation off-phase (if not specified, black color is used)" name="offBitmapFile" type="string" value=""/>
            <property description="x-position of the flashing icon" name="xPosition" type="integer" value="100"/>
            <property description="y-position of the flashing icon" name="yPosition" type="integer" value="100"/>
            <property description="the flickering frequency in Hz" name="frequency" type="integer" value="10"/>
            <property description="the stimulation duration in milliseconds" name="msec" type="integer" value="3000"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.syntheticvoice.SyntheticVoiceInstance" id="asterics.SyntheticVoice">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Uses SAPI technology to generate synthetic voice</description>
        <ports>
            <inputPort id="input">
                <description>Text to speak</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <properties>
        	<property description="Volume of the voice" name="volume" type="integer" value="100"/>
            <property description="Speed of the voice" name="speed" type="integer" value="0"/>
            <property description="Name of the voice used." name="voice" type="string" value=""/>
            <property description="Defines if the xml tags in the string are supported" name="xmlTags" type="boolean" value="false"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.teensyrcprototype.TeensyRCprototypeInstance" id="asterics.TeensyRCprototype">
        <type subtype="Others">actuator</type>
        <singleton>false</singleton>
        <description>Remote Control for radio-controlled toy models</description>
        <ports>
			<inputPort id="channel1">
				<description>Channel1 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel2">
				<description>Channel2 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel3">
				<description>Channel3 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel4">
				<description>Channel4 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel5">
				<description>Channel5 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel6">
				<description>Channel6 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel7">
				<description>Channel7 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel8">
				<description>Channel8 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

        </ports>
		<events>

		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.textdisplay.TextDisplayInstance" id="asterics.TextDisplay">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays text.</description>
        <ports>
			<inputPort id="input">
				<description>Input string port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
		    <eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>
            <eventTriggererPort id="clicked">
                <description>component clicked</description>
            </eventTriggererPort>		
		</events>			
        <properties>
        	<property description="Caption of the component" name="caption" type="string" value="Text Display"/>
			<property description="Defalult text" name="default" type="string" value=""/>
			<property combobox="left//center//right" description="Position of the text" name="textPosition" type="integer" value="1"/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of text" name="textColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/> 
        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.textarea.TextAreaInstance" id="asterics.TextArea">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays text.</description>
        <ports>
			<inputPort id="setText">
				<description>Input string to set the text area</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="appendText">
				<description>Input string to append the text area</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<outputPort id="text">
				<description>outputs the text area on incoming send event</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		    <eventListenerPort id="delete">
                <description>deletes one character</description>
            </eventListenerPort>
		    <eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>
		    <eventListenerPort id="send">
                <description>sends the text</description>
            </eventListenerPort>
		    <eventListenerPort id="sendAndClear">
                <description>sends and clears the text</description>
            </eventListenerPort>
            <eventTriggererPort id="clicked">
                <description>component clicked</description>
            </eventTriggererPort>		
		</events>			
        <properties>
        	<property description="Caption of the component" name="caption" type="string" value="Text Display"/>
			<property description="Default Text" name="default" type="string" value=""/>
			<property description="is the text area editable by the user ?" name="editable" type="boolean" value="false"/>
			<property description="the font size" name="fontSize" type="integer" value="14"/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of text" name="textColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/> 
        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.tonegenerator.ToneGeneratorInstance" id="asterics.ToneGenerator">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Plays a tone with a given frequency for a given time</description>
        <ports>
			<inputPort id="frequencyLeft">
				<description>frequency of the left channel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="frequencyRight">
				<description>frequency of the right channel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

        </ports>
		<events>
			<eventListenerPort id="play">
				<description>plays the tone</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stops the tone</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="sample rate" name="samplerate" type="integer" value="44100"/>
			<property description="play frequencies on separate channels" name="separate channels" type="boolean" value="true"/>
			<property combobox="sine//square//sawtooth" description="defines the waveform for the generated tone" name="waveform" type="integer" value="0"/>				
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.actuator.wavefileplayer.WavefilePlayerInstance" id="asterics.WavefilePlayer">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Plays .Wav - soundfiles on event or filename reception. </description>
        <ports>
            <inputPort id="wavefileName">
                <description>Filename of wave file to be played (absolute path)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="Start">
                <description>An incoming event starts the wav file playback</description>
                </eventListenerPort>
            <eventListenerPort id="Stop">
                <description>An incoming event stops the wav file playback</description>
            </eventListenerPort>
             <eventListenerPort id="VolumeUp">
                <description>An incoming event puts the volume up</description>
            </eventListenerPort>
             <eventListenerPort id="VolumeDown">
                <description>An incoming event puts the volume down</description>
            </eventListenerPort>
            
        </events>        
        <properties>
            <property description="Wav file to be played." getStringList="true" name="filename" type="string" value=""/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.actuator.writeedf.WriteEDFInstance" id="asterics.WriteEDF">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>This plugin records the incoming data into an EDF file</description>
        <ports>
			<inputPort id="CH1">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH5">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH6">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH7">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH8">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>


        </ports>
		<events>


		</events>			
        <properties>
			<property description="ID of the recorded subject" name="patientID" type="string" value="undefined"/>
			<property description="name of the recording file" name="FileName" type="string" value="record"/>
			<property description="incoming data will be re-sampled according to the set frequency" name="reSampling" type="boolean" value="false"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH1" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH2" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH3" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH4" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH5" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH6" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH7" type="integer" value="100"/>
			<property description="sampling rate for the corresponding channel" name="SamplingRateCH8" type="integer" value="100"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH1" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH2" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH3" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH4" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH5" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH6" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH7" type="integer" value="-32768"/>
			<property description="physical minimum of the corresponding  channel" name="PhysicalMinimumCH8" type="integer" value="-32768"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH1" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH2" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH3" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH4" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH5" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH6" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH7" type="integer" value="32767"/>
			<property description="physical maximum of the corresponding  channel" name="PhysicalMaximumCH8" type="integer" value="32767"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH1" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH2" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH3" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH4" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH5" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH6" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH7" type="integer" value="-32768"/>
			<property description="digital minimum of the corresponding  channel" name="DigitalMinimumCH8" type="integer" value="-32768"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH1" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH2" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH3" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH4" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH5" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH6" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH7" type="integer" value="32767"/>
			<property description="digital maximum of the corresponding  channel" name="DigitalMaximumCH8" type="integer" value="32767"/>
		</properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.adjustmentcurve.AdjustmentCurveInstance" id="asterics.AdjustmentCurve">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>AdjustmentCurve</description>
        <ports>
            <inputPort id="in">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="curveName">
                <description>Input port for curve to load from file</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output port for modified signal</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
		<events>
			<eventListenerPort id="displayGui">
				<description>display the Graphical User Interface</description>
			</eventListenerPort>
			<eventListenerPort id="hideGui">
				<description>hide the Graphical User Interface</description>
			</eventListenerPort>
			<eventListenerPort id="loadCurve">
				<description>load curve points from file</description>
			</eventListenerPort>
			<eventListenerPort id="saveCurve">
				<description>save curve points to file</description>
			</eventListenerPort>
		</events>			        
        <properties>
            <property description="file to store the curve points" name="filename" type="string" value="curve1"/> 
            <property description="if selected, the GUI is displayed " name="displayGui" type="boolean" value="true"/> 
            <property description="minimum input value" name="inMin" type="double" value="0"/>
            <property description="maximum input value" name="inMax" type="double" value="1000"/>
            <property description="minimum output value" name="outMin" type="double" value="0"/>
            <property description="maximum output value" name="outMax" type="double" value="1000"/>
            <property combobox="clip to min and max//autoupdate min and max" description="how to deal with input values exceeding min or max" name="mode" type="integer" value="1"/> 
            <property description="font size of dotmeter captions" name="fontSize" type="integer" value="14"/>
            <property description="caption of the curve window" name="caption" type="string" value="signal mapper"/>                                                       
        </properties>
        <gui>
            <width>5000</width>
            <height>5000</height>
        </gui>
    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.amplifier.AmplifierInstance" id="asterics.Amplifier">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Multiplies input with a proportional factor</description>
        <ports>
            <inputPort id="sigIn">
                <description>Input port of amplifier</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="sigOut">
                <description>Output port of amplifier</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="The factor to multiply input with" name="factor" type="double" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.arduino.ArduinoInstance" id="asterics.Arduino">
        <type subtype="Microcontroller Interface">processor</type>
        <singleton>false</singleton>
        <description>Arduino Microcontroller CIM</description>
        <ports>
			<inputPort id="pwm3">
				<description>PWM value for Pin3 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="pwm5">
				<description>PWM value for Pin5 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="pwm6">
				<description>PWM value for Pin6 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="A0">
				<description>Analog Value Channel 0</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A1">
				<description>Analog Value Channel1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A2">
				<description>Analog Value Channel2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A3">
				<description>Analog Value Channel3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A4">
				<description>Analog Value Channel4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A5">
				<description>Analog Value Channel5</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="setPin2">
				<description>set Pin2 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin2">
				<description>set Pin2 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin3">
				<description>set Pin3 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin3">
				<description>set Pin3 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin4">
				<description>set Pin4 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin4">
				<description>set Pin4 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin5">
				<description>set Pin5 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin5">
				<description>set Pin5 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin6">
				<description>set Pin6 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin6">
				<description>set Pin6 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin7">
				<description>set Pin7 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin7">
				<description>set Pin7 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin8">
				<description>set Pin8 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin8">
				<description>set Pin8 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin9">
				<description>set Pin9 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin9">
				<description>set Pin9 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin10">
				<description>set Pin10 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin10">
				<description>set Pin10 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin11">
				<description>set Pin11 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin11">
				<description>set Pin11 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin12">
				<description>set Pin12 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin12">
				<description>set Pin12 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin13">
				<description>set Pin13 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin13">
				<description>set Pin13 to 0V</description>
			</eventListenerPort>

			<eventTriggererPort id="pin2ChangedLowToHigh">
				<description>input on Pin2 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin2ChangedHighToLow">
				<description>input on Pin2 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin3ChangedLowToHigh">
				<description>input on Pin3 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin3ChangedHighToLow">
				<description>input on Pin3 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin4ChangedLowToHigh">
				<description>input on Pin4 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin4ChangedHighToLow">
				<description>input on Pin4 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin5ChangedLowToHigh">
				<description>input on Pin5 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin5ChangedHighToLow">
				<description>input on Pin5 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin6ChangedLowToHigh">
				<description>input on Pin6 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin6ChangedHighToLow">
				<description>input on Pin6 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin7ChangedLowToHigh">
				<description>input on Pin7 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin7ChangedHighToLow">
				<description>input on Pin7 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin8ChangedLowToHigh">
				<description>input on Pin8 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin8ChangedHighToLow">
				<description>input on Pin8 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin9ChangedLowToHigh">
				<description>input on Pin9 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin9ChangedHighToLow">
				<description>input on Pin9 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin10ChangedLowToHigh">
				<description>input on Pin10 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin10ChangedHighToLow">
				<description>input on Pin10 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin11ChangedLowToHigh">
				<description>input on Pin11 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin11ChangedHighToLow">
				<description>input on Pin11 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin12ChangedLowToHigh">
				<description>input on Pin12 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin12ChangedHighToLow">
				<description>input on Pin12 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin13ChangedLowToHigh">
				<description>input on Pin13 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin13ChangedHighToLow">
				<description>input on Pin13 changed from high to low</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="automatic update of ADC values (time in milliseconds, 0=off)" name="periodicADCUpdate" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 2 Mode" name="pin2Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz" description="Pin 3 Mode" name="pin3Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 4 Mode" name="pin4Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz" description="Pin 5 Mode" name="pin5Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz" description="Pin 6 Mode" name="pin6Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 7 Mode" name="pin7Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 8 Mode" name="pin8Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 9 Mode" name="pin9Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 10 Mode" name="pin10Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 11 Mode" name="pin11Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 12 Mode" name="pin12Mode" type="integer" value="0"/>
			<property combobox="not used//input without pullup//input with pullup//output, default low//output, default high" description="Pin 13 Mode" name="pin13Mode" type="integer" value="0"/>

        </properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.processor.audioselector.AudioSelectorInstance" id="asterics.AudioSelector">
        <type subtype="Audio and Voice">processor</type>
        <singleton>true</singleton>
        <description>This plug-in manages the audio tracks present in the data/music folder and different external request working as an interface with the wavefileplayer plug-in</description>
        <ports>

			<outputPort id="TrackName">
				<description>Name of the Track to be played</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="StartStop">
				<description>Togle between play stop state</description>
			</eventListenerPort>
			<eventListenerPort id="NextTrack">
				<description>Play next track</description>
			</eventListenerPort>
			<eventListenerPort id="VolumeUp">
				<description>Put the volume up</description>
			</eventListenerPort>
			<eventListenerPort id="VolumeDown">
				<description>Put the volume down</description>
			</eventListenerPort>

			<eventTriggererPort id="Play">
				<description>Play Track Request</description>
			</eventTriggererPort>
			<eventTriggererPort id="Pause">
				<description>Stop Track Request</description>
			</eventTriggererPort>
			<eventTriggererPort id="VolumeUp">
				<description>Volume Up request</description>
			</eventTriggererPort>
			<eventTriggererPort id="VolumeDown">
				<description>Volume Down Request</description>
			</eventTriggererPort>
						<eventTriggererPort id="NextTrack">
				<description>Play Next Track Request</description>
			</eventTriggererPort>

		</events>			
        <properties>

        </properties>

    </componentType>


<componentType canonical_name="eu.asterics.component.processor.averager.AveragerInstance" id="asterics.Averager">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Linked list-based averager or accumulator</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port of averaged/accumulated values</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="The size of the averager's buffer or milliseconds to accumulate" name="bufferSize" type="integer" value="50"/>
            <property combobox="average//averager with integer output//accumulate for n milliseconds" description="The averager or accumulator mode" name="mode" type="integer" value="0"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.basictralgorithms.BasicTRalgorithmsInstance" id="asterics.BasicTRalgorithms">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Basic tremor reduction algorithms</description>
        <ports>
			<inputPort id="inputX">
				<description>Mouse X input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputY">
				<description>Mouse Y input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="bufferSize">
				<description>New buffer size value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="maxDistance">
				<description>New max distance value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="factor">
				<description>New factor value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="outputX">
				<description>Mouse X output port</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputY">
				<description>Mouse Y output port</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property combobox="Arithmetic Mean//Outlier-Reduction//Exponential Smoothing" description="Algorithm used for tremor reduction" name="algorithm" type="integer" value="0"/>
			<property combobox="Absolute positions//Relative movements" description="Type of the mouse events" name="eventsType" type="integer" value="0"/>
			<property description="Arithmetic Middle algorithm parameter" name="bufferSize" type="integer" value="20"/>
			<property description="Outlier-Reduction algorithm parameter" name="maxDistance" type="double" value="10"/>
			<property description="Exponential Smoothing algorithm parameter" name="factor" type="double" value="0.5"/>
			<property combobox="1//2//3//4" description="Degree of Exponential Smoothing algorithm" name="degree" type="integer" value="0"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.benchmark.BenchmarkInstance" id="asterics.Benchmark">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Measures incoming data or events per time</description>
        <ports>
            <inputPort id="in">
                <description>Input port for numerics values</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        	<outputPort id="dataCount">
                <description>Data received per time</description>
                <dataType>integer</dataType>
            </outputPort>
        	<outputPort id="eventCount">
                <description>Number of events per time</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="eventIncrease">
                <description>Received event increases event counter</description>
            </eventListenerPort>
            <eventListenerPort id="resetCounter">
                <description>Resets benchmark counters to zero</description>
            </eventListenerPort>
        </events>         
        <properties>
            <property description="The time for counting/update in miliseconds" name="time" type="integer" value="1000"/>
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.processor.blinkdetector.BlinkDetectorInstance" id="asterics.BlinkDetector">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Blink detector. It detects both a simple and a double blinks</description>
        <ports>
			<inputPort id="Input">
				<description>Input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<outputPort id="Filtered Sample">
				<description>Output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Differential">
				<description>Output port 1</description>
				<dataType>double</dataType>
			</outputPort>


        </ports>
		<events>

			<eventTriggererPort id="BlinkDetected">
				<description>Blink detection</description>
			</eventTriggererPort>
			<eventTriggererPort id="DoubleblinkDetected">
				<description>Double blink detection</description>
			</eventTriggererPort>
 
		</events>			
        <properties>
			<property description="The signal sample rate" name="SampleRate" type="integer" value="250"/>
			<property description="The value used to tune the maximum threshold (for the positive slope of the derivative) that determines whether the signal is behaving as an eye blink" name="maxThreshold" type="integer" value="10000"/>
			<property description="The value used to tune the minimum threshold (for the negative slope in the derivative) that determines whether the signal is behaving as an eye blink" name="minThreshold" type="integer" value="-10000"/>
			<property description="Maximum length of the blink in milliseconds" name="BlinkLength" type="integer" value="300"/>
			<property description="Maximum separation between blinks to be considered as double blink" name="DoubleBlinkSeparation" type="integer" value="500"/>
		</properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.processor.blinkdetectortrainer.BlinkDetectorTrainerInstance" id="asterics.BlinkDetectorTrainer">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>Blink detector trainer</description>
        <ports>
			<inputPort id="Input">
				<description>EOG signal with blinks</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="Protocol">
				<description>Instruction and results to the GUI</description>
				<dataType>string</dataType>
			</outputPort>

			<outputPort id="Results">
				<description>Parameters to be used in the Blink detector</description>
				<dataType>string</dataType>
			</outputPort>
		</ports>
		<events>
			<eventListenerPort id="StartProtocol">
				<description>Start protocol event listener</description>
			</eventListenerPort>


			<eventListenerPort id="StopProtocol">
				<description>Stop protocol event listener</description>
				</eventListenerPort>
		</events>			
        <properties>
			<property combobox="English//Spanish" description="Instrucion language" name="language" type="integer" value="0"/>

			<property description="Sample rate of the incoming signal (in samples / second)" name="sampleRate" type="integer" value="250"/>
		</properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.comparator.ComparatorInstance" id="asterics.Comparator">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Comparator for two inputs</description>
        <ports>
            <inputPort id="inA">
                <description>Input port 1 of comparator</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inB">
                <description>Input port 2 of comparator</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
            <outputPort id="output">
                <description>Output signal of comparator</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>

            <eventTriggererPort id="conditionTrue">
                <description>Event port triggers if condition becomes true</description>
            </eventTriggererPort>
            <eventTriggererPort id="conditionFalse">
                <description>Event port triggers if condition becomes false</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property combobox="a greater b//a equals b//a lower b//a greater threshold//a equals threshold//a lower threshold//a between threshold and threshold2" description="condition for even generation" name="condition" type="integer" value="0"/>
            <property combobox="output max//output min//output a if condition met" description="mode for output signal" name="outputMode" type="integer" value="2"/>
            <property combobox="create event only if condition changes//create event on every incoming value" description="mode for event generation" name="eventMode" type="integer" value="0"/>
            <property description="threshold for signal comparison with constant value" name="threshold" type="double" value="1"/>
            <property description="threshold2 for signal range comparison (a between threshold and threshold2)" name="threshold2" type="double" value="10"/>
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.processor.computebandpower.ComputeBandPowerInstance" id="asterics.ComputeBandpower">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>FFT plus Power In Band processor</description>
        <ports>
            <inputPort id="input">
				<description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="Length of the data vector in the input port. Only power of two values are permitted" name="DataLen" type="integer" value="1024"/>
            <property description="Sample rate in sample per seconds" name="SampleRate" type="integer" value="250"/>
            <property description="Start of the band under analysis" name="StartBandFrequency" type="integer" value="0"/>
            <property description="End of the band under analysis" name="EndBandFrequency" type="integer" value="125"/>
            <property description="PSD computing rate as a % of DataLen" name="PsdComputingRate" type="integer" value="100"/>
       </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.constantdispatcher.ConstantDispatcherInstance" id="asterics.ConstantDispatcher">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Send double values from chosen slot</description>
        <ports>
            <outputPort id="output">
                <description>Output value</description>
                <dataType>double</dataType>
            </outputPort>
            <inputPort id="slotDispatch">
                <description>Send the value from the slot defined by number</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="dispatchSlot1">
                <description>Send double value from slot 1</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot2">
                <description>Send double value from slot 2</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot3">
                <description>Send double value from slot 3</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot4">
                <description>Send double value from slot 4</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot5">
                <description>Send double value from slot 5</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot6">
                <description>Send double value from slot 6</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot7">
                <description>Send double value from slot 7</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot8">
                <description>Send double value from slot 8</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot9">
                <description>Send double value from slot 9</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot10">
                <description>Send double value from slot 10</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot11">
                <description>Send double value from slot 11</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot12">
                <description>Send double value from slot 12</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot13">
                <description>Send double value from slot 13</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot14">
                <description>Send double value from slot 14</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot15">
                <description>Send double value from slot 15</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot16">
                <description>Send double value from slot 16</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot17">
                <description>Send double value from slot 17</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot18">
                <description>Send double value from slot 18</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot19">
                <description>Send double value from slot 19</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot20">
                <description>Send double value from slot 20</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchNextSlot">
                <description>Send double value from the next slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchPreviousSlot">
                <description>Send double value from the previous slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlotSeries">
                <description>Send slots values in sequence from slot 1 to slot defined by the Number property with the delay defined by the Delay property</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Number of used slots" name="number" type="integer" value="20"/>
            <property description="Delay in ms used in sequence slot dispatch" name="delay" type="integer" value="300"/>
            <property description="Slot 1 value" name="slot1" type="double" value="0"/>
            <property description="Slot 2 value" name="slot2" type="double" value="0"/>
            <property description="Slot 3 value" name="slot3" type="double" value="0"/>
            <property description="Slot 4 value" name="slot4" type="double" value="0"/>
            <property description="Slot 5 value" name="slot5" type="double" value="0"/>
            <property description="Slot 6 value" name="slot6" type="double" value="0"/>
            <property description="Slot 7 value" name="slot7" type="double" value="0"/>
            <property description="Slot 8 value" name="slot8" type="double" value="0"/>
            <property description="Slot 9 value" name="slot9" type="double" value="0"/>
            <property description="Slot 10 value" name="slot10" type="double" value="0"/>
            <property description="Slot 11 value" name="slot11" type="double" value="0"/>
            <property description="Slot 12 value" name="slot12" type="double" value="0"/>
            <property description="Slot 13 value" name="slot13" type="double" value="0"/>
            <property description="Slot 14 value" name="slot14" type="double" value="0"/>
            <property description="Slot 15 value" name="slot15" type="double" value="0"/>
            <property description="Slot 16 value" name="slot16" type="double" value="0"/>
            <property description="Slot 17 value" name="slot17" type="double" value="0"/>
            <property description="Slot 18 value" name="slot18" type="double" value="0"/>
            <property description="Slot 19 value" name="slot19" type="double" value="0"/>
            <property description="Slot 20 value" name="slot20" type="double" value="0"/>
            <property description="Number of slot which is automatically sent at start (0=disable)" name="autosendSlot" type="integer" value="0"/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.deadzone.DeadzoneInstance" id="asterics.Deadzone">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Defines active/passive Zone for x/y values</description>
        <ports>
            <inputPort id="inX">
                <description>Input port for x value</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inY">
                <description>Input port for y value</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="radius">
                <description>Input port for deadzone radius</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="outX">
                <description>Output port for x value</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="outY">
                <description>Output port for y value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="setCenter">
                <description>Incoming Event stores current x/y values as center values</description>
            </eventListenerPort>
            <eventTriggererPort id="enterZone">
                <description>Event fired if zone is entered</description>
            </eventTriggererPort>
            <eventTriggererPort id="exitZone">
                <description>Event fired if zone is left</description>
            </eventTriggererPort>
            
        </events>
        
        <properties>
            <property description="x offset of the center" name="xCenter" type="double" value="0"/>
            <property description="y offset of the center" name="yCenter" type="double" value="0"/>
            <property description="Radius of the zone" name="radius" type="double" value="10"/>
            <property combobox="only inner values//only outer values//deadzone" description="Mode of operation (deadzone: starts with 0 when outer zone reached)" name="mode" type="integer" value="0"/>
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.processor.decimation.DecimationInstance" id="asterics.Decimation">
        <type subtype="Basic Math">processor</type>
        <singleton>true</singleton>
        <description>Decimation processor</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>boolean</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="Down sampling ratio" name="DownSamplingRatio" type="integer" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.processor.derivative.DerivativeInstance" id="asterics.Derivative">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Derivative processor</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="sample frequency of the input signal" name="SampleFrequency" type="integer" value="250"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.differentiate.DifferentiateInstance" id="asterics.Differentiate">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Differentiate (subtract last input value from input value)</description>
        <ports>
            <inputPort id="in">
                <description>Input port of differentiate</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output result value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>

        <properties>
            <property description="The reset value" name="resetValue" type="double" value="0"/>
        </properties>
    </componentType>


 <componentType canonical_name="com.starlab.component.processor.dissimilarity.DissimilarityInstance" id="asterics.Dissimilarity">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Dissimilarity processor</description>
        <ports>
            <inputPort id="input1">
                <description>Input port 1</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port 2</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="Length of the of signals over what to calculate the dissimilarity" name="DataLen" type="integer" value="100"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.doubletostring.DoubleToStringInstance" id="asterics.DoubleToString">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts double to string</description>
        <ports>
			<inputPort id="input">
				<description>Double input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port.</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.eventblock.EventBlockInstance" id="asterics.EventBlock">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Pass or block event</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Event input port</description>
			</eventListenerPort>
			<eventListenerPort id="pass">
				<description>Pass events</description>
			</eventListenerPort>
			<eventListenerPort id="block">
				<description>Block events</description>
			</eventListenerPort>
			<eventListenerPort id="change">
				<description>Change the pass/block state to the opposed.</description>
			</eventListenerPort>

			<eventTriggererPort id="output">
				<description>Event output port</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Initial state is block." name="block" type="boolean" value="false"/>
			<property description="Block the event pass after the event is passed" name="blockAfterEvent" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.eventcascade.EventCascadeInstance" id="asterics.EventCascade">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>allows to specify a sequence of events with arbitrary delay times and loops</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="nextEvent">
				<description>fires next event trigger</description>
			</eventListenerPort>
			<eventListenerPort id="previousEvent">
				<description>fires previous event trigger</description>
			</eventListenerPort>
			<eventListenerPort id="startCascade">
				<description>starts event cascade (from current trigger to last trigger)</description>
			</eventListenerPort>
			<eventListenerPort id="stopCascade">
				<description>stops event cascade</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>resets current trigger position to first trigger</description>
			</eventListenerPort>

			<eventTriggererPort id="trigger1">
				<description>trigger slot 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger2">
				<description>trigger slot 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger3">
				<description>trigger slot 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger4">
				<description>trigger slot 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger5">
				<description>trigger slot 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger6">
				<description>trigger slot 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger7">
				<description>trigger slot 7</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger8">
				<description>trigger slot 8</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger9">
				<description>trigger slot 9</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger10">
				<description>trigger slot 10</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger11">
				<description>trigger slot 11</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger12">
				<description>trigger slot 12</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger13">
				<description>trigger slot 13</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger14">
				<description>trigger slot 14</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger15">
				<description>trigger slot 15</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Number of active trigger slots" name="activeTriggers" type="integer" value="4"/>
			<property description="How many loops (0=endless)" name="loops" type="integer" value="0"/>
			<property description="automatically start event cascade at model startup" name="autoStart" type="boolean" value="false"/>
			<property description="delay time before trigger 1 will be fired (in milliseconds)" name="delayBeforeTrigger1" type="integer" value="500"/>
			<property description="delay time before trigger 2 will be fired (in milliseconds)" name="delayBeforeTrigger2" type="integer" value="500"/>
			<property description="delay time before trigger 3 will be fired (in milliseconds)" name="delayBeforeTrigger3" type="integer" value="500"/>
			<property description="delay time before trigger 4 will be fired (in milliseconds)" name="delayBeforeTrigger4" type="integer" value="500"/>
			<property description="delay time before trigger 5 will be fired (in milliseconds)" name="delayBeforeTrigger5" type="integer" value="500"/>
			<property description="delay time before trigger 6 will be fired (in milliseconds)" name="delayBeforeTrigger6" type="integer" value="500"/>
			<property description="delay time before trigger 7 will be fired (in milliseconds)" name="delayBeforeTrigger7" type="integer" value="500"/>
			<property description="delay time before trigger 8 will be fired (in milliseconds)" name="delayBeforeTrigger8" type="integer" value="500"/>
			<property description="delay time before trigger 9 will be fired (in milliseconds)" name="delayBeforeTrigger9" type="integer" value="500"/>
			<property description="delay time before trigger 10 will be fired (in milliseconds)" name="delayBeforeTrigger10" type="integer" value="500"/>
			<property description="delay time before trigger 11 will be fired (in milliseconds)" name="delayBeforeTrigger11" type="integer" value="500"/>
			<property description="delay time before trigger 12 will be fired (in milliseconds)" name="delayBeforeTrigger12" type="integer" value="500"/>
			<property description="delay time before trigger 13 will be fired (in milliseconds)" name="delayBeforeTrigger13" type="integer" value="500"/>
			<property description="delay time before trigger 14 will be fired (in milliseconds)" name="delayBeforeTrigger14" type="integer" value="500"/>
			<property description="delay time before trigger 15 will be fired (in milliseconds)" name="delayBeforeTrigger15" type="integer" value="500"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.eventcounter.EventCounterInstance" id="asterics.EventCounter">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Two-direction event counter</description>
        <ports>
        	<outputPort id="output">
                <description>Sends the number of events</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="increase">
                <description>Increases the number of events</description>
            </eventListenerPort>
            <eventListenerPort id="decrease">
                <description>Decreases the number of events</description>
            </eventListenerPort>
            <eventListenerPort id="resetToZero">
                <description>Sets the event number to zero</description>
            </eventListenerPort>
            <eventListenerPort id="resetToInitial">
                <description>Sets the event number to the initial value</description>
            </eventListenerPort>
        </events>         
        <properties>
            <property combobox="no limit//limit maximum//limit minimum//limit minimum and maximum" description="the mode of operation" name="mode" type="integer" value="0"/>
            <property description="the minimum value" name="minValue" type="integer" value="0"/>
            <property description="the maximum value" name="maxValue" type="integer" value="1000"/>
            <property description="the initial value" name="initialValue" type="integer" value="0"/>
            <property description="if selected, exceeding the max value will wrap to the min value and vice versa" name="wrapAround" type="boolean" value="false"/>
            <property description="if selected, the initial value is sent at startup" name="sendInitialValue" type="boolean" value="false"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.eventdelay.EventDelayInstance" id="asterics.EventDelay">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Delalys events</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Input port for the events</description>
			</eventListenerPort>

			<eventTriggererPort id="output">
				<description>Output port for the events.</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Event delay (ms)" name="delay" type="integer" value="100"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.eventdispatcher.EventdispatcherInstance" id="asterics.EventDispatcher">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Translates incoming command strings into events</description>
        <ports>
            <inputPort id="cmd">
                <description>Input port for commands</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event fired if input cmd = command1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event fired if input cmd = command2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event fired if input cmd = command3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event fired if input cmd = command4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event fired if input cmd = command5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event fired if input cmd = command6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event fired if input cmd = command7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand8">
                <description>Event fired if input cmd = command8</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand9">
                <description>Event fired if input cmd = command9</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand10">
                <description>Event fired if input cmd = command10</description>
            </eventTriggererPort>
        </events>
        
        <properties>
            <property description="Command for event 1" name="command1" type="string" value=""/>
            <property description="Command for event 2" name="command2" type="string" value=""/>
            <property description="Command for event 3" name="command3" type="string" value=""/>
            <property description="Command for event 4" name="command4" type="string" value=""/>
            <property description="Command for event 5" name="command5" type="string" value=""/>
            <property description="Command for event 6" name="command6" type="string" value=""/>
            <property description="Command for event 7" name="command7" type="string" value=""/>
            <property description="Command for event 8" name="command8" type="string" value=""/>
            <property description="Command for event 9" name="command9" type="string" value=""/>
            <property description="Command for event 10" name="command10" type="string" value=""/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.eventflipflop.EventFlipFlopInstance" id="asterics.EventFlipFlop">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Event Flip-flop: First event-in fires event-out1, second event-in fires event-out2, etc.</description>
        <ports/>
        <events>
            <eventListenerPort id="event-in">
                <description>Receive an event and store the state</description>
            </eventListenerPort>
            <eventTriggererPort id="event-out1">
                <description>Fired, if internal state is 0</description>
            </eventTriggererPort>
            <eventTriggererPort id="event-out2">
                <description>Fired, if internal state is 1</description>
            </eventTriggererPort>
        </events>         
        <properties/>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.eventrouter.EventRouterInstance" id="asterics.EventRouter">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>routes incoming events to one of 8 event trigger ports</description>
        <ports>
			<inputPort id="routeIndex">
				<description>Select the route (range 0 - 1)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
        </ports>
		<events>
			<eventListenerPort id="eventIn">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="select1">
				<description>select route 1</description>
			</eventListenerPort>
			<eventListenerPort id="select2">
				<description>select route 2</description>
			</eventListenerPort>
			<eventListenerPort id="select3">
				<description>select route 3</description>
			</eventListenerPort>
			<eventListenerPort id="select4">
				<description>select route 4</description>
			</eventListenerPort>
			<eventListenerPort id="select5">
				<description>select route 5</description>
			</eventListenerPort>
			<eventListenerPort id="select6">
				<description>select route 6</description>
			</eventListenerPort>
			<eventListenerPort id="select7">
				<description>select route 7</description>
			</eventListenerPort>
			<eventListenerPort id="select8">
				<description>select route 8</description>
			</eventListenerPort>

			<eventTriggererPort id="eventOut1">
				<description>output route 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2">
				<description>output route 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3">
				<description>output route 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4">
				<description>output route 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5">
				<description>output route 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6">
				<description>output route 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut7">
				<description>output route 7</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut8">
				<description>output route 8</description>
			</eventTriggererPort>

		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.eventstatemachine.EventStateMachineInstance" id="asterics.EventStateMachine">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Compares incoming events with a given  sequence, fired an event  when the sequence is completed </description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="in1">
				<description>input event type 1</description>
			</eventListenerPort>
			<eventListenerPort id="in2">
				<description>input event type 2</description>
			</eventListenerPort>
			<eventListenerPort id="in3">
				<description>input event type 3</description>
			</eventListenerPort>
			<eventListenerPort id="in4">
				<description>input event type 4</description>
			</eventListenerPort>
			<eventListenerPort id="in5">
				<description>input event type 5</description>
			</eventListenerPort>
			<eventListenerPort id="in6">
				<description>input event type 6</description>
			</eventListenerPort>
			<eventListenerPort id="in7">
				<description>input event type 7</description>
			</eventListenerPort>
			<eventListenerPort id="in8">
				<description>input event type 8</description>
			</eventListenerPort>
			<eventListenerPort id="in9">
				<description>input event type 9</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>reset to initial state</description>
			</eventListenerPort>

			<eventTriggererPort id="finalStateReached">
				<description>the final state is triggered</description>
			</eventTriggererPort>
			<eventTriggererPort id="stateError">
				<description>the incoming event did not match the sequence</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="the desired state sequence " name="stateSequence" type="string" value="1,2,3,1,2,3"/>
			<property description="the min/max time before the next state occurs (in milliseconds). Separated with commas. X indicates if timing is irrelevant for the state change." name="stateTiming" type="string" value="0/2000,x,x,1000/3000"/>
			<property description="reset to first state if incoming event does not match " name="resetOnIncorrectEvent" type="boolean" value="true"/>
			<property description="if a separation event is used before and after the event patterns, this option allows to remove the initial separation event." name="skipFirstEvent" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.processor.filter.FilterInstance" id="asterics.Filter">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>This plugin implements a FIR Filter</description>
        <ports>
			<inputPort id="Input">
				<description>The signal to be filtered</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="Output">
				<description>The filtered signal</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SignalPower">
				<description>Signal Power on the band pass</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Order of the filter. It is recommended to use orders around the sampling rate" name="Order" type="integer" value="500"/>
			<property description="Cutoff frequecy for low and high pass filter types. In case of band pass filters it is the low cutoff frequency of the band" name="CutoffFreq1" type="double" value="0"/>
			<property description="In case of band pass filters it is the high cutoff frequency of the band" name="CutoffFreq2" type="double" value="0"/>
			<property description="Sampling rate of the input signal" name="SamplingRate" type="integer" value="500"/>
			<property combobox="Low pass//High pass//Band pass" description="Type of filter (low, high or band pass filter)" name="Type" type="integer" value="0"/>
			<property description="Update ratio for the SignalPower output port. The SignalPower output port provides a new value every time the Output port has provided N values, where N is the value of this property" name="SignalPowerUpdateRate" type="integer" value="1"/>
		    <property description="Length of the buffer that keeps the filtered signal that is used to compute the power of the signal" name="SignalPowerBufferSize" type="integer" value="125"/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.fs20commandinterpreter.FS20CommandInterpreterInstance" id="asterics.FS20CommandInterpreter">
        <type subtype="Home Control">processor</type>
        <singleton>false</singleton>
        <description>Plugin to interprete FS20 commandos (including housecode and sendaddress) and fireing events regarding to the command</description>
        <ports>
			<inputPort id="command">
				<description>The FS 20 command including housecode and sender address</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
        
		<events>
			<eventTriggererPort id="off">
				<description>Switch off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel1">
				<description>Light on 6,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel2">
				<description>Light on 12,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel3">
				<description>Light on 18,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel4">
				<description>Light on 25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel5">
				<description>Light on 31,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel6">
				<description>Light on 37,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel7">
				<description>Light on 43,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel8">
				<description>Light on 50%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel9">
				<description>Light on 56,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel10">
				<description>Light on 62,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel11">
				<description>Light on 68,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel12">
				<description>Light on 75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel13">
				<description>Light on 81,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel14">
				<description>Light on 87,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel15">
				<description>Light on 93,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel16">
				<description>Light on 100%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevel">
				<description>Switch on old level</description>
			</eventTriggererPort>
			<eventTriggererPort id="toggle">
				<description>Toggle between off an on, old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUp">
				<description>Dim up for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimDown">
				<description>Dim down for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUpAndDown">
				<description>Dim up, then down, then up etc. </description>
			</eventTriggererPort>
			<eventTriggererPort id="programTimer">
				<description>Start/stop programmable timer</description>
			</eventTriggererPort>
			<eventTriggererPort id="offForTimerThenOldLevel">
				<description>Off for internal timer, than old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOff">
				<description>On for internal timer, than off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenOff">
				<description>On (old value) for internal timer, then off</description>
			</eventTriggererPort>
			<eventTriggererPort id="reset">
				<description>reset to factory default</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOldLevel">
				<description>On for internal timer, then old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenPreviousState">
				<description>On (old value) for internal timer, then old value</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="The housecode" name="Housecode" type="integer" value="11111111"/>
			<property description="The address of the sender" name="Sendaddress" type="integer" value="1111"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.integrate.IntegrateInstance" id="asterics.Integrate">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Integration with upper and lower bounds and reset</description>
        <ports>
            <inputPort id="in">
                <description>Input port of integrator</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output port of integrator</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="reset">
                <description>Event port triggers reset of accumulator</description>
            </eventListenerPort>
        </events>        

        <properties>
            <property description="The reset value for the accumulator" name="resetValue" type="double" value="0"/>
            <property description="The upper limit for the accumulator (limits disabled if upper=lower limit)" name="upperLimit" type="double" value="50000"/>
            <property description="The lower limit for the accumulator (limits disabled if upper=lower limit)" name="lowerLimit" type="double" value="-50000"/>
            <property description="wrap around value if over/underflow ?" name="wrapAround" type="boolean" value="false"/>                       
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.inttostring.IntToStringInstance" id="asterics.IntToString">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts int to string</description>
        <ports>
			<inputPort id="input">
				<description>Integer input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="If set, the output data will be hexadecimal" name="hexadecimalOutput" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.mathevaluator.MathEvaluatorInstance" id="asterics.MathEvaluator">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Mathematical expression evaluator</description>
        <ports>
            <inputPort id="inA">
                <description>Input port A</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inB">
                <description>Input port B</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inC">
                <description>Input port C</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inD">
                <description>Input port D</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
            <outputPort id="out">
                <description>Output port for result</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="Mathematical expression containing the variables a, b, c and d" name="expression" type="string" value="a+b"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.minmax.MinmaxInstance" id="asterics.MinMax">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Remember minimum and maximum of a signal</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="max">
                <description>Output of maximum value</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="min">
                <description>Output of minimum value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="reset">
                <description>Reset min and max to default values on incoming event</description>
            </eventListenerPort>
        </events>  
        <properties>
            <property description="The default value for minimum" name="defaultMin" type="double" value="0"/>
            <property description="The default value for maximum" name="defaultMax" type="double" value="10"/>
        </properties>      
    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.multisource.MultiSourceInstance" id="asterics.MultiSource">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Passes signal from input ports to the one output port</description>
        <ports>
			<inputPort id="input1">
				<description>input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.multisourcestring.MultiSourceStringInstance" id="asterics.MultiSourceString">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Passes strings from input ports to the one output port</description>
        <ports>
			<inputPort id="input1">
				<description>input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.neuralnetworkloader.NeuralNetworkLoaderInstance" id="asterics.NeuralNetworkLoader">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Basic Neural Network</description>
        <ports>
			<inputPort id="input1">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input5">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input6">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input7">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input8">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input9">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input10">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input11">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input12">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input13">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input14">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input15">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input16">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input17">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input18">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input19">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input20">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input21">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input22">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input23">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input24">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input25">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input26">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input27">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input28">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input29">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input30">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input31">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input32">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			

			<outputPort id="output1">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output2">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output3">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output4">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output5">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output6">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output7">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output8">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output9">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output10">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output11">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output12">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output13">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output14">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output15">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output16">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output17">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output18">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output19">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output20">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output21">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output22">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output23">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output24">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output25">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output26">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output27">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output28">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output29">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output30">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output31">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output32">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Path of the EG file" name="filePath" type="string" value=""/>
				
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.oneeventmanyactions.OneEventManyActionsInstance" id="asterics.OneEventManyActions">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>One input event raises many actions</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Action event</description>
			</eventListenerPort>
			<eventListenerPort id="inputOff">
				<description>Select action used in mode 1</description>
			</eventListenerPort>

			<eventTriggererPort id="action1">
				<description>The action 1 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown1">
				<description>Show action 1 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action2">
				<description>The action 2 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown2">
				<description>Show action 2 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action3">
				<description>The action 3 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown3">
				<description>Show action 3 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action4">
				<description>The action 4 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown4">
				<description>Show action 4 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action5">
				<description>The action 5 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown5">
				<description>Show action 5 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action6">
				<description>The action 6 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown6">
				<description>Show action 6 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action7">
				<description>The action 7 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown7">
				<description>Show action 7 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action8">
				<description>The action 8 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown8">
				<description>Show action 8 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action9">
				<description>The action 9 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown9">
				<description>Show action 9 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action10">
				<description>The action 10 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown10">
				<description>Show action 10 event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="2//3//4//5//6//7//8//9//10" description="How many actions will be used." name="actionsNumber" type="integer" value="2"/>
			<property combobox="Mode1//Mode2//Mode3" description="Component mode" name="mode" type="integer" value="0"/>
			<property description="The action delay [ms]" name="delay" type="integer" value="2000"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.oscgesturefollower.OscGestureFollowerInstance" id="asterics.OscGestureFollower">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Connects the external GestureFollower tool with ARE</description>
        <ports>
			<inputPort id="CH1">
				<description>Data Stream 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>Data Stream 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>Data Stream 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>Data Stream 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="likeliest">
				<description>Index of the likeliest gesture</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="stop">
				<description>Stop the following process.</description>
			</eventListenerPort>
			<eventListenerPort id="stoplearn">
				<description>Stop the stop the learning process</description>
			</eventListenerPort>
			<eventListenerPort id="learn1">
				<description>Start learning phrase 1</description>
			</eventListenerPort>
			<eventListenerPort id="learn2">
				<description>Start learning phrase 2</description>
			</eventListenerPort>
			<eventListenerPort id="learn3">
				<description>Start learning phrase 3</description>
			</eventListenerPort>
			<eventListenerPort id="learn4">
				<description>Start learning phrase 4</description>
			</eventListenerPort>
			<eventListenerPort id="learn5">
				<description>Start learning phrase 5</description>
			</eventListenerPort>
			<eventListenerPort id="clear">
				<description>Start learning phrase 6</description>
			</eventListenerPort>
			<eventListenerPort id="follow">
				<description>In the 'follow' mode the incoming phrase is compared with the recorded pharse</description>
			</eventListenerPort>


		</events>			
        <properties>
				<property description="property description" name="InPort" type="integer" value="57110"/>
				<property description="property description" name="OutPort" type="integer" value="9000"/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.oska.OskaInstance" id="OskaInternalScanning">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="increaseScanspeed">
                <description>Increases scan speed of OSKA native scanning</description>
            </eventListenerPort>
            <eventListenerPort id="decreaseScanspeed">
                <description>Decreases scan speed of OSKA native scanning</description>
            </eventListenerPort>

            <eventListenerPort id="pressSwitch1">
                <description>Event port triggers sending of "switchpress:0" to OSKA</description>
            </eventListenerPort>
            <eventListenerPort id="pressSwitch2">
                <description>Event port triggers sending of "switchpress:1" to OSKA</description>
            </eventListenerPort>
            
            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
        </events>        
        
        <properties>
            <property description="The port that OSKA should connect to" name="port" type="integer" value="4546"/>
            <property description="The title to be displayed in the OSKA title bar" name="title" type="string" value="OSKA keyboard"/>
            <property description="Path to OSKA executable" name="oskaPath" type="string" value="..\oska\start keyboard.exe"/>
            <property description="Path to OSKA startup keyboard" getStringList="true" name="keyboardPath" type="string" value="keyboards\default.xml"/>
            <property description="Scanning speed for row/column scan" name="scanSpeed" type="integer" value="1"/>
            <property combobox="KeyBorders//InvertKeys//BlockBehindKeys" description="Highlight style for OSKA" name="highlightStyle" type="integer" value="0"/>
            <property description="File name of settings file" getStringList="true" name="settingsFile" type="string" value="settings\internal_tcp.kst"/>
            <property description="If true, OSKA will be displayed with a decorated window, if false without decorations" name="windowDecorated" type="boolean" value="true"/>
            <property description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size" name="resizeEnabled" type="boolean" value="false"/>
            
        	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
        	    
	</componentType>

    <componentType canonical_name="eu.asterics.component.processor.oska.OskaInstance" id="OskaExternalScanning1D">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

            <inputPort id="posKey">
                <description>Position of highlighted row, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>    
            

         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="switch">
                <description>Event port triggers sending of "press" to OSKA</description>
            </eventListenerPort>
            
            <eventListenerPort id="highlightNext">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrev">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
        </events>        
        
        <properties>
            <property description="The port that OSKA should connect to" name="port" type="integer" value="4546"/>
            <property description="The title to be displayed in the OSKA title bar" name="title" type="string" value="OSKA keyboard"/>
            <property description="Path to OSKA executable" name="oskaPath" type="string" value="..\oska\start keyboard.exe"/>
            <property description="Path to OSKA startup keyboard" getStringList="true" name="keyboardPath" type="string" value="keyboards\default.xml"/>
            <property combobox="KeyBorders//InvertKeys//BlockBehindKeys" description="Highlight style for OSKA" name="highlightStyle" type="integer" value="0"/>
            <property description="File name of settings file" getStringList="true" name="settingsFile" type="string" value="settings\default.kst"/>
            <property description="If true, OSKA will be displayed with a decorated window, if false without decorations" name="windowDecorated" type="boolean" value="true"/>
            <property description="If true, the component will react to input on the event listener ports that move the highlighter" name="eventScanningEnabled" type="boolean" value="true"/>
            <property description="If true, the component will react to input on the input ports that move the highlighter" name="valueScanningEnabled" type="boolean" value="true"/>
            <property combobox="float (0.0-1.0)//integer (0, 1, 2, ...)" description="Declares whether input port will interpret input as the position mapped to a float value between 0.0 and 1.0 or if the input should interpreted as an integer index in the grid " name="inputRange" type="integer" value="0"/>
            <property description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size" name="resizeEnabled" type="boolean" value="false"/>
         	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
	</componentType>

    <componentType canonical_name="eu.asterics.component.processor.oska.OskaInstance" id="OskaExternalScanning2D">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

            <inputPort id="posColumn">
                <description>Position of highlighted column, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <inputPort id="posRow">
                <description>Position of highlighted row, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="press">
                <description>Event port triggers sending of "press" to OSKA</description>
            </eventListenerPort>
            
            <eventListenerPort id="highlightNextX">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrevX">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightNextY">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrevY">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
            
        </events>        
        
        <properties>
            <property description="The port that OSKA should connect to" name="port" type="integer" value="4546"/>
            <property description="The title to be displayed in the OSKA title bar" name="title" type="string" value="OSKA keyboard"/>
            <property description="Path to OSKA executable" name="oskaPath" type="string" value="..\oska\start keyboard.exe"/>
            <property description="Path to OSKA startup keyboard" getStringList="true" name="keyboardPath" type="string" value="keyboards\default.xml"/>
            <property combobox="KeyBorders//InvertKeys//BlockBehindKeys" description="Highlight style for OSKA" name="highlightStyle" type="integer" value="0"/>
            <property combobox="Disabled//Top left//Center//Bottom right" description="Declares where highlighting should be placed on a press of a key" name="highlightResetPosition" type="integer" value="0"/>
            <property description="File name of settings file" getStringList="true" name="settingsFile" type="string" value="settings\default.kst"/>
            <property description="If true, OSKA will be displayed with a decorated window, if false without decorations" name="windowDecorated" type="boolean" value="true"/>
            <property description="If true, the component will react to input on the event listener ports that move the highlighter" name="eventScanningEnabled" type="boolean" value="true"/>
            <property description="If true, the component will react to input on the input ports that move the highlighter" name="valueScanningEnabled" type="boolean" value="true"/>
            <property combobox="float (0.0-1.0)//integer (0, 1, 2, ...)" description="Declares whether input port will interpret input as the position mapped to a float value between 0.0 and 1.0 or if the input should interpreted as an integer index in the grid " name="inputRange" type="integer" value="0"/>
            <property description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size" name="resizeEnabled" type="boolean" value="false"/>
        	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
	</componentType>





 <componentType canonical_name="eu.asterics.component.processor.pathmultiplexer.PathmultiplexerInstance" id="asterics.PathMultiplexer">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Path Multiplexer forwards signal from the selected input to the output</description>
        <ports>
            <inputPort id="input1">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input3">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input4">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="passPort1">
                <description>passes data from the port 1</description>
            </eventListenerPort>
            <eventListenerPort id="passPort2">
                <description>passes data from the port 2</description>
            </eventListenerPort>
            <eventListenerPort id="passPort3">
                <description>passes data from the port 3</description>
            </eventListenerPort>
            <eventListenerPort id="passPort4">
                <description>passes data from the port 4</description>
            </eventListenerPort>
            <eventListenerPort id="passNextPort">
                <description>pass from the next port</description>
            </eventListenerPort>
            <eventListenerPort id="passPreviousPort">
                <description>passes from the previous port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property combobox="1//2//3//4" description="number of connected (and active) ports" name="number" type="integer" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.pathselector.PathselectorInstance" id="asterics.PathSelector">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Pathselector routes signal to one of four output ports</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="out1">
                <description>Path 1</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Path 2"</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Path 3</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Path 4</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="select1">
                <description>selects out-port 1</description>
            </eventListenerPort>
            <eventListenerPort id="select2">
                <description>selects out-port 2</description>
            </eventListenerPort>
            <eventListenerPort id="select3">
                <description>selects out-port 3</description>
            </eventListenerPort>
            <eventListenerPort id="select4">
                <description>selects out-port 4</description>
            </eventListenerPort>
            <eventListenerPort id="selectNext">
                <description>selects next out-port</description>
            </eventListenerPort>
            <eventListenerPort id="selectPrevious">
                <description>selects previous out-port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property combobox="1//2//3//4" description="number of connected (and active) ports" name="activePorts" type="integer" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.peakdetector.PeakDetectorInstance" id="asterics.PeakDetector">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Peak detection for incoming signal</description>
        <ports>
			<inputPort id="in">
				<description>input signal</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="top">
				<description>detected top value</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="bottom">
				<description>detected bottom value</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="time">
				<description>time between peaks</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="topDetected">
				<description>a top value has been detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="bottomDetected">
				<description>a bottom value has been detected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="detect tops//detect bottoms//detect both" description="mode of operation" name="mode" type="integer" value="0"/>
			<property description="number of peaks for averaging (0=disable)" name="comparePeaks" type="integer" value="0"/>
			<property description="minimum percentage of average peaks for valid tops (0=disable)" name="validTopPercentage" type="integer" value="0"/>
			<property description="maximum percentage of average peaks for valid bottoms (0=disable)" name="validBottomPercentage" type="integer" value="0"/>
			<property combobox="milliseconds//BPM" description="mode for time output (milliseconds or beats per minute)" name="timeMode" type="integer" value="0"/>

        </properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.processor.protocolssveptrain.ProtocolSSVEPTrainInstance" id="asterics.ProtocolSSVEPTrain">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>This plugin is in charge of managing and configuring the SSVEP trainng recording protocol </description>
        <ports>

			<outputPort id="StimFrequency">
				<description>Current stimulation frequency in Hz</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq2">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq3">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq4">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="StartProt">
				<description>Start protocol request</description>
			</eventListenerPort>
			<eventListenerPort id="StopProt">
				<description>Stop protocol requestn</description>
			</eventListenerPort>
			<eventListenerPort id="Continue">
				<description>Next Stimulation trial request</description>
			</eventListenerPort>
			<eventListenerPort id="Repeat">
				<description>Repeat last stimulation trial request</description>
			</eventListenerPort>
			<eventListenerPort id="Stop">
				<description>Stop current stimulation trial request</description>
			</eventListenerPort>

			<eventTriggererPort id="StartTrial">
				<description>Event sent when a stimulation trial starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopTrial">
				<description>Event sent when a stimulation trial ends</description>
			</eventTriggererPort>
			<eventTriggererPort id="StartStim">
				<description>Event sent when a stimulation period starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopStim">
				<description>Event sent when a stimulation period ends</description>
			</eventTriggererPort>
			<eventTriggererPort id="ReadyStim">
				<description>Event sent 1 second befor the stimulation periods starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="UpdatePanelConfig">
				<description>Event sent requesting a stimulation panels re-configuration</description>
			</eventTriggererPort>
			

		</events>			
        <properties>
			<property description="Number of stimulation periods per trial" name="NumRepetitions" type="integer" value="0"/>
			<property description="Stimulation period duration in seconds" name="RepStimDuration" type="integer" value="0"/>
			<property description="Non-Stimulation period duration in seconds" name="RepNonStimDuration" type="integer" value="0"/>
			<property description="Stimulation frequency number 1 in Hz" name="freqStim1" type="integer" value="0"/>
			<property description="Stimulation frequency number 2 in Hz" name="freqStim2" type="integer" value="0"/>
			<property description="Stimulation frequency number 3 in Hz" name="freqStim3" type="integer" value="0"/>
			<property description="Stimulation frequency number 4 in Hz" name="freqStim4" type="integer" value="0"/>
			<property description="Stimulation frequency number 5 in Hz" name="freqStim5" type="integer" value="0"/>
			<property description="Stimulation frequency number 6 in Hz" name="freqStim6" type="integer" value="0"/>
			<property description="Stimulation frequency number 7 in Hz" name="freqStim7" type="integer" value="0"/>
			<property description="Stimulation frequency number 8 in Hz" name="freqStim8" type="integer" value="0"/>
			<property description="Stimulation frequency number 9 in Hz" name="freqStim9" type="integer" value="0"/>
			<property description="Stimulation frequency number 10 in Hz" name="freqStim10" type="integer" value="0"/>
			<property description="Randomize stimulation frequencies order" name="RandomizeFreq" type="boolean" value="true"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.quantizer.QuantizerInstance" id="asterics.Quantizer">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Performs the quantization of the input signal</description>
        <ports>
			<inputPort id="input">
				<description>Signal input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Signal output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Quantization step" name="quantizationStep" type="double" value="1"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.regularexpression.RegularExpressionInstance" id="asterics.RegularExpression">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Process the string with regular expressions.</description>
        <ports>
			<inputPort id="input">
				<description>Input port.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Output port.</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="match">
				<description>The string match to  the pattern.</description>
			</eventTriggererPort>
			<eventTriggererPort id="notMatch">
				<description>The string do not match to the pattern.</description>
			</eventTriggererPort>
			<eventTriggererPort id="replace">
				<description>The string was changed.</description>
			</eventTriggererPort>
			<eventTriggererPort id="notReplace">
				<description>The string was not changed</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="The match pattern" name="pattern" type="string" value=""/>
			<property description="Defines if the string parts that match to the pattern should be replace by the replaceString" name="replace" type="boolean" value="false"/>
			<property description="Replace string." name="replaceString" type="string" value=""/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.relativemovesampler.RelativeMoveSamplerInstance" id="asterics.RelativeMoveSampler">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="inputX">
				<description>the X coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputY">
				<description>the Y coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputZ">
				<description>the Z coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="outputX">
				<description>the X coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputY">
				<description>the Y coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputZ">
				<description>the Z coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Rate of the sampling (Hz)" name="samplingRate" type="double" value="10"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.sampleandhold.SampleAndHoldInstance" id="asterics.SampleAndHold">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Sample and hold for up to 4 input values</description>
        <ports>
            <inputPort id="in1">
                <description>Input port 1</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in2">
                <description>Input port 2</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in3">
                <description>Input port 3</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in4">
                <description>Input port 4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out1">
                <description>Output port 1</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Output port 2</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Output port 3</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Output port 4</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sampleNow">
                <description>Sample input values on incoming event</description>
            </eventListenerPort>
        </events>
        <properties/>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.sampler.SamplerInstance" id="asterics.Sampler">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Sets the constant rate of the sampling</description>
        <ports>
			<inputPort id="input">
				<description>Input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Rate of the sampling (Hz)" name="samplingRate" type="double" value="10"/>
			<property description="Response time [ms]. If the time from arrival of the last input data exceeds the response time, the plugin stops sending output data." name="responseTime" type="integer" value="0"/>
			<property description="If this property is set and there is no input data or the response time is exceeded the plugin sends samples equal zero." name="sendNullSamples" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.signaltranslation.SignalTranslationInstance" id="asterics.SignalTranslation">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Translates signals from a certain input range to an output range</description>
        <ports>
            <inputPort id="in">
                <description>Input port to be translated to output signal range</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="setMax">
                <description>set maximum of input signal (for auto-scale)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="setMin">
                <description>set minimum of input signal (for auto-scale)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Translated ouput</description>
                <dataType>double</dataType>
            </outputPort>            
        </ports>
        <properties>
            <property description="Defines the minimal value of the input range" name="inMin" type="double" value="0.0"/>
            <property description="Defines the maximal value of the input range" name="inMax" type="double" value="1.0"/>
            <property description="Defines the minimal value of the output range" name="outMin" type="double" value="0.0"/>
            <property description="Defines the maximal value of the output range" name="outMax" type="double" value="10.0"/>
        </properties>
        
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.speechprocessor.SpeechProcessorInstance" id="asterics.SpeechProcessor">
        <type subtype="Audio and Voice">processor</type>
        <singleton>true</singleton>
        <description>This plugin allows to genereate and recognize speech via the speech processor server application</description>
        <ports>
            <inputPort id="speak">
				<description>words to be spoken by the speech synthesizer</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        
 		    <outputPort id="command">
				<description>recognized command as a string</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
			<eventTriggererPort id="activated">
				<description>Will be triggered if the activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="deActivated">
				<description>Will be triggered if the de-activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand1">
				<description>Will be triggered if a defined command 1 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand2">
				<description>Will be triggered if a defined command 2 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand3">
				<description>Will be triggered if a defined command 3 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand4">
				<description>Will be triggered if a defined command 4 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand5">
				<description>Will be triggered if a defined command 5 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand6">
				<description>Will be triggered if a defined command 6 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand7">
				<description>Will be triggered if a defined command 7 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand8">
				<description>Will be triggered if a defined command 8 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand9">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand10">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand11">
				<description>Will be triggered if a defined command 11 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand12">
				<description>Will be triggered if a defined command 12 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand13">
				<description>Will be triggered if a defined command 13 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand14">
				<description>Will be triggered if a defined command 14 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand15">
				<description>Will be triggered if a defined command 15 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand16">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand17">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand18">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand19">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand20">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand21">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand22">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand23">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand24">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand25">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventListenerPort id="help">
                <description>An incoming event starts playback of all supported voice commands</description>
            </eventListenerPort>
            <eventListenerPort id="activation">
                <description>Activates the Speech recognition</description>
            </eventListenerPort>
            <eventListenerPort id="deactivation">
                <description>Deactivates the Speech recognition</description>
            </eventListenerPort>
			

		</events>			
        <properties>
			<property combobox="English//Deutsch//Espanol//Polski" description="the desired language" name="language" type="integer" value="0"/>
			<property description="the needed recognition confidence (0-1), high value needs precise pronunciation" name="recognitionConfidence" type="double" value="0.5"/>
			<property description="speech command which activates command recognition" name="activationCommand" type="string" value="computer, listen!"/>
			<property description="speech command which stops command recognition" name="deactivationCommand" type="string" value="computer, stop!"/>
			<property description="speech command which says all other commands" name="helpCommand" type="string" value="computer, help!"/>
            <property combobox="always active//voice-triggered activation and deactivation//automatic deactivation after command recognition" description="mode for activation/deactivation of the recognition" name="mode" type="integer" value="0"/>			
			<property description="speech command, triggers event1 if recognized" name="command1" type="string" value="hello"/>
			<property description="speech command, triggers event2 if recognized" name="command2" type="string" value=""/>
			<property description="speech command, triggers event3 if recognized" name="command3" type="string" value=""/>
			<property description="speech command, triggers event4 if recognized" name="command4" type="string" value=""/>
			<property description="speech command, triggers event5 if recognized" name="command5" type="string" value=""/>
			<property description="speech command, triggers event6 if recognized" name="command6" type="string" value=""/>
			<property description="speech command, triggers event7 if recognized" name="command7" type="string" value=""/>
			<property description="speech command, triggers event8 if recognized" name="command8" type="string" value=""/>
			<property description="speech command, triggers event9 if recognized" name="command9" type="string" value=""/>
			<property description="speech command, triggers event10 if recognized" name="command10" type="string" value=""/>
			<property description="speech command, triggers event11 if recognized" name="command11" type="string" value=""/>
			<property description="speech command, triggers event12 if recognized" name="command12" type="string" value=""/>
			<property description="speech command, triggers event13 if recognized" name="command13" type="string" value=""/>
			<property description="speech command, triggers event14 if recognized" name="command14" type="string" value=""/>
			<property description="speech command, triggers event15 if recognized" name="command15" type="string" value=""/>
			<property description="speech command, triggers event16 if recognized" name="command16" type="string" value=""/>
			<property description="speech command, triggers event17 if recognized" name="command17" type="string" value=""/>
			<property description="speech command, triggers event18 if recognized" name="command18" type="string" value=""/>
			<property description="speech command, triggers event19 if recognized" name="command19" type="string" value=""/>
			<property description="speech command, triggers event20 if recognized" name="command20" type="string" value=""/>
			<property description="speech command, triggers event21 if recognized" name="command21" type="string" value=""/>
			<property description="speech command, triggers event22 if recognized" name="command22" type="string" value=""/>
			<property description="speech command, triggers event23 if recognized" name="command23" type="string" value=""/>
			<property description="speech command, triggers event24 if recognized" name="command24" type="string" value=""/>
			<property description="speech command, triggers event25 if recognized" name="command25" type="string" value=""/>				
        </properties>

    </componentType>

 <componentType canonical_name="com.starlab.component.processor.ssvepdetect.SSVEPDetectInstance" id="asterics.SSVEPDetect">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>This plugin is in charge of evaluating the SSVEP response (up to 4 different frequencies) among the frequencies defined by the user. It also calculates the config file based on previously recorded training file that will be used to evaluate the detection, and is in charge of updating its parameters according to the config file</description>
        <ports>
			<inputPort id="O1">
				<description>input port for the EEG channel O1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="Oz">
				<description>input port for the EEG channel O2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="O2">
				<description>input port for the EEG channel O3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType> 
			</inputPort>
			<inputPort id="UserName">
				<description>Name Identifying current the user </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType> 
			</inputPort>			
			<inputPort id="NumberOfPanels">
				<description>Number of stimulation panels</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType> 
			</inputPort>		
					
			<outputPort id="FreqP1">
				<description>Stimulation frequency of panel 1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP2">
				<description>Stimulation frequency of panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP3">
				<description>Stimulation frequency of panel 3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP4">
				<description>Stimulation frequency of panel 4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="TrainProcessReport">
				<description>Training process report (fail/succeed)</description>
				<dataType>string</dataType>
			</outputPort>
			
			
        </ports>
        
        
		<events>
			<eventListenerPort id="StartStim">
				<description>Event Informing that the stimulation period has started</description>
			</eventListenerPort>
			<eventListenerPort id="StopStim">
				<description>Event Informing that the stimulation period has finished</description>
			</eventListenerPort>
			<eventListenerPort id="CalculateConfigFile">
				<description>Event requesting the calculation of the configuration file</description>
			</eventListenerPort>
			<eventListenerPort id="UpdateFromConfigFile">
				<description>Event requested an update of the properties according to the configuration file</description>
			</eventListenerPort>
			<eventTriggererPort id="UpdatePanelsConfig">
				<description>Event reporting the stimulation panels plugin to update the stimulation frequencies</description>
			</eventTriggererPort>
			<eventTriggererPort id="NonStimFreqD">
				<description>Event reporting that none stimulation frequency could be detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq1D">
				<description>Event reporting that stimulation frequency number 1 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq2D">
				<description>Event reporting that stimulation frequency number 2 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq3D">
				<description>Event reporting that stimulation frequency number 3 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq4D">
				<description>Event reporting that stimulation frequency number 4 was detected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Spatial filter coefficient for stimulation frequency 1 and electrode O1" name="SF1GO1" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 1 and electrode Oz" name="SF1GOz" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 1 and electrode O2" name="SF1GO2" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 2 and electrode O1" name="SF2GO1" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 2 and electrode Oz" name="SF2GOz" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 2 and electrode O2" name="SF2GO2" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 3 and electrode O1" name="SF3GO1" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 3 and electrode Oz" name="SF3GOz" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 3 and electrode O2" name="SF3GO2" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 4 and electrode O1" name="SF4GO1" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 4 and electrode Oz" name="SF4GOz" type="double" value="1.0"/>
			<property description="Spatial filter coefficient for stimulation frequency 4 and electrode O2" name="SF4GO2" type="double" value="1.0"/>
			<property description="Stimulation frequency number 1 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection" name="StimFreq1" type="integer" value="20"/>
			<property description="Stimulation frequency number 2 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection" name="StimFreq2" type="integer" value="20"/>
			<property description="Stimulation frequency number 3 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection" name="StimFreq3" type="integer" value="20"/>
			<property description="Stimulation frequency number 4 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection" name="StimFreq4" type="integer" value="20"/>
			<property description="Best harmonic to detect stimulation frequency 1" name="BestHarm1" type="integer" value="20"/>
			<property description="Best harmonic to detect stimulation frequency 2" name="BestHarm2" type="integer" value="20"/>
			<property description="Best harmonic to detect stimulation frequency 3" name="BestHarm3" type="integer" value="20"/>
			<property description="Best harmonic to detect stimulation frequency 4" name="BestHarm4" type="integer" value="20"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.stringappend.StringAppendInstance" id="asterics.StringAppend">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>This plugin allows assembly of a string from single characters or substrings. The current and final results are sent to output ports.</description>
        <ports>
			<inputPort id="inStr">
				<description>input port for receiving strings or single characters</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inChar">
				<description>input port for receiving string character codes</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="actResult">
				<description>appended string, updated at every new input</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="finalResult">
				<description>appended string, final result</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="sendNow">
				<description>sends the string to the finalResult output port</description>
			</eventListenerPort>
			<eventListenerPort id="sendNowAndClear">
				<description>sends the string to the finalResult output port and clears the string buffer</description>
			</eventListenerPort>
			<eventListenerPort id="deleteCharacter">
				<description>deletes the last character in the string buffer</description>
			</eventListenerPort>
			<eventListenerPort id="clear">
				<description>clears the string buffer</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="sends and clears the string buffer if the ASCII-code for Enter is received at the inChar port" name="autoSendAtEnter" type="boolean" value="false"/>
			<property description="default value for the string buffer" name="defaultValue" type="string" value=""/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.stringdispatcher.StringDispatcherInstance" id="asterics.StringDispatcher">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Send test from chosen slot</description>
        <ports>
            <outputPort id="output">
                <description>Output text</description>
                <dataType>string</dataType>
            </outputPort>
            <inputPort id="slotDispatch">
                <description>Send the string from the slot defined by number</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="dispatchSlot1">
                <description>Send text from slot 1</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot2">
                <description>Send text from slot 2</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot3">
                <description>Send text from slot 3</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot4">
                <description>Send text from slot 4</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot5">
                <description>Send text from slot 5</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot6">
                <description>Send text from slot 6</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot7">
                <description>Send text from slot 7</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot8">
                <description>Send text from slot 8</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot9">
                <description>Send text from slot 9</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot10">
                <description>Send text from slot 10</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot11">
                <description>Send text from slot 11</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot12">
                <description>Send text from slot 12</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot13">
                <description>Send text from slot 13</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot14">
                <description>Send text from slot 14</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot15">
                <description>Send text from slot 15</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot16">
                <description>Send text from slot 16</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot17">
                <description>Send text from slot 17</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot18">
                <description>Send text from slot 18</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot19">
                <description>Send text from slot 19</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot20">
                <description>Send text from slot 20</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchNextSlot">
                <description>Send text from the next not empty slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchPreviousSlot">
                <description>Send text from the previous not empty slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlotSeries">
                <description>Send text in sequence from all not empty slots with delay defined by Delay property</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Send all slots delay" name="delay" type="integer" value="300"/>
            <property description="String slot 1" name="slot1" type="string" value=""/>
            <property description="String slot 2" name="slot2" type="string" value=""/>
            <property description="String slot 3" name="slot3" type="string" value=""/>
            <property description="String slot 4" name="slot4" type="string" value=""/>
            <property description="String slot 5" name="slot5" type="string" value=""/>
            <property description="String slot 6" name="slot6" type="string" value=""/>
            <property description="String slot 7" name="slot7" type="string" value=""/>
            <property description="String slot 8" name="slot8" type="string" value=""/>
            <property description="String slot 9" name="slot9" type="string" value=""/>
            <property description="String slot 10" name="slot10" type="string" value=""/>
            <property description="String slot 11" name="slot11" type="string" value=""/>
            <property description="String slot 12" name="slot12" type="string" value=""/>
            <property description="String slot 13" name="slot13" type="string" value=""/>
            <property description="String slot 14" name="slot14" type="string" value=""/>
            <property description="String slot 15" name="slot15" type="string" value=""/>
            <property description="String slot 16" name="slot16" type="string" value=""/>
            <property description="String slot 17" name="slot17" type="string" value=""/>
            <property description="String slot 18" name="slot18" type="string" value=""/>
            <property description="String slot 19" name="slot19" type="string" value=""/>
            <property description="String slot 20" name="slot20" type="string" value=""/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.stringexpander.StringExpanderInstance" id="asterics.StringExpander">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Adds the preString and postString strings to the incoming string and sends the new string to the output port.</description>
        <ports>
			<inputPort id="input">
				<description>String input  port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Leading String." name="preString" type="string" value=""/>
			<property description="Trailing String." name="postString" type="string" value=""/>
			<property description="Removes all leading and trailing white-space characters from the input string." name="trim" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.stringpathmultiplexer.StringPathMultiplexerInstance" id="asterics.StringPathMultiplexer">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Forwards strings from the selected input to the output</description>
        <ports>
            <inputPort id="input1">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input3">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input4">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="output">
                <description>Output port</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="passPort1">
                <description>passes data from the port 1</description>
            </eventListenerPort>
            <eventListenerPort id="passPort2">
                <description>passes data from the port 2</description>
            </eventListenerPort>
            <eventListenerPort id="passPort3">
                <description>passes data from the port 3</description>
            </eventListenerPort>
            <eventListenerPort id="passPort4">
                <description>passes data from the port 4</description>
            </eventListenerPort>
            <eventListenerPort id="passNextPort">
                <description>pass from the next port</description>
            </eventListenerPort>
            <eventListenerPort id="passPreviousPort">
                <description>passes from the previous port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property combobox="1//2//3//4" description="number of connected (and active) ports" name="number" type="integer" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.stringpathselector.StringPathselectorInstance" id="asterics.StringPathSelector">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>StringPathselector routes signal to one of four output ports</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="out1">
                <description>Path 1</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Path 2"</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Path 3</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="select1">
                <description>selects out-port 1</description>
            </eventListenerPort>
            <eventListenerPort id="select2">
                <description>selects out-port 2</description>
            </eventListenerPort>
            <eventListenerPort id="select3">
                <description>selects out-port 3</description>
            </eventListenerPort>
            <eventListenerPort id="select4">
                <description>selects out-port 4</description>
            </eventListenerPort>
            <eventListenerPort id="selectNext">
                <description>selects next out-port</description>
            </eventListenerPort>
            <eventListenerPort id="selectPrevious">
                <description>selects previous out-port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property combobox="1//2//3//4" description="number of connected (and active) ports" name="activePorts" type="integer" value="1"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.stringtodouble.StringToDoubleInstance" id="asterics.StringToDouble">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts string to values</description>
        <ports>
			<inputPort id="input">
				<description>String input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Double output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.stringtoint.StringToIntInstance" id="asterics.StringToInt">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts string to integer.</description>
        <ports>
			<inputPort id="input">
				<description>String input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Integer output port</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="If set, the input values are regard as a hex values" name="hexadecimalInput" type="boolean" value="false"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.processor.textsender.TextSenderInstance" id="asterics.TextSender">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Send text when gets event</description>
        <ports>
            <outputPort id="output">
                <description>Output text</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sendText">
                <description>Trigger event</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Text to send" name="text" type="string" value="This is a sample text."/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.threshold.ThresholdInstance" id="asterics.Threshold">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Threshold Level Processor</description>
        <ports>
            <inputPort id="in">
                <description>Input port A</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="out">
                <description>Output of high/low value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="eventPosEdge">
                <description>Event port triggers events on pos edge</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventNegEdge">
                <description>Event port triggers events on neg edge</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property description="the threshold level for transitions from below to above" name="thresholdHigh" type="double" value="10"/>
            <property description="the threshold level for transitions from above to below" name="thresholdLow" type="double" value="10"/>
            <property description="output on value-port if true" name="outputHigh" type="double" value="1"/>
            <property description="output on value-port if false" name="outputLow" type="double" value="0"/>
            <property combobox="binary//cutoff//deadzone" description="binary outputs output_high when above and output_low when below threshold, cutoff outputs output_high when above threshold and the actual signal below threshold, deadzone outputs output_low when below threshold and actual signal when above threshold" name="operationMode" type="string" value="binary"/>
            <property combobox="below-&gt;above//above-&gt;below//both" description="transition from below to above threshold, from above to below or both" name="eventCondition" type="integer" value="0"/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.processor.yaak.YaakInstance" id="asterics.Yaak">
        <type subtype="Phone Interface">processor</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>

			<outputPort id="action">
				<description>Action string sent from the keyboard</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="trigger">
				<description>elp description</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="IP Address of the device running yaak" name="hostname" type="string" value="localhost"/>
			<property description="Port where the yaak server listens" name="port" type="integer" value="44000"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.acceleration.AccelerationInstance" id="asterics.Acceleration">
        <type subtype="Inertial Measurement">sensor</type>
        <singleton>false</singleton>
        <description>Acceleration sensor CIM</description>
        <ports>
            <outputPort id="xAcc">
                <description>X-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="yAcc">
                <description>Y-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="zAcc">
                <description>Z-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="total">
                <description>Accumulated absolute accelerations</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="start">
                <description>Incoming event starts acceleration sensor</description>
            </eventListenerPort>
            <eventListenerPort id="stop">
                <description>Incoming event stops acceleration sensor</description>
            </eventListenerPort>
            <eventListenerPort id="calibrate">
                <description>Incoming event sets offset values for x,y,z</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="start acceleration sensor automatically" name="autoStart" type="boolean" value="true"/>
            <property description="Mapping to (n) integral steps (0=disable)" name="descreteSteps" type="integer" value="0"/>
            <property combobox="10 Hz//20 Hz//40 Hz//75 Hz//150 Hz//300 Hz" description="frequency of periodic updates in Hz" name="updateFrequency" type="integer" value="0"/>
            <property combobox="1 g//1.5 g//2 g//3 g//4 g//8 g//16 g" description="sensitivity of acceleration" name="accelerationRange" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>                                 
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.analogin.AnalogInInstance" id="asterics.AnalogIn">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>ADC CIM sensor for inputs</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput2" type="boolean" value="false"/>
            <property description="value of interval between periodic update messagess of inputs in ms" name="periodicUpdate" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
            
                      
        </properties>
    </componentType>
    
    <componentType canonical_name="eu.asterics.component.sensor.analogin.AnalogInInstance" id="asterics.LegacyAnalogIn">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>ADC CIM sensor for inputs</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in3">
                <description>Input 3</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in4">
                <description>Input 4</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in5">
                <description>Input 5</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in6">
                <description>Input 6</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in7">
                <description>Input 7</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in8">
                <description>Input 8</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput2" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput3" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput4" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput5" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput6" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput7" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput8" type="boolean" value="false"/>
            <property description="value of interval between periodic update messagess of inputs in ms" name="periodicUpdate" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
            
                      
        </properties>
    </componentType>
    


 <componentType canonical_name="eu.asterics.component.sensor.autostartevent.AutostartEventInstance" id="asterics.AutostartEvent">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Sends the event after model start, with defined delay.</description>
        <ports>


        </ports>
		<events>

			<eventTriggererPort id="output">
				<description>The start event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="The event delay [ms]" name="Delay" type="integer" value="1000"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.buttongrid.ButtonGridInstance" id="asterics.ButtonGrid">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>Keyboard which sends event after button press</description> 
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="button1">
                <description>Button 1 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button2">
                <description>Button 2 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button3">
                <description>Button 3 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button4">
                <description>Button 4 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button5">
                <description>Button 5 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button6">
                <description>Button 6 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button7">
                <description>Button 7 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button8">
                <description>Button 8 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button9">
                <description>Button 9 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button10">
                <description>Button 10 pressed</description>
            </eventTriggererPort>      
            <eventTriggererPort id="button11">
                <description>Button 11 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button12">
                <description>Button 12 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button13">
                <description>Button 13 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button14">
                <description>Button 14 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button15">
                <description>Button 15 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button16">
                <description>Button 16 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button17">
                <description>Button 17 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button18">
                <description>Button 18 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button19">
                <description>Button 19 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button20">
                <description>Button 20 pressed</description>
            </eventTriggererPort>     
        </events>
        <properties>
            <property description="Caption of the keyboard" name="caption" type="string" value="Keyboard"/>
            <property description="Sets keys in horizontal orientation" name="horizontalOrientation" type="boolean" value="false"/> 
            <property description="Caption of the button 1" name="buttonCaption1" type="string" value="Button 1"/>
            <property description="Caption of the button 2" name="buttonCaption2" type="string" value="Button 2"/>
            <property description="Caption of the button 3" name="buttonCaption3" type="string" value="Button 3"/>
            <property description="Caption of the button 4" name="buttonCaption4" type="string" value="Button 4"/>
            <property description="Caption of the button 5" name="buttonCaption5" type="string" value="Button 5"/>
            <property description="Caption of the button 6" name="buttonCaption6" type="string" value=""/>
            <property description="Caption of the button 7" name="buttonCaption7" type="string" value=""/>
            <property description="Caption of the button 8" name="buttonCaption8" type="string" value=""/>
            <property description="Caption of the button 9" name="buttonCaption9" type="string" value=""/>
            <property description="Caption of the button 10" name="buttonCaption10" type="string" value=""/>
            <property description="Caption of the button 11" name="buttonCaption11" type="string" value=""/>
            <property description="Caption of the button 12" name="buttonCaption12" type="string" value=""/>
            <property description="Caption of the button 13" name="buttonCaption13" type="string" value=""/>
            <property description="Caption of the button 14" name="buttonCaption14" type="string" value=""/>
            <property description="Caption of the button 15" name="buttonCaption15" type="string" value=""/>
            <property description="Caption of the button 16" name="buttonCaption16" type="string" value=""/>
            <property description="Caption of the button 17" name="buttonCaption17" type="string" value=""/>
            <property description="Caption of the button 18" name="buttonCaption18" type="string" value=""/>
            <property description="Caption of the button 19" name="buttonCaption19" type="string" value=""/>
            <property description="Caption of the button 20" name="buttonCaption20" type="string" value=""/>
                            
        </properties>
        <gui>
            <width>500</width>
            <height>2000</height>
        </gui>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.cellboard.CellBoardInstance" id="asterics.CellBoard">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>GUI component</description>
        <ports>
			<inputPort id="row">
				<description>Row of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="column">
				<description>column of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="cellNumber">
				<description>Number of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="xmlFile">
				<description>XML file path to load when the load event occurs</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<outputPort id="selectedCell">
				<description>Selected cell ID</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="selectedCellText">
				<description>Selected cell Text</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="scanMove">
				<description>Move the scan frame</description>
			</eventListenerPort>
			<eventListenerPort id="scanSelect">
				<description>Select the cell during scanning</description>
			</eventListenerPort>
			<eventListenerPort id="moveUp">
				<description>Move frame up</description>
			</eventListenerPort>
			<eventListenerPort id="moveRight">
				<description>Move frame right</description>
			</eventListenerPort>
			<eventListenerPort id="moveLeft">
				<description>Move frame left</description>
			</eventListenerPort>
			<eventListenerPort id="moveDown">
				<description>Move frame down</description>
			</eventListenerPort>
			<eventTriggererPort id="cellClicked">
				<description>Cell is clicked</description>
			</eventTriggererPort>
			<eventListenerPort id="load">
				<description>Load xml file with filename from input xmlfile</description>
			</eventListenerPort>
			<eventTriggererPort id="cell1">
				<description>Cell 1 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell2">
				<description>Cell 2 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell3">
				<description>Cell 3 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell4">
				<description>Cell 4 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell5">
				<description>Cell 5 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell6">
				<description>Cell 6 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell7">
				<description>Cell 7 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell8">
				<description>Cell 8 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell9">
				<description>Cell 9 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell10">
				<description>Cell 10 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell11">
				<description>Cell 11 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell12">
				<description>Cell 12 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell13">
				<description>Cell 13 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell14">
				<description>Cell 14 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell15">
				<description>Cell 15 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell16">
				<description>Cell 16 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell17">
				<description>Cell 17 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell18">
				<description>Cell 18 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell19">
				<description>Cell 19 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell20">
				<description>Cell 20 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell21">
				<description>Cell 21 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell22">
				<description>Cell 22 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell23">
				<description>Cell 23 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell24">
				<description>Cell 24 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell25">
				<description>Cell 25 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell26">
				<description>Cell 26 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell27">
				<description>Cell 27 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell28">
				<description>Cell 28 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell29">
				<description>Cell 29 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell30">
				<description>Cell 30 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell31">
				<description>Cell 31 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell32">
				<description>Cell 32 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell33">
				<description>Cell 33 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell34">
				<description>Cell 34 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell35">
				<description>Cell 35 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell36">
				<description>Cell 36 selected</description>
			</eventTriggererPort>

		</events>			
        <properties>
        	<property description="Caption of the component" name="caption" type="string" value="Cell Board"/>
			<property combobox="1//2//3//4//5//6" description="Number of rows" name="rows" type="integer" value="2"/>
			<property combobox="1//2//3//4//5//6" description="Number of rows" name="columns" type="integer" value="2"/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="Text color" name="textColor" type="integer" value="0"/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="Background color" name="backgroundColor" type="integer" value="11"/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="Color of the scan frame" name="scanColor" type="integer" value="10"/>
			<property combobox="none//row-column//column-row//directed//hover selection" description="Scanning mode" name="scanMode" type="integer" value="0"/>
			<property description="Time of hovering needed to cell selection [ms]." name="hoverTime" type="integer" value="1000"/>
			<property description="Text of cell 1" name="cellText1" type="string" value=""/>
			<property description="Image of cell 1" name="cellImage1" type="string" value=""/>
			<property description="Action text of cell 1" name="actionText1" type="string" value=""/>
			<property description="Text of cell 2" name="cellText2" type="string" value=""/>
			<property description="Image of cell 2" name="cellImage2" type="string" value=""/>
			<property description="Action text of cell 2" name="actionText2" type="string" value=""/>
			<property description="Text of cell 3" name="cellText3" type="string" value=""/>
			<property description="Image of cell 3" name="cellImage3" type="string" value=""/>
			<property description="Action text of cell 3" name="actionText3" type="string" value=""/>
			<property description="Text of cell 4" name="cellText4" type="string" value=""/>
			<property description="Image of cell 4" name="cellImage4" type="string" value=""/>
			<property description="Action text of cell 4" name="actionText4" type="string" value=""/>
			<property description="Text of cell 5" name="cellText5" type="string" value=""/>
			<property description="Image of cell 5" name="cellImage5" type="string" value=""/>
			<property description="Action text of cell 5" name="actionText5" type="string" value=""/>
			<property description="Text of cell 6" name="cellText6" type="string" value=""/>
			<property description="Image of cell 6" name="cellImage6" type="string" value=""/>
			<property description="Action text of cell 6" name="actionText6" type="string" value=""/>
			<property description="Text of cell 7" name="cellText7" type="string" value=""/>
			<property description="Image of cell 7" name="cellImage7" type="string" value=""/>
			<property description="Action text of cell 7" name="actionText7" type="string" value=""/>
			<property description="Text of cell 8" name="cellText8" type="string" value=""/>
			<property description="Image of cell 8" name="cellImage8" type="string" value=""/>
			<property description="Action text of cell 8" name="actionText8" type="string" value=""/>
			<property description="Text of cell 9" name="cellText9" type="string" value=""/>
			<property description="Image of cell 9" name="cellImage9" type="string" value=""/>
			<property description="Action text of cell 9" name="actionText9" type="string" value=""/>
			<property description="Text of cell 10" name="cellText10" type="string" value=""/>
			<property description="Image of cell 10" name="cellImage10" type="string" value=""/>
			<property description="Action text of cell 10" name="actionText10" type="string" value=""/>
			<property description="Text of cell 11" name="cellText11" type="string" value=""/>
			<property description="Image of cell 11" name="cellImage11" type="string" value=""/>
			<property description="Action text of cell 11" name="actionText11" type="string" value=""/>
			<property description="Text of cell 12" name="cellText12" type="string" value=""/>
			<property description="Image of cell 12" name="cellImage12" type="string" value=""/>
			<property description="Action text of cell 12" name="actionText12" type="string" value=""/>
			<property description="Text of cell 13" name="cellText13" type="string" value=""/>
			<property description="Image of cell 13" name="cellImage13" type="string" value=""/>
			<property description="Action text of cell 13" name="actionText13" type="string" value=""/>
			<property description="Text of cell 14" name="cellText14" type="string" value=""/>
			<property description="Image of cell 14" name="cellImage14" type="string" value=""/>
			<property description="Action text of cell 14" name="actionText14" type="string" value=""/>
			<property description="Text of cell 15" name="cellText15" type="string" value=""/>
			<property description="Image of cell 15" name="cellImage15" type="string" value=""/>
			<property description="Action text of cell 15" name="actionText15" type="string" value=""/>
			<property description="Text of cell 16" name="cellText16" type="string" value=""/>
			<property description="Image of cell 16" name="cellImage16" type="string" value=""/>
			<property description="Action text of cell 16" name="actionText16" type="string" value=""/>
			<property description="Text of cell 17" name="cellText17" type="string" value=""/>
			<property description="Image of cell 17" name="cellImage17" type="string" value=""/>
			<property description="Action text of cell 17" name="actionText17" type="string" value=""/>
			<property description="Text of cell 18" name="cellText18" type="string" value=""/>
			<property description="Image of cell 18" name="cellImage18" type="string" value=""/>
			<property description="Action text of cell 18" name="actionText18" type="string" value=""/>
			<property description="Text of cell 19" name="cellText19" type="string" value=""/>
			<property description="Image of cell 19" name="cellImage19" type="string" value=""/>
			<property description="Action text of cell 19" name="actionText19" type="string" value=""/>
			<property description="Text of cell 20" name="cellText20" type="string" value=""/>
			<property description="Image of cell 20" name="cellImage20" type="string" value=""/>
			<property description="Action text of cell 20" name="actionText20" type="string" value=""/>
			<property description="Text of cell 21" name="cellText21" type="string" value=""/>
			<property description="Image of cell 21" name="cellImage21" type="string" value=""/>
			<property description="Action text of cell 21" name="actionText21" type="string" value=""/>
			<property description="Text of cell 22" name="cellText22" type="string" value=""/>
			<property description="Image of cell 22" name="cellImage22" type="string" value=""/>
			<property description="Action text of cell 22" name="actionText22" type="string" value=""/>
			<property description="Text of cell 23" name="cellText23" type="string" value=""/>
			<property description="Image of cell 23" name="cellImage23" type="string" value=""/>
			<property description="Action text of cell 23" name="actionText23" type="string" value=""/>
			<property description="Text of cell 24" name="cellText24" type="string" value=""/>
			<property description="Image of cell 24" name="cellImage24" type="string" value=""/>
			<property description="Action text of cell 24" name="actionText24" type="string" value=""/>
			<property description="Text of cell 25" name="cellText25" type="string" value=""/>
			<property description="Image of cell 25" name="cellImage25" type="string" value=""/>
			<property description="Action text of cell 25" name="actionText25" type="string" value=""/>
			<property description="Text of cell 26" name="cellText26" type="string" value=""/>
			<property description="Image of cell 26" name="cellImage26" type="string" value=""/>
			<property description="Action text of cell 26" name="actionText26" type="string" value=""/>
			<property description="Text of cell 27" name="cellText27" type="string" value=""/>
			<property description="Image of cell 27" name="cellImage27" type="string" value=""/>
			<property description="Action text of cell 27" name="actionText27" type="string" value=""/>
			<property description="Text of cell 28" name="cellText28" type="string" value=""/>
			<property description="Image of cell 28" name="cellImage28" type="string" value=""/>
			<property description="Action text of cell 28" name="actionText28" type="string" value=""/>
			<property description="Text of cell 29" name="cellText29" type="string" value=""/>
			<property description="Image of cell 29" name="cellImage29" type="string" value=""/>
			<property description="Action text of cell 29" name="actionText29" type="string" value=""/>
			<property description="Text of cell 30" name="cellText30" type="string" value=""/>
			<property description="Image of cell 30" name="cellImage30" type="string" value=""/>
			<property description="Action text of cell 30" name="actionText30" type="string" value=""/>
			<property description="Text of cell 31" name="cellText31" type="string" value=""/>
			<property description="Image of cell 31" name="cellImage31" type="string" value=""/>
			<property description="Action text of cell 31" name="actionText31" type="string" value=""/>
			<property description="Text of cell 32" name="cellText32" type="string" value=""/>
			<property description="Image of cell 32" name="cellImage32" type="string" value=""/>
			<property description="Action text of cell 32" name="actionText32" type="string" value=""/>
			<property description="Text of cell 33" name="cellText33" type="string" value=""/>
			<property description="Image of cell 33" name="cellImage33" type="string" value=""/>
			<property description="Action text of cell 33" name="actionText33" type="string" value=""/>
			<property description="Text of cell 34" name="cellText34" type="string" value=""/>
			<property description="Image of cell 34" name="cellImage34" type="string" value=""/>
			<property description="Action text of cell 34" name="actionText34" type="string" value=""/>
			<property description="Text of cell 35" name="cellText35" type="string" value=""/>
			<property description="Image of cell 35" name="cellImage35" type="string" value=""/>
			<property description="Action text of cell 35" name="actionText35" type="string" value=""/>
			<property description="Text of cell 36" name="cellText36" type="string" value=""/>
			<property description="Image of cell 36" name="cellImage36" type="string" value=""/>
			<property description="Action text of cell 36" name="actionText36" type="string" value=""/>
        </properties>
		<gui>
			<width>3000</width>
			<height>3000</height>
		</gui>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.digitalin.DigitalInInstance" id="asterics.DigitalIn">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>triggers if input 1 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>triggers if input 2 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>triggers if input 3 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4High">
                <description>triggers if input 4 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5High">
                <description>triggers if input 5 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6High">
                <description>triggers if input 6 switched to high level</description>
            </eventTriggererPort>

            <eventTriggererPort id="in1Low">
                <description>triggers if input 1 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>triggers if input 2 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>triggers if input 3 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4Low">
                <description>triggers if input 4 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5Low">
                <description>triggers if input 5 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6Low">
                <description>triggers if input 6 switched to low level</description>
            </eventTriggererPort>
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn2" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn3" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn4" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn5" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn6" type="boolean" value="false"/>
            <property description="value of interval between periodic update messagess of inputs in ms" name="periodicUpdate" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
            
        </properties>
    </componentType>

    <componentType canonical_name="eu.asterics.component.sensor.digitalin.DigitalInInstance" id="asterics.LegacyDigitalIn">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>true</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>triggers if input 1 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>triggers if input 2 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>triggers if input 3 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4High">
                <description>triggers if input 4 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5High">
                <description>triggers if input 5 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6High">
                <description>triggers if input 6 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in7High">
                <description>triggers if input 7 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in8High">
                <description>triggers if input 8 switched to high level</description>
            </eventTriggererPort>

            <eventTriggererPort id="in1Low">
                <description>triggers if input 1 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>triggers if input 2 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>triggers if input 3 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4Low">
                <description>triggers if input 4 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5Low">
                <description>triggers if input 5 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6Low">
                <description>triggers if input 6 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in7Low">
                <description>triggers if input 7 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in8Low">
                <description>triggers if input 8 switched to low level</description>
            </eventTriggererPort>
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn2" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn3" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn4" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn5" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn6" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn7" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn8" type="boolean" value="false"/>
            <property description="value of interval between periodic update messagess of inputs in ms" name="periodicUpdate" type="integer" value="0"/>
            <property description="ID (if more than one devices of this kind are connected)" getStringList="true" name="uniqueID" type="string" value="not used"/>
                      
            
        </properties>
    </componentType>
    
    

 <componentType canonical_name="eu.asterics.component.sensor.editbox.EditBoxInstance" id="asterics.EditBox">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>Text edit box</description>
        <ports>

			<outputPort id="output">
				<description>output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>

		</events>			
        <properties>
			<property description="Caption of the component" name="caption" type="string" value="Edit Box"/>
			<property description="Defalult text" name="default" type="string" value=""/>
			<property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="color of text" name="textColor" type="integer" value="0"/> 
            <property combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow" description="background color" name="backgroundColor" type="integer" value="11"/> 
            <property combobox="do nothing//select text//remove text" description="defines behaviour of the component after text insert" name="insertAction" type="integer" value="0"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>

 <componentType canonical_name="com.starlab.component.sensor.enobio.EnobioInstance" id="asterics.Enobio">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>true</singleton>
        <description>Enobio sensor (ECG, EEG and EMG)</description>
        <ports>
            <outputPort id="Channel1">
                <description>Output port of channel 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel2">
                <description>Output port of channel 2</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel3">
                <description>Output port of channel 3</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel4">
                <description>Output port of channel 4</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Status">
                <description>Output port of status channel</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="externalSignalPosEdgeEvent">
                <description>This event is fired if the external signal toggles from low to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="externalSignalNegEdgeEvent">
                <description>Event port triggers if the external signal toggles from high to low level</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property description="Defines if the channel 1 is activated" name="IsChannel1Activated" type="boolean" value="true"/>
            <property description="Defines if the channel 2 is activated" name="IsChannel2Activated" type="boolean" value="true"/>
            <property description="Defines if the channel 3 is activated" name="IsChannel3Activated" type="boolean" value="true"/>
            <property description="Defines if the channel 4 is activated" name="IsChannel4Activated" type="boolean" value="true"/>
            <property description="Defines if a high pass filter is applied to the channel 1" name="HighPassFilterInChannel1" type="boolean" value="false"/>
            <property description="Defines if a high pass filter is applied to the channel 2" name="HighPassFilterInChannel2" type="boolean" value="false"/>
            <property description="Defines if a high pass filter is applied to the channel 3" name="HighPassFilterInChannel3" type="boolean" value="false"/>
            <property description="Defines if a high pass filter is applied to the channel 4" name="HighPassFilterInChannel4" type="boolean" value="false"/>
            <property description="Defines if the 50 Hz band-stop filter is applied to all four channels" name="LineNoiseFilter" type="boolean" value="false"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.eog.EogInstance" id="asterics.EOG">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>true</singleton>
        <description>connects to EOG CIM and measures horizontal and vertical eye movements</description>
        <ports>

			<outputPort id="horizontal">
				<description>horizontal eye movement</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="vertical">
				<description>vertical eye movement</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Update period for EOG values (in milliseconds)" name="updatePeriod" type="integer" value="100"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.event_generator.EventGeneratorInstance" id="asterics.EventGenerator">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Simple Event generator</description>
        <ports>
            <!-- no ports involved -->
        </ports>
        <events>
            <eventTriggererPort id="event_out_1">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property description="The delay in milliseconds between events" name="generation_delay" type="integer" value="1000"/>
            <property description="The payload to be included in the events (empty means null)" name="event_payload" type="string" value=""/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.eyetracker.EyetrackerInstance" id="asterics.Eyetracker">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Webcamera-based eye tracking sensor with gaze tracking support</description>
        <ports>
            <inputPort id="pt1x">
                <description>Headpose compensation tracking point 1, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt1y">
                <description>Headpose compensation tracking point 1, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt2x">
                <description>Headpose compensation tracking point 2, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt2y">
                <description>Headpose compensation tracking point 2, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt3x">
                <description>Headpose compensation tracking point 3, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt3y">
                <description>Headpose compensation tracking point 3, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt4x">
                <description>Headpose compensation tracking point 4, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt4y">
                <description>Headpose compensation tracking point 4, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        
            <outputPort id="x">
                <description>Output port of X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="y">
                <description>Output port of Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="calibrate">
                <description>perform calibration procedure</description>
            </eventListenerPort>
            <eventListenerPort id="offsetCorrection">
                <description>correct cursor offset during eyetracking</description>
            </eventListenerPort>
            <eventListenerPort id="showCameraSettings">
                <description>shows Camera Settings Window</description>
            </eventListenerPort>
            <eventListenerPort id="togglePoseInfoWindow">
                <description>opens/closes the POSIT information window</description>
            </eventListenerPort>
            <eventListenerPort id="startEvaluation">
                <description>starts the evaluation of the systems accuracy</description>
            </eventListenerPort>
            <eventListenerPort id="saveProfile">
                <description>save camera profile to file</description>
            </eventListenerPort>            
            <eventTriggererPort id="blinkDetected">
                <description>triggered if idle time of pupil detection is in the selected blinktime interval</description>
            </eventTriggererPort>            
            <eventTriggererPort id="longBlinkDetected">
                <description>triggered if idle time of pupil detection reaches the maximum blinktime</description>
            </eventTriggererPort>            
        </events>
        <properties>
            <property combobox="first camera//second camera//third camera//forth camera//fifth camera" description="the camera device to be used" name="cameraSelection" type="integer" value="0"/>
            <property combobox="160x120//320x240//352x288//640x480//800x600//1024x768//1600x1200" description="desired camera resolution" name="cameraResolution" type="integer" value="1"/>
            <property description="Filename of the camera profile" name="cameraProfile" type="string" value=""/>            
            <property description="the update period for the camera display in milliseconds (0=no display window)" name="cameraDisplayUpdate" type="integer" value="100"/>
            <property combobox="only blob tracking//calibrated eye tracking//calibrated eye tracking with head pose estimation" description="desired tracking mode" name="trackingMode" type="integer" value="1"/>
            <property description="minimum Area for pupil detection" name="minArea" type="integer" value="100"/>
            <property description="maximum Area for pupil detection" name="maxArea" type="integer" value="3000"/>
            <property description="roundness criteria for pupil detection (1=perfect circle)" name="roundness" type="double" value="0.92"/>
            <property description="threshold brightness for glint removal (0-255)" name="glintBrightness" type="integer" value="100"/>
            <property description="minimum value for output at port X" name="xMin" type="integer" value="0"/>
            <property description="maximum value for output at port X (0 for auto-detect screen x-resolution)" name="xMax" type="integer" value="2000"/>
            <property description="minimum value for output at port Y" name="yMin" type="integer" value="0"/>
            <property description="maximum value for output at port Y (0 for auto-detect screen y-resolution)" name="yMax" type="integer" value="1024"/>
            <property description="calibration sections in X direction (must be 2 or more)" name="calibrationStepsX" type="integer" value="3"/>
            <property description="calibration sections in Y direction (must be 2 or more)" name="calibrationStepsY" type="integer" value="3"/>
            <property description="averaging steps for output calculation (must be less than 30)" name="averaging" type="integer" value="10"/>
            <property description="screen diagonal in inches" name="screenSize" type="double" value="22"/>
            <property description="minimum idle time for blink detection (0=disable blink detection)" name="minBlinkDuration" type="integer" value="300"/>
            <property description="maximum idle time for blink detection" name="maxBlinkDuration" type="integer" value="800"/>
        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>1500</height>
        </gui>
    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.facetrackerCLM2.FacetrackerCLM2Instance" id="asterics.FacetrackerCLM">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Facetracker plugin. Ideal in mouse control models. It also implements a blink detection system.</description>
        <ports>
			<outputPort id="Roll">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Pitch">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Yaw">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			
			<outputPort id="PosX">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="PosY">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Scale">
				<description>Scale</description>
				<dataType>double</dataType></outputPort>
			<outputPort id="EyeLeft">
				<description>State of the Left Eye (Open 0 /Close 1/Other -1)</description>
				<dataType>integer</dataType></outputPort>
			<outputPort id="EyeRight">
				<description>State of the Right Eye (Open 0 /Close 1/Other -1)</description>
				<dataType>integer</dataType></outputPort></ports>
		<events>
			<eventTriggererPort id="EyebrowsRaised">
				<description>etp description</description>
			</eventTriggererPort>
			<eventListenerPort id="reset">
				<description>Forces Reset</description>
			</eventListenerPort>
			<eventListenerPort id="showCameraSettings">
				<description>Opens Camera Settings Dialog</description></eventListenerPort>
			<eventListenerPort id="setReferencePose">
				<description>Sets the reference pose.</description></eventListenerPort></events>			
        <properties>
			<property combobox="first camera//second camera//third camera//forth camera//fifth camera" description="the camera device to be opened" name="cameraSelection" type="integer" value="0"/>
			<property combobox="160x120//320x240//640x480" description="Desired camera resolution" name="cameraResolution" type="integer" value="1"/>
			<property description="The name of the model file without the extension." name="modelName" type="string" value="Generic"/>
			<property description="the update period for the camera display in milliseconds (0=no display window)" name="cameraDisplayUpdate" type="integer" value="100"/></properties>
        <gui IsExternalGUIElement="true">
        	<width>2000</width>
        	<height>1500</height></gui></componentType>

 <componentType canonical_name="eu.asterics.component.sensor.facetrackerLK.FacetrackerLKInstance" id="asterics.FacetrackerLK">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Webcamera-based face tracking sensor</description>
        <ports>
            <outputPort id="noseX">
                <description>Output port of nose X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="noseY">
                <description>Output port of nose Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinX">
                <description>Output port of chin X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinY">
                <description>Output port of chin Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="init">
                <description>perform new face detection when head is centered</description>
            </eventListenerPort>
            <eventListenerPort id="showCameraSettings">
                <description>shows Camera Settings Window</description>
            </eventListenerPort> 
            <eventListenerPort id="saveProfile">
                <description>save camera profile to file</description>
            </eventListenerPort>                        
        </events>
        <properties>
            <property combobox="first camera//second camera//third camera//forth camera//fifth camera" description="the camera device to be used" name="cameraSelection" type="integer" value="0"/>
            <property combobox="160x120//320x240//352x288//640x480//800x600//1024x768//1600x1200" description="desired camera resolution" name="cameraResolution" type="integer" value="1"/>
            <property description="the update period for the camera display in milliseconds (0=no display window)" name="cameraDisplayUpdate" type="integer" value="100"/>
            <property description="Filename of the camera profile" name="cameraProfile" type="string" value=""/>            
                              
        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>1500</height>
        </gui>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.fs20receiver.FS20ReceiverInstance" id="asterics.FS20Receiver">
        <type subtype="Home Control">sensor</type>
        <singleton>true</singleton>
        <description>Receiver Plugin for the FS20 Home automatisation system</description>
        <ports>
			<outputPort id="fs20command">
                <description>FS20String containing housecode, senderaddress and command</description>
                <dataType>string</dataType>
            </outputPort>

        </ports>
		<events>

			<eventTriggererPort id="off">
				<description>Switch off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel1">
				<description>Light on 6,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel2">
				<description>Light on 12,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel3">
				<description>Light on 18,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel4">
				<description>Light on 25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel5">
				<description>Light on 31,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel6">
				<description>Light on 37,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel7">
				<description>Light on 43,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel8">
				<description>Light on 50%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel9">
				<description>Light on 56,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel10">
				<description>Light on 62,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel11">
				<description>Light on 68,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel12">
				<description>Light on 75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel13">
				<description>Light on 81,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel14">
				<description>Light on 87,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel15">
				<description>Light on 93,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel16">
				<description>Light on 100%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevel">
				<description>Switch on old level</description>
			</eventTriggererPort>
			<eventTriggererPort id="toggle">
				<description>Toggle between off an on, old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUp">
				<description>Dim up for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimDown">
				<description>Dim down for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUpAndDown">
				<description>Dim up, then down, then up etc. </description>
			</eventTriggererPort>
			<eventTriggererPort id="programTimer">
				<description>Start/stop programmable timer</description>
			</eventTriggererPort>
			<eventTriggererPort id="offForTimerThenOldLevel">
				<description>Off for internal timer, than old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOff">
				<description>On for internal timer, than off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenOff">
				<description>On (old value) for internal timer, then off</description>
			</eventTriggererPort>
			<eventTriggererPort id="reset">
				<description>reset to factory default</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOldLevel">
				<description>On for internal timer, then old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenPreviousState">
				<description>On (old value) for internal timer, then old value</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="The housecode of the receiver" name="Housecode" type="integer" value="11111111"/>
			<property description="The send address of the receiver" name="Sendaddress" type="integer" value="1111"/>
        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.joystickcapture.JoystickCaptureInstance" id="asterics.JoystickCapture">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Gets data from the first available Joystick device; up to 6 axis and 20 buttons can be used; Note the different order of buttons 1-4 in a PC-compatible gamepad to the PS3 sixaxis controller (HIDjoystick)</description>
        <ports>

			<outputPort id="x">
				<description>X-Axis (Left-X)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="y">
				<description>Y-Axis (Left-Y)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="z">
				<description>Z-Axis (Right-X)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="r">
				<description>R-Axis (Right-Y)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="u">
				<description>U-Axis</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="v">
				<description>V-Axis</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pov">
				<description>Point-Of-Vision (Direction 1-8)</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
            <eventTriggererPort id="pressedButton1">
                <description>button 1 (Triangle) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton1">
                <description>button 1 (Triangle) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton2">
                <description>button 2 (Circle) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton2">
                <description>button 2 (Circle) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton3">
                <description>button 3 (Cross) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton3">
                <description>button 3 (Cross) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton4">
                <description>button 4 (Square) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton4">
                <description>button 4 (Square) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton5">
                <description>button 5 (L1) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton5">
                <description>button 5 (L1) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton6">
                <description>button 6 (R1) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton6">
                <description>button 6 (R1) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton7">
                <description>button 7 (L2) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton7">
                <description>button 7 (L2) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton8">
                <description>button 8 (R2) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton8">
                <description>button 8 (R2) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton9">
                <description>button 9 (Select) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton9">
                <description>button 9 (Select) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton10">
                <description>button 10 (Start) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton10">
                <description>button 10 (Start) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton11">
                <description>button 11 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton11">
                <description>button 11 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton12">
                <description>button 12 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton12">
                <description>button 12 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton13">
                <description>button 13 (PS) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton13">
                <description>button 13 (PS) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton14">
                <description>button 14 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton14">
                <description>button 14 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton15">
                <description>button 15 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton15">
                <description>button 15 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton16">
                <description>button 16 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton16">
                <description>button 16 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton17">
                <description>button 17 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton17">
                <description>button 17 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton18">
                <description>button 18 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton18">
                <description>button 18 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton19">
                <description>button 19 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton19">
                <description>button 19 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton20">
                <description>button 20 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton20">
                <description>button 20 has been released</description>
            </eventTriggererPort>

		</events>			
        <properties>
            <property description="the update period for getting new values from the joystick device (in milliseconds)" name="updatePeriod" type="integer" value="100"/>
			
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.keyboardcapture.KeyboardCaptureInstance" id="asterics.KeyboardCapture">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Keyboard capture</description> 
        <ports>
            <outputPort id="keyCode">
                <description>Output port for keycode</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="words">
                <description>Output port for individual words</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
         <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event port triggers on recognition of command 1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event port triggers on recognition of command 2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event port triggers on recognition of command 3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event port triggers on recognition of command 4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event port triggers on recognition of command 5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event port triggers on recognition of command 6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand8">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand9">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand10">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
        </events>
      
        <properties>
            <property description="if selected, keyboard events will not be processed on the local system" name="blockEvents" type="boolean" value="true"/>
            <property combobox="process words seperated by space//process single characters" description="the mode of operation" name="mode" type="integer" value="0"/>
            <property description="if recognized, event1 will be triggered" name="command1" type="string" value="one"/>
            <property description="if recognized, event2 will be triggered" name="command2" type="string" value="two"/>
            <property description="if recognized, event3 will be triggered" name="command3" type="string" value="three"/>
            <property description="if recognized, event4 will be triggered" name="command4" type="string" value="four"/>
            <property description="if recognized, event5 will be triggered" name="command5" type="string" value="five"/>
            <property description="if recognized, event6 will be triggered" name="command6" type="string" value="six"/>
            <property description="if recognized, event7 will be triggered" name="command7" type="string" value="seven"/>
            <property description="if recognized, event8 will be triggered" name="command8" type="string" value="eight"/>
            <property description="if recognized, event9 will be triggered" name="command9" type="string" value="nine"/>
            <property description="if recognized, event10 will be triggered" name="command10" type="string" value="ten"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.kinect.KinectInstance" id="asterics.Kinect">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>My Plugin description</description>
        <ports>

			<outputPort id="HeadX">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadY">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadZ">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandX">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandY">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandZ">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandX">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandY">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandZ">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootX">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootY">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootZ">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootX">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootY">
				<description/>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootZ">
				<description/>
				<dataType>double</dataType>
			</outputPort>
        </ports>
		<events>


		</events>			
        <properties>
			<property description="show JPanel" name="visualize" type="boolean" value="true"/>
			<property description="if true the zero point (0,0) is at the center of the image" name="centerZeroPoint" type="boolean" value="false"/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.lipmouse.LipmouseInstance" id="asterics.Lipmouse">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Lipmouse CIM</description>
        <ports>

			<outputPort id="X">
				<description>X's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="Y">
				<description>Y's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pressure">
				<description>Presure value</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="calibration">
				<description>For calibrating the mouse</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="Automatic update of ADC values (time in milliseconds, 0=off)" name="periodicADCUpdate" type="integer" value="50"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.mousecapture.MouseCaptureInstance" id="asterics.MouseCapture">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Captures mouse cursor activity from local system</description> 
        <ports>
            <outputPort id="mouseX">
                <description>Output port mouse X movement</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseY">
                <description>Output port mouse Y movement</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="leftButtonPressed">
                <description>Event port triggers on left mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="leftButtonReleased">
                <description>Event port triggers on left mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="rightButtonPressed">
                <description>Event port triggers on right mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="rightButtonReleased">
                <description>Event port triggers on right mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="middleButtonPressed">
                <description>Event port triggers on middle mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="middleButtonReleased">
                <description>Event port triggers on middle mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="wheelUp">
                <description>Event port triggers when mouse wheel is moved up</description>
            </eventTriggererPort>
            <eventTriggererPort id="wheelDown">
                <description>Event port triggers when mouse wheel is moved down</description>
            </eventTriggererPort>
			<eventListenerPort id="blockEvents">
                <description>Eventlistener to block mouse events. This means the mouse events will not be processed by the local system.</description>
            </eventListenerPort>
			<eventListenerPort id="forwardEvents">
                <description>Forward mouse events to the local system</description>
            </eventListenerPort>
        </events>
        
        <properties>
            <property description="if selected, mouse events will not be processed on the local system" name="blockEvents" type="boolean" value="true"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.micgpi.MicGPIInstance" id="asterics.MicGPI">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>This plugin reads an input signal via the microphone input</description>
        <ports>

			<inputPort id="thresholdLow">
				<description>threshold for button release</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="thresholdHigh">
				<description>threshold for button release</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			
		
			<outputPort id="pressure">
				<description>sound pressure level</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="frequency">
				<description>the dominant frequency in the spectrum</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventTriggererPort id="inLow">
				<description>This event gets fired if the signal goes beyond the lowThreshold</description>
			</eventTriggererPort>
			<eventTriggererPort id="inHigh">
				<description>This event gets fired if the signal goes over the highThreshold</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property combobox="32//64//128//256//512//1024//2048" description="interval length (in samples)" name="sampleSize" type="integer" value="3"/>
			<property description="threshold for low event" name="thresholdLow" type="integer" value="-30"/>
			<property description="threshold for high event" name="thresholdHigh" type="integer" value="30"/>
			<property description="sound below noise level will be attenuated" name="noiseLevel" type="double" value="1.5"/>

			<property description="if selected, the dominant frequency is calculated" name="calculateFrequency" type="boolean" value="false"/> 
			<property description="if selected, the frequency spectrum is shown in the console window" name="printSpectrum" type="boolean" value="false"/> 
			<property description="Specifies which device should be used for recording" getStringList="true" name="captureDevice" type="string" value="System Default"/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.openvibe.OpenViBEInstance" id="asterics.OpenViBE">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>UDP Server for transfer of OSC data</description>
        <ports>

			<outputPort id="CH1">
				<description>CH1 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>CH2 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>CH3 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>CH4 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>CH5 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>CH6 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>CH7 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>CH8 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH9">
				<description>CH9 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH10">
				<description>CH10 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH11">
				<description>CH11 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH12">
				<description>CH12 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH13">
				<description>CH13 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH14">
				<description>CH14 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH15">
				<description>CH15 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH16">
				<description>CH16 (double)</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="TriggerOut">
				<description>Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_00">
				<description>OVTK_StimulationId_Label_00 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_01">
				<description>OVTK_StimulationId_Label_01 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_02">
				<description>OVTK_StimulationId_Label_02 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_03">
				<description>OVTK_StimulationId_Label_03 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_04">
				<description>OVTK_StimulationId_Label_04 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_05">
				<description>OVTK_StimulationId_Label_05 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_06">
				<description>OVTK_StimulationId_Label_06 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_07">
				<description>OVTK_StimulationId_Label_07 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_08">
				<description>OVTK_StimulationId_Label_08 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_09">
				<description>OVTK_StimulationId_Label_09 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0A">
				<description>OVTK_StimulationId_Label_0A Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0B">
				<description>OVTK_StimulationId_Label_0B Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0C">
				<description>OVTK_StimulationId_Label_0C Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_Target">
				<description>OVTK_StimulationId_Label_Target Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_NonTarget">
				<description>OVTK_StimulationId_Label_NonTarget Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_0">
				<description>OVTK_StimulationId_Letter_0 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_1">
				<description>OVTK_StimulationId_Letter_1 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_2">
				<description>OVTK_StimulationId_Letter_2 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_3">
				<description>OVTK_StimulationId_Letter_3 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_4">
				<description>OVTK_StimulationId_Letter_4 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_5">
				<description>OVTK_StimulationId_Letter_5 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_6">
				<description>OVTK_StimulationId_Letter_6 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_7">
				<description>OVTK_StimulationId_Letter_7 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_8">
				<description>OVTK_StimulationId_Letter_8 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_9">
				<description>OVTK_StimulationId_Letter_9 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_A">
				<description>OVTK_StimulationId_Letter_A Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_B">
				<description>OVTK_StimulationId_Letter_B Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_C">
				<description>OVTK_StimulationId_Letter_C Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_D">
				<description>OVTK_StimulationId_Letter_D Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_E">
				<description>OVTK_StimulationId_Letter_E Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_F">
				<description>OVTK_StimulationId_Letter_F Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_G">
				<description>OVTK_StimulationId_Letter_G Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_H">
				<description>OVTK_StimulationId_Letter_H Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_I">
				<description>OVTK_StimulationId_Letter_I Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_J">
				<description>OVTK_StimulationId_Letter_J Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_K">
				<description>OVTK_StimulationId_Letter_K Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_L">
				<description>OVTK_StimulationId_Letter_L Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_M">
				<description>OVTK_StimulationId_Letter_M Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_N">
				<description>OVTK_StimulationId_Letter_N Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_O">
				<description>OVTK_StimulationId_Letter_O Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_P">
				<description>OVTK_StimulationId_Letter_P Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Q">
				<description>OVTK_StimulationId_Letter_Q Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_R">
				<description>OVTK_StimulationId_Letter_R Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_S">
				<description>OVTK_StimulationId_Letter_S Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_T">
				<description>OVTK_StimulationId_Letter_T Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_U">
				<description>OVTK_StimulationId_Letter_U Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_V">
				<description>OVTK_StimulationId_Letter_V Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_W">
				<description>OVTK_StimulationId_Letter_W Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_X">
				<description>OVTK_StimulationId_Letter_X Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Y">
				<description>OVTK_StimulationId_Letter_Y Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Z">
				<description>OVTK_StimulationId_Letter_Z Trigger Output in case of received data</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="AsTeRICS UDP OSC listening Port" name="Port" type="integer" value="57110"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.oscserver.OscServerInstance" id="asterics.OscServer">
        <type subtype="Communication">sensor</type>
        <singleton>false</singleton>
        <description>Receives OSC messages and forward it to the ARE</description>
        <ports>

			<outputPort id="CH1">
				<description>output CH1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>output CH2</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>output CH3</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>output CH4</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>output CH5</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>output CH6</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>output CH7</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>output CH8</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH9">
				<description>string output CH9</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH10">
				<description>string output CH10</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH11">
				<description>string output CH11</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH12">
				<description>string output CH12</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="Osc Server Port" name="Port" type="integer" value="57000"/>
			<property description="Address of Osc Stream 1" name="AddressCH1" type="string" value="/Channel1"/>
			<property description="Argument Number of OSC Stream 1" name="ArgNrCH1" type="integer" value="1"/>
			<property description="Address of Osc Stream 2" name="AddressCH2" type="string" value="/Channel2"/>
			<property description="Argument Number of OSC Stream 2" name="ArgNrCH2" type="integer" value="1"/>
			<property description="Address of Osc Stream 3" name="AddressCH3" type="string" value="/Channel3"/>
			<property description="Argument Number of OSC Stream 3" name="ArgNrCH3" type="integer" value="1"/>
			<property description="Address of Osc Stream 4" name="AddressCH4" type="string" value="/Channel4"/>
			<property description="Argument Number of OSC Stream 4" name="ArgNrCH4" type="integer" value="1"/>
			<property description="Address of Osc Stream 5" name="AddressCH5" type="string" value="/Channel5"/>
			<property description="Argument Number of OSC Stream 5" name="ArgNrCH5" type="integer" value="1"/>
			<property description="Address of Osc Stream 6" name="AddressCH6" type="string" value="/Channel6"/>
			<property description="Argument Number of OSC Stream 6" name="ArgNrCH6" type="integer" value="1"/>
			<property description="Address of Osc Stream 7" name="AddressCH7" type="string" value="/Channel7"/>
			<property description="Argument Number of OSC Stream 7" name="ArgNrCH7" type="integer" value="1"/>
			<property description="Address of Osc Stream 8" name="AddressCH8" type="string" value="/Channel8"/>
			<property description="Argument Number of OSC Stream 8" name="ArgNrCH8" type="integer" value="1"/>
			<property description="Address of Osc Stream 9" name="AddressCH9" type="string" value="/Channel9"/>
			<property description="Argument Number of OSC Stream 9" name="ArgNrCH9" type="integer" value="1"/>
			<property description="Address of Osc Stream 10" name="AddressCH10" type="string" value="/Channel10"/>
			<property description="Argument Number of OSC Stream 10" name="ArgNrCH10" type="integer" value="1"/>
			<property description="Address of Osc Stream 11" name="AddressCH11" type="string" value="/Channel11"/>
			<property description="Argument Number of OSC Stream 11" name="ArgNrCH11" type="integer" value="1"/>
			<property description="Address of Osc Stream 12" name="AddressCH12" type="string" value="/Channel12"/>
			<property description="Argument Number of OSC Stream 12" name="ArgNrCH12" type="integer" value="1"/>
			
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.p2_parser.P2_parserInstance" id="asterics.p2_parser">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>This plugin receives a P"-packet stream compatible to the OpenEEG ModularEEG / SMT EEG firmware. 6 Channels of bioelectric data can be processed.</description>
        <ports>

			<outputPort id="Channel1">
				<description>output port for channel1 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel2">
				<description>output port for channel2 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel3">
				<description>output port for channel3 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel4">
				<description>output port for channel4 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel5">
				<description>output port for channel5 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel6">
				<description>output port for channel6 data</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="The COM Port which will be opened to receive a P2-packet stream" name="ComPort" type="string" value="COM4"/>
			<property description="The baud rate for the P2 packet stream" name="BaudRate" type="integer" value="57600"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.platformanalogin.PlatformAnalogInInstance" id="asterics.PlatformAnalogIn">
        <type subtype="Personal Platform">sensor</type>
        <singleton>false</singleton>
        <description>ADC inputs of personal platform</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateInput2" type="boolean" value="false"/>
            <property description="value of interval between periodic update messagess of inputs in ms" name="periodicUpdate" type="integer" value="0"/>
                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.platformdigitalin.PlatformDigitalInInstance" id="asterics.PlatformDigitalIn">
        <type subtype="Personal Platform">sensor</type>
        <singleton>true</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
<!--             
            <eventTriggererPort id="in4High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
 -->
            <eventTriggererPort id="in1Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
<!--
            <eventTriggererPort id="in4Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
 -->             
        </events>        
        <properties>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn1" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn2" type="boolean" value="false"/>
            <property description="Defines if CIM should notify ARE on input level changes of this input" name="activateEventIn3" type="boolean" value="false"/>
<!-- 
            <property name="activateEventIn4"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
 -->                      
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.proximity.ProximityInstance" id="asterics.Proximity">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Distance Sensor</description>
        <ports>

			<outputPort id="distance">
				<description>Output port of proximitysensor</description>
				<dataType>integer</dataType>
			</outputPort>
			
			
			<inputPort id="input">
				<description>Input port of proximitysensor to set threshold</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

        </ports>
		<events>

			<eventTriggererPort id="LowToHigh">
				<description>etp current value exceeds threshold - sending 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="HighToLow">
				<description>etp current value falls below threshold - sending 0</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property description="Value to produce events" name="threshold" type="integer" value="0"/>
			<property combobox="Continous data//Events: below-&gt;above//Events: above-&gt;below//Events: both" description="sending mode of the proximity sensor" name="sendingMode" type="integer" value="0"/> 

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.razorimu.RazorImuInstance" id="asterics.RazorIMU">
        <type subtype="Inertial Measurement">sensor</type>
        <singleton>true</singleton>
        <description>9 Degree-of-Freedom Razor Inertial Measurement Unit</description>
        <ports>
            <outputPort id="pitch">
                <description>value for pitch</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="yaw">
                <description>value for yaw</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="roll">
                <description>value for roll</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="COM port of the IMU" name="comPort" type="string" value="COM7"/>
            <property description="BaudRate of the IMU's com port (57600)" name="baudRate" type="integer" value="57600"/>
            <property description="(currently: PitchYawRoll)" name="operationMode" type="string" value="PitchYawRoll"/>        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.readedf.ReadEDFInstance" id="asterics.ReadEDF">
        <type subtype="File System">sensor</type>
        <singleton>false</singleton>
        <description>This plugin reads data from an edf-file and sends it to its output ports</description>
        <ports>

			<outputPort id="CH1">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
            <property description="Wav file to be played." getStringList="true" name="filename" type="string" value=""/>
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.rfidreader.RFIDReaderInstance" id="asterics.RFIDReader">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Interfaces to the ID Innovations RFID reader and outputs a recognized tag identifier</description>
        <ports>

			<outputPort id="tagID">
				<description>Identification string of the RFID tag</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="The COM Port where the RFID reader is connected" name="comPort" type="string" value="COM8"/>
			<property description="The baud rate for communication with the RFID reader" name="baudRate" type="integer" value="9600"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.sensorboard.SensorboardInstance" id="asterics.SensorBoard">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Interfaces the sensor board CIM which provides accelerometer, gyroscope, compass, IR-camera and pressure sensor</description>
        <ports>

			<outputPort id="accX">
				<description>acceleration X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="accY">
				<description>acceleration Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="accZ">
				<description>acceleration Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroX">
				<description>angle velocity X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroY">
				<description>angle velocity Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroZ">
				<description>angle velocity Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassX">
				<description>compass direction X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassY">
				<description>compass direction Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassZ">
				<description>compass direction Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt1X">
				<description>infrared point 1 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt1Y">
				<description>infrared point 1 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt2X">
				<description>infrared point 2 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt2Y">
				<description>infrared point 2 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt3X">
				<description>infrared point 3 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt3Y">
				<description>infrared point 3 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt4X">
				<description>infrared point 4 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt4Y">
				<description>infrared point 4 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pressure">
				<description>air pressure sensor</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="refresh interval for sensor values" name="refreshInterval" type="integer" value="50"/>

        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.signalgenerator.SignalGeneratorInstance" id="asterics.SignalGenerator">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Signal Generator</description>
        <ports>
            <outputPort id="out">
                <description>signal output</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property description="The interval for sending values (ms)" name="sendInterval" type="integer" value="20"/>
            <property combobox="random//sine//sawtooth//rectangle" description="0:random 1:sine 2:sawtooth 3:rectangle" name="waveForm" type="integer" value="1"/>
            <property description="cycles per second" name="frequency" type="double" value="2"/>
            <property description="signal amplitude" name="amplitude" type="double" value="100"/>
            <property description="phase offset (in milliseconds)" name="phaseShift" type="double" value="0"/>
            <property description="signal offset (constant)" name="offset" type="double" value="0"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.signalshaper.SignalShaperInstance" id="asterics.SignalShaper">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>This component allow to shape signal from the lines</description>
        <ports>

			<outputPort id="output">
				<description>Signal output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="start">
				<description>Start signal generation.</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property description="Send interval [ms]" name="interval" type="integer" value="20"/>
			<property combobox="1//2//3//4//5" description="The number of lines used for the signal generation" name="numberOfLines" type="integer" value="0"/>
			<property combobox="do nothing//repeat//send the last value" description="What the component should do after send  signal." name="behaviourAfterFinish" type="integer" value="0"/>
			<property description="Begin value of the line 1" name="beginValue1" type="double" value="0"/>
			<property description="End value of the line 1" name="endValue1" type="double" value="0"/>
			<property description="The time fo the line 1 [ms]" name="time1" type="integer" value="0"/>
			<property description="Begin value of the line 2" name="beginValue2" type="double" value="0"/>
			<property description="End value of the line 2" name="endValue2" type="double" value="0"/>
			<property description="The time fo the line 2 [ms]" name="time2" type="integer" value="0"/>
			<property description="Begin value of the line 3" name="beginValue3" type="double" value="0"/>
			<property description="End value of the line 3" name="endValue3" type="double" value="0"/>
			<property description="The time fo the line 3 [ms]" name="time3" type="integer" value="0"/>
			<property description="Begin value of the line 4" name="beginValue4" type="double" value="0"/>
			<property description="End value of the line 4" name="endValue4" type="double" value="0"/>
			<property description="The time fo the line 4 [ms]" name="time4" type="integer" value="0"/>
			<property description="Begin value of the line 5" name="beginValue5" type="double" value="0"/>
			<property description="End value of the line 5" name="endValue5" type="double" value="0"/>
			<property description="The time fo the line 5 [ms]" name="time5" type="integer" value="0"/>
			
        </properties>

    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.slider.SliderInstance" id="asterics.Slider">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>a slider GUI element which provides the slider value at an output port</description>
        <ports>

			<outputPort id="value">
				<description>the current slider value</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
			
        <properties>
			<property description="the minimum value for the slider" name="min" type="integer" value="0"/>
			<property description="the maximum value for the slider" name="max" type="integer" value="100"/>
			<property description="the default value for the slider" name="default" type="integer" value="50"/>
            <property description="automatically send the Slider's default value at model startup" name="autosend" type="boolean" value="true"/>				
			<property description="the slider caption" name="caption" type="string" value="my slider"/>
			<property description="the major tick spacing" name="majorTickSpacing" type="integer" value="20"/>
			<property description="the minor tick spacing" name="minorTickSpacing" type="integer" value="5"/>
			<property combobox="horizontal//vertical" description="slider alignment" name="alignment" type="integer" value="0"/>
			<property description="slider font size" name="fontSize" type="integer" value="14"/>
        </properties>
        <gui>
            <width>4000</width>
            <height>1000</height>
        </gui>        
    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.spacenavigtor3Dmouse.SpaceNavigtor3DMouseInstance" id="asterics.SpaceNavigator3DMouse">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Captures inputs from the 3D-Connexion SpaceNavigator Mouse</description>
        <ports>
            <outputPort id="mouseX">
                <description>Axis X</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseY">
                <description>Axis Y</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseZ">
                <description>Axis Z</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseRx">
                <description>Axis X rotation</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseRy">
            	<description>Axis Y rotation</description>
            	<dataType>integer</dataType></outputPort>
            <outputPort id="mouseRz">
            	<description>Axis Z rotation</description>
            	<dataType>integer</dataType></outputPort>
            <outputPort id="buttons">
            	<description>Buttons combination</description>
            	<dataType>integer</dataType></outputPort>
        </ports>
        <properties>
            <property description="The interval for capturing 3D mouse state (ms)" name="interval" type="integer" value="300"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.textfieldreader.TextfieldreaderInstance" id="asterics.TextfieldReader">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>true</singleton>
        <description>Captures key input from a text field and compares input with a set of command-words</description> 
        <ports>
            <outputPort id="keys">
                <description>Output port for keycode</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="words">
                <description>Output port for individual words</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
         <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event port triggers on recognition of command 1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event port triggers on recognition of command 2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event port triggers on recognition of command 3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event port triggers on recognition of command 4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event port triggers on recognition of command 5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event port triggers on recognition of command 6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
        </events>
      
        <properties>
            <property description="if recognized, event1 will be triggered" name="command1" type="string" value="one"/>
            <property description="if recognized, event2 will be triggered" name="command2" type="string" value="two"/>
            <property description="if recognized, event3 will be triggered" name="command3" type="string" value="three"/>
            <property description="if recognized, event4 will be triggered" name="command4" type="string" value="four"/>
            <property description="if recognized, event5 will be triggered" name="command5" type="string" value="five"/>
            <property description="if recognized, event6 will be triggered" name="command6" type="string" value="six"/>
            <property description="if recognized, event7 will be triggered" name="command7" type="string" value="seven"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.timer.TimerInstance" id="asterics.Timer">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>measures and outputs time in milliseconds and fires events (periodically or once)</description>
        <ports>
            <inputPort id="period">
                <description>time period in milliseconds</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <outputPort id="time">
                <description>time passed</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="start">
                <description>start timer</description>
            </eventListenerPort>
            <eventListenerPort id="stop">
                <description>stop timer</description>
            </eventListenerPort>
            <eventListenerPort id="reset">
                <description>reset timer to 0</description>
            </eventListenerPort>
            <eventTriggererPort id="periodFinished">
                <description>time period has passed</description>
            </eventTriggererPort>
        </events>
        
        <properties>
            <property combobox="one shot//repeat n times//endless loop//once and continue time output//measure time from start to stop" description="Timer mode" name="mode" type="integer" value="0"/>
            <property description="how many repeat cycles" name="repeatCounter" type="integer" value="1"/>
            <property description="the time in milliseconds" name="timePeriod" type="integer" value="2000"/>
            <property description="resolution for timer calculation and output" name="resolution" type="integer" value="50"/>
            <property description="wait time before timer starts in milliseconds" name="waitPeriod" type="integer" value="0"/>
            <property description="start timer automatically or wait for start event" name="autostart" type="boolean" value="false"/>
        </properties>
    </componentType>


 <componentType canonical_name="eu.asterics.component.sensor.tobitic.TobiTiCInstance" id="asterics.TobiTiC">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>Implements a simple TOBI TiC  interface and outputs classifier values</description>
        <ports>

			<outputPort id="value1">
				<description>value of first class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value2">
				<description>value of second class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value3">
				<description>value of third class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value4">
				<description>value of forth class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value5">
				<description>value of fifth class label</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property description="IP port to listen to" name="tcpPort" type="integer" value="52000"/>
			<property description="name of the first class label" name="classLabel1" type="string" value="label1"/>
			<property description="name of the second class label" name="classLabel2" type="string" value="label2"/>
			<property description="name of the third class label" name="classLabel3" type="string" value="label3"/>
			<property description="name of the forth class label" name="classLabel4" type="string" value="label4"/>
			<property description="name of the fifth class label" name="classLabel5" type="string" value="label5"/>

        </properties>
    </componentType>

 <componentType canonical_name="eu.asterics.component.sensor.wiimote.WiiMoteInstance" id="asterics.WiiMote">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Interfaces to the WiiMote via Bluetooth HID and provides data from Wiimote and Nunchuck controller</description>
        <ports>

			<outputPort id="pitch">
				<description>pitch orientation  of the WiiMote in degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="roll">
				<description>roll orientation  of the WiiMote in degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point1X">
				<description>IR camera point1 tracking X position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point1Y">
				<description>IR camera point1 tracking Y position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point2X">
				<description>IR camera point2 tracking X position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point2Y">
				<description>IR camera point2 tracking Y position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="nunX">
				<description>X position of the Nunchuck Joystick [-1..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="nunY">
				<description>Y position of the Nunchuck Joystick [-1..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="battery">
				<description>battery status [0-100%]</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="pressedUp">
				<description>direction up pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedUp">
				<description>direction up released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedDown">
				<description>direction down pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedDown">
				<description>direction down released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedLeft">
				<description>direction left pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedLeft">
				<description>direction left released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedRight">
				<description>direction right pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedRight">
				<description>direction right released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedA">
				<description>button A pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedA">
				<description>button A released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedB">
				<description>button B pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedB">
				<description>button B released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressed1">
				<description>button 1 pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="released1">
				<description>button 1 released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressed2">
				<description>button 2 pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="released2">
				<description>button 2 released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedPlus">
				<description>button + pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedPlus">
				<description>button + released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedMinus">
				<description>button - pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedMinus">
				<description>button - released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedHome">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedHome">
				<description>button Home pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedNunchuckC">
				<description>button C pressed on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedNunchuckC">
				<description>button C released on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedNunchuckZ">
				<description>button Z pressed on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedNunchuckZ">
				<description>button Z released on the Nunchuck extension</description>
			</eventTriggererPort>

		</events>			
        <properties>
            <property description="the update period for getting new values from the WiiMote device (in milliseconds)" name="updatePeriod" type="integer" value="5"/>	
        </properties>
    </componentType>

</componentTypes>