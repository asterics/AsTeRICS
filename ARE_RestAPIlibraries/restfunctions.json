[{"bodyParameter":"[]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"[text/xml]","description":"Deploys the model given as a parameter","path":"/runtime/model"},{"bodyParameter":"[state]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"","description":"Changes the state of the deployed model to STARTED, PAUSED, STOPPED","path":"/runtime/model/state/{state}"},{"bodyParameter":"[filepath]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"","description":"Deploys the model contained in the given filename","path":"/runtime/model/{filepath}"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/xml]","consumes":"","description":"Returns an xml string containing the descriptors of the created components with some modifications in order to be used by the webACS","path":"/storage/components/descriptors/xml"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Returns the name (ID) of the deployed model","path":"/runtime/model/name"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Returns the state of the deployed model","path":"/runtime/model/state"},{"bodyParameter":"[filepath]","httpRequestType":"GET","produces":"[text/xml]","consumes":"","description":"Returns an xml representation of a model in a specific file","path":"/storage/models/{filepath}"},{"bodyParameter":"[componentId, eventId]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"","description":"Triggers an event on the given component/port","path":"/runtime/model/components/{componentId}/events/{eventId}"},{"bodyParameter":"[filepath]","httpRequestType":"DELETE","produces":"[text/plain]","consumes":"","description":"Deletes the model with the given filename","path":"/storage/models/{filepath}"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Retrieves the model names that are saved in the ARE repository","path":"/storage/models/names"},{"bodyParameter":"[filepath]","httpRequestType":"POST","produces":"[text/plain]","consumes":"[text/plain]","description":"Stores data (body parameter) to a given filepath in the ARE/data folder","path":"/storage/data/{filepath}"},{"bodyParameter":"[webappName, filepath]","httpRequestType":"POST","produces":"[text/plain]","consumes":"[text/plain]","description":"Stores data (body parameter) for a specific webapp.","path":"/storage/webapps/{webappName}/{filepath}"},{"bodyParameter":"[filepath]","httpRequestType":"POST","produces":"[text/plain]","consumes":"[text/xml]","description":"Stores a model (XML body parameter) at the given filepath.","path":"/storage/models/{filepath}"},{"bodyParameter":"[componentId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the output port ids of the specified component","path":"/runtime/model/components/{componentId}/ports/output/ids"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns a list with all the available rest functions","path":"/restfunctions"},{"bodyParameter":"[filepath]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"","description":"Deploys and starts the model in the given filename","path":"/runtime/model/autorun/{filepath}"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the component ids contained in the currently deployed model","path":"/runtime/model/components/ids"},{"bodyParameter":"[componentId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns all property keys of the specified runtime component","path":"/runtime/model/components/{componentId}"},{"bodyParameter":"[componentId, propertyKey]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the value list of the dynamic property","path":"/runtime/model/components/{componentId}/{propertyKey}/dynamicproperty"},{"bodyParameter":"[componentId, propertyKey]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Returns the property value of the runtime component","path":"/runtime/model/components/{componentId}/{propertyKey}"},{"bodyParameter":"[componentId, propertyKey]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"[text/plain]","description":"Changes a property value of a runtime component","path":"/runtime/model/components/{componentId}/{propertyKey}"},{"bodyParameter":"[]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"[application/json]","description":"Changes multiple property value(s) of a runtime component(s) (propertyMap – see JSON objects)","path":"/runtime/model/components/properties"},{"bodyParameter":"[componentId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the input port ids of the specified component","path":"/runtime/model/components/{componentId}/ports/input/ids"},{"bodyParameter":"[componentId, portId]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Returns the datatype of the specified port","path":"/runtime/model/components/{componentId}/ports/{portId}/datatype"},{"bodyParameter":"[componentId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the event channel ids of the current model","path":"/runtime/model/components/{componentId}/channels/event/ids"},{"bodyParameter":"[componentId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the data channel ids of the specified component","path":"/runtime/model/components/{componentId}/channels/data/ids"},{"bodyParameter":"[channelId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the source (channel edge – se JSON objects) of a specific event channel","path":"/runtime/model/channels/event/{channelId}/source"},{"bodyParameter":"[channelId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the target (channel edge – see JSON objects) of a specific event channel","path":"/runtime/model/channels/event/{channelId}/target"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the event channel ids of the current model","path":"/runtime/model/channels/event/ids"},{"bodyParameter":"[channelId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the source (channel edge – se JSON objects) of a specific data channel","path":"/runtime/model/channels/data/{channelId}/source"},{"bodyParameter":"[channelId]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the target (channel edge – se JSON objects) of a specific data channel","path":"/runtime/model/channels/data/{channelId}/target"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Returns the data channel ids of the current model","path":"/runtime/model/channels/data/ids"},{"bodyParameter":"[webappName, filepath]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Returns saved data for a webapp","path":"/storage/webapps/{webappName}/{filepath}"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[application/json]","consumes":"","description":"Retrieves the exact content of the component descriptors contained in the ARE repository","path":"/storage/components/descriptors/json"},{"bodyParameter":"[componentId, portId]","httpRequestType":"PUT","produces":"[text/plain]","consumes":"[text/plain]","description":"Sends data to a specific port of a component in the running model","path":"/runtime/model/components/{componentId}/ports/{portId}/data"},{"bodyParameter":"[value, componentId, portId]","httpRequestType":"GET","produces":"[text/plain]","consumes":"","description":"Sends data to a specific port of a component in the running model using the GET method. Note this is actually not conforming to a RESTful interface but needed for client devices (old feature phones) which do not support HTTP PUT","path":"/runtime/model/components/{componentId}/ports/{portId}/data/{value}"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/xml]","consumes":"","description":"Retrieves the currently deployed model in XML","path":"/runtime/model"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/event-stream]","consumes":"","description":"Subscribes for deployment events. The events are delivered using SSE.","path":"/runtime/deployment/listener"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/event-stream]","consumes":"","description":"Subscribes for state change events. The events are delivered using SSE.","path":"/runtime/model/state/listener"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/event-stream]","consumes":"","description":"Subscribes for model events. The events are delivered using SSE.","path":"/runtime/model/channels/event/listener"},{"bodyParameter":"[channelId]","httpRequestType":"GET","produces":"[text/event-stream]","consumes":"","description":"Subscribes for receiving data which is sent through the given data channelId. The events are delivered using SSE.","path":"/runtime/model/channels/data/{channelId}/listener"},{"bodyParameter":"[]","httpRequestType":"GET","produces":"[text/event-stream]","consumes":"","description":"Subscribes for component property change events of the currently deployed model. The events are delivered using SSE.","path":"/runtime/model/components/properties/listener"}]