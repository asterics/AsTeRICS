#!/bin/sh
# prerm script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#source appname
#. APE.properties
APPNAME="$DPKG_MAINTSCRIPT_PACKAGE"
APPPATH="/opt/$APPNAME/app/"
APPINSTALLDIR="/opt/$APPNAME"
WRITEDIR="/var/opt/$APPNAME/"

case "$1" in
    remove|upgrade|deconfigure)
		echo Removing shortcut for $APPNAME

		xdg-desktop-menu uninstall --novendor $APPINSTALLDIR/$APPNAME.desktop
	
		echo Removing symbolic links and write dir
		rm -Rf $WRITEDIR
		rm -f $APPPATH/modules
		rm -f $APPPATH/profile
		rm -f $APPPATH/data
		rm -f $APPPATH/web
		rm -f $APPPATH/tmp
		rm -f $APPPATH/areProperties
		rm -rf $APPPATH/tools/remotes
	   
		# component FS20 udev rules
		echo removing udev rules for FS20 and IrTrans
		rm -f /etc/udev/rules.d/50-asterics-fs20.rules
		rm -f /etc/udev/rules.d/49-asterics-irtrans.rules

    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

