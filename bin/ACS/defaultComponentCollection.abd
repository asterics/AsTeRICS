<?xml version="1.0"?><componentTypes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <componentType id="asterics.AnalogOut"
                   canonical_name="eu.asterics.component.actuator.analogout.AnalogOutInstance">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>false</singleton>
        <description>Digital-to-Analog (DAC-CIM) actuator interface, enables analog control outputs</description>
        <ports>
            <inputPort id="out1">
                <description>desired value for DAC channel 1</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out2">
                <description>desired value for DAC channel 2</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out3">
                <description>desired value for DAC channel 3</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="out4">
                <description>desired value for DAC channel 4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
    </componentType>


    <componentType id="asterics.AndroidPhoneControl"
                   canonical_name="eu.asterics.component.actuator.androidphonecontrol.AndroidPhoneControlInstance">
        <type subtype="Phone Interface">actuator</type>
        <singleton>true</singleton>
        <description>Control Android phone with AsTeRICS  application running</description>
        <ports>
			<inputPort id="PhoneID">
				<description>Phone number for the call</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="SMSContent">
				<description>SMS for send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="action">
				<description>Command port for action strings</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="RemotePhoneID">
				<description>The number of the remote phone.</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="ReceivedSMS">
				<description>Received SMS</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="ErrorNumber">
				<description>Number of the error</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="SendSMS">
				<description>Send SMS</description>
			</eventListenerPort>
			<eventListenerPort id="MakePhoneCall">
				<description>Make phone call</description>
			</eventListenerPort>
			<eventListenerPort id="AcceptPhoneCall">
				<description>Accept phone call</description>
			</eventListenerPort>
			<eventListenerPort id="DropPhoneCall">
				<description>Drop phone call</description>
			</eventListenerPort>

			<eventTriggererPort id="idleState">
				<description>Phone is in the idle state</description>
			</eventTriggererPort>
			<eventTriggererPort id="ringState">
				<description>Ring state</description>
			</eventTriggererPort>
			<eventTriggererPort id="connectedState">
				<description>Phone is connected</description>
			</eventTriggererPort>
			<eventTriggererPort id="newSMS">
				<description>There is a new message</description>
			</eventTriggererPort>
			<eventTriggererPort id="error">
				<description>Error event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="connectionType"
				type="integer"
				value="0"
				combobox="server//client"
				description="Type of the connection for this plugin: server or client"/>
			<property name="IP"
				type="string"
				value="localhost"
				description="IP of the remote server"/>
			<property name="port"
				type="integer"
				value="21111"
				description="Port used in IP/TCP connection"/>
			<property name="defaultPhoneID"
				type="string"
				value=""
				description="Default phone number"/>

        </properties>

    </componentType>


    <componentType id="asterics.AngularCursorControl"
                   canonical_name="eu.asterics.component.actuator.angularcursorcontrol.AngularCursorControlInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>cursor position control via angular direction</description>
        <ports>
			<inputPort id="angle">
				<description>angle for movement direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="move">
				<description>cursor movement</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="outX">
				<description>the current x-position of the angular arrow (use it e.g. to move the mouse)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="outY">
				<description>the current y-position of the angular arrow (use it e.g. to move the mouse)</description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
		<events>
			<eventListenerPort id="enablePlugin">
				<description>enables the functionality of this plugin</description>
			</eventListenerPort>
			<eventListenerPort id="disablePlugin">
				<description>disables all functionality of this plugin</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveForward">
				<description>starts automatic movement backward, accelerated by property acceleration</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveBackward">
				<description>starts automatic movement forward, accelerated by property acceleration</description>
			</eventListenerPort>
			<eventListenerPort id="startAngleLeft">
				<description>starts automatic angle rotation to the left (counterclockwise), accelerated by property accelerationAngle</description>
			</eventListenerPort>
			<eventListenerPort id="startAngleRight">
				<description>starts automatic angle rotation to the right (clockwise), accelerated by property accelerationAngle</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveForward">
				<description>stops automatic movement backward</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveBackward">
				<description>stops automatic movement forward</description>
			</eventListenerPort>
			<eventListenerPort id="stopAngleLeft">
				<description>stops automatic angle rotation to the left (counterclockwise)</description>
			</eventListenerPort>
			<eventListenerPort id="stopAngleRight">
				<description>stops automatic angle rotation to the right (clockwise)</description>
			</eventListenerPort>
			<eventListenerPort id="stopMove">
				<description>stops any automatic movement</description>
			</eventListenerPort>

			<eventTriggererPort id="clickEvent">
				<description>etp description</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="enabled"
					  type="boolean"
					  value="true"
					  description="if true, the plugin is enabled, if false the plugin does nothing"/>
			<property name="absoluteAngle"
				type="boolean"
				value="false"
				description="if true, angle input port values are absolute values, else changes of current angle"/>
			<property name="wrapAround"
				type="boolean"
				value="false"
				description="if true, movement continues on other side of the screen, if screen end reached"/>
			<property name="clickEventTime"
				type="integer"
				value="1000"
				description="if not zero, a click indicator is shown and the click event is created after n millseconds inactivity"/>
			<property name="arrowWidth"
				type="integer"
				value="10"
				description="length of the arrow indicator"/>
			<property name="arrowLength"
				type="integer"
				value="100"
				description="length of the arrow indicator"/>
			<property name="acceleration"
					  type="integer"
					  value="100"
					  description="cursor movement acceleration in px/second per second (0 to deactive acceleration)"/>
			<property name="baseVelocity"
					  type="integer"
					  value="30"
					  description="base movement velocity in px per second"/>
			<property name="maxVelocity"
				type="integer"
				value="1000"
				description="maximum mouse movement velocity in px per second"/>
			<property name="accelerationAngle"
					  type="integer"
					  value="30"
					  description="angle movement acceleration in degrees/second per second (0 to deactive acceleration)"/>
			<property name="baseVelocityAngle"
					  type="integer"
					  value="20"
					  description="base angle movement velocity in degrees per second"/>
			<property name="maxVelocityAngle"
					  type="integer"
					  value="180"
					  description="maximum angle movement velocity in degrees per second"/>

        </properties>

    </componentType>


    <componentType id="asterics.ApplicationLauncher"
                   canonical_name="eu.asterics.component.actuator.applicationlauncher.ApplicationLauncherInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>starts external software applications via path and  filename (.exe)</description>
        <ports>
			<inputPort id="filename">
				<description>File name of executable file which shall be started without arguments. The application is started automatically, if onlyByEvent is false.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="arguments">
				<description>Sets the arguments of the command. The application is started automatically, if onlyByEvent is false.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>			
			<inputPort id="stdIn">
				<description>Sends the incoming string to the standard input stream of the started process.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
            <outputPort id="stdOut">
                <description>The standard output stream of the started process.</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="stdErr">
                <description>The standard error stream of the started process.</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="exitValue">
                <description>The exit value of the started process.</description>
                <dataType>integer</dataType>
            </outputPort>            
        </ports>
		<events>
			<eventListenerPort id="launchNow">
				<description>an incoming event launches the  application</description>
			</eventListenerPort>
			<eventListenerPort id="closeNow">
				<description>an incoming event closes a launched application</description>
			</eventListenerPort>
            <eventTriggererPort id="startedSuccessfully">
                <description>The process started successfully.</description>
            </eventTriggererPort>
            <eventTriggererPort id="startedWithError">
                <description>The process started with error.</description>
            </eventTriggererPort>
		</events>			
        <properties>
            <property name="executeOnPlatform"
                      type="string"
                      value="ALL"
                      combobox="ALL//WINDOWS//LINUX//MACOSX"
                      description="If != ALL, the application will only be launched if the ARE runs on the defined platform."/>
            <property name="executionMode"
                      type="string"
                      value="START_APPLICATION"
                      combobox="START_APPLICATION//OPEN_URL"
                      description="If START_APPLICATION, the command defined in defaultApplication will be launched with the given arguments. If OPEN_URL, the URL defined in arguments will be launched with the platform default browser. The platform-specific browser launch commands are configurable in the file areProperties."/>        
			<property name="defaultApplication"
				type="string"
				value="c:\windows\notepad.exe"
				description="Default application file name (including path)"/>
			<property name="arguments"
				type="string"
				value=""
				description="arguments for default application"/>
			<property name="workingDirectory"
				type="string"
				value="."
				description="working directory for application"/>
			<property name="closeCmd"
				type="string"
				value=""
				description="Optional close cmd, e.g. if started cmd has forked processes (e.g. OSKA) use: taskkill.exe /IM &quot;OSKA Keyboard.exe&quot; /T"/>				
			<property name="autoLaunch"
				type="boolean"
				value="false"
				description="Launch the default application immediately at model startup"/>
			<property name="autoClose"
				type="boolean"
				value="true"
				description="if true, a launched application is closed when the model is stopped or switched"/>
			<property name="onlyByEvent"
				type="boolean"
				value="false"
				description="if true, an incoming filename at the input port is not lauched before the launchNow event is triggered"/>

        </properties>

    </componentType>


    <componentType id="asterics.AREWindow"
                   canonical_name="eu.asterics.component.actuator.arewindow.AREWindowInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>provides basic ARE Window manipulation</description>
        <ports>
			<inputPort id="xPos">
				<description>desired X position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="yPos">
				<description>desired Y position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="moveToTop">
				<description>moves Window to top of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="moveToBottom">
				<description>moves Window to bottom of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="moveToLeft">
				<description>moves Window to left side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="moveToRight">
				<description>moves Window to right side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="moveToCenter">
				<description>moves Window to center of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="minimize">
				<description>moves Window to right side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="restore">
				<description>moves Window to right side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="bringToFront">
				<description>set the ARE Window to foreground</description>
			</eventListenerPort>
			<eventListenerPort id="setWindowFocusalbe">
				<description>makes the ARE Window focusable</description>
			</eventListenerPort>
			<eventListenerPort id="setWindowNotFocusalbe">
				<description>ARE Window is not focusable</description>
			</eventListenerPort>

		</events>			
        <properties>
			<property name="xPos"
				type="integer"
				value="0"
				description="offset for x Position"/>
			<property name="yPos"
				type="integer"
				value="0"
				description="offset for y Position"/>
			<property name="autoSetPosition"
				type="boolean"
				value="false"
				description="if true, ARE window will be moved automatically after model is started or when new position values come in"/>
			<property name="allowWindowModification"
				type="boolean"
				value="true"
				description="if true, ARE window decoration and control panel can be activated / deactivated via mouse clicks"/>

        </properties>

    </componentType>


    <componentType id="asterics.BarDisplay"
                   canonical_name="eu.asterics.component.actuator.bardisplay.BardisplayInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Bar-display</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
        <properties>
            <property name="displayBuffer"
                      type="integer"
                      value="0"
                      description="How many values will be buffered before redraw of bargraph"/>
            <property name="min"
                      type="double"
                      value="0"
                      description="minimum value"/>
            <property name="max"
                      type="double"
                      value="1000"
                      description="maximum value"/>
            <property name="threshold"
                      type="double"
                      value="500"
                      description="threshold value"/>
            <property name="displayThreshold"
                      type="boolean"
                      value="false"
                      description="display marker for threshold value ?"/> 
            <property name="integerDisplay"
                      type="boolean"
                      value="false"
                      description="round double values to integral type ?"/> 
            <property name="mode"
                      type="integer"
                      value="1"
                      combobox="clip to min and max//autoupdate min and max"
                      description="how to deal with values exceeding min or max"/> 
            <property name="gridColor"
                      type="integer"
                      value="0"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of the grid"/> 
            <property name="barColor"
                      type="integer"
                      value="8"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of bar display"/> 
            <property name="backgroundColor"
                      type="integer"
                      value="11"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="background color"/> 
            <property name="fontSize"
                      type="integer"
                      value="14"
                      description="font size of bardisplay captions"/>
            <property name="caption"
                      type="string"
                      value="bar-graph"
                      description="caption of the bar graph"/>                                                       
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
        </properties>
        <gui>
            <width>1000</width>
            <height>3000</height>
        </gui>
    </componentType>


    <componentType id="asterics.CrosshairCursorControl"
                   canonical_name="eu.asterics.component.actuator.crosshaircursorcontrol.CrosshairCursorControlInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>cursor position control via crosshair movement</description>
        <ports>
			<inputPort id="x">
				<description>cursor movement x direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="y">
				<description>cursor movement y direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="accelerationH">
				<description>horizontal movement acceleration, increasing px/second per second</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="accelerationV">
				<description>vertical movement acceleration, increasing px/second per second</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="outX">
				<description>the current x-position of the crosshair (use it e.g. to move the mouse)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="outY">
				<description>the current y-position of the crosshair (use it e.g. to move the mouse)</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="enablePlugin">
				<description>enables the functionality of this plugin</description>
			</eventListenerPort>
			<eventListenerPort id="disablePlugin">
				<description>disables all functionality of this plugin</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveLeft">
				<description>starts movement to the left</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveRight">
				<description>starts movement to the right</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveUp">
				<description>starts movement up</description>
			</eventListenerPort>
			<eventListenerPort id="startMoveDown">
				<description>starts movement down</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveLeft">
				<description>stops movement to the left</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveRight">
				<description>stops movement to the right</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveUp">
				<description>stops movement up</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveDown">
				<description>stops movement down</description>
			</eventListenerPort>
			<eventListenerPort id="stopMoveAll">
				<description>stops all automatic movement</description>
			</eventListenerPort>
			<eventListenerPort id="moveToLastStable">
				<description>moves to last stable x/y cursor position without movement</description>
			</eventListenerPort>
			<eventListenerPort id="highlightXAxis">
				<description>highlights the X-Axis in red color, disables highlight for Y-Axis and sets property autoColorAxis to false</description>
			</eventListenerPort>
			<eventListenerPort id="highlightYAxis">
				<description>highlights the Y-Axis in red color, disables highlight for Y-Axis and sets property autoColorAxis to false</description>
			</eventListenerPort>
			<eventListenerPort id="toggleAxisHighlight">
				<description>toggles the highlighting for the X- and Y-Axis, sets property autoColorAxis to false</description>
			</eventListenerPort>
			<eventListenerPort id="click">
				<description>manually triggers the click event and highlights the X/Y-axis if highlightClick is enabled</description>
			</eventListenerPort>

			<eventTriggererPort id="clickEvent">
				<description>this event is generated after an inactivity of clickEventTime milliseconds</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="enabled"
					  type="boolean"
					  value="true"
					  description="if true, the plugin is enabled, if false the plugin does nothing"/>
			<property name="absoluteValues"
				type="boolean"
				value="false"
				description="if true, x/y input port values are absolute coordinates, else relative coordinates"/>
			<property name="autoColorAxis"
					  type="boolean"
					  value="true"
					  description="if true, the axis are colored automatically according to the current movement"/>
			<property name="highlightClick"
					  type="boolean"
					  value="true"
					  description="if true, the axis are shortly colored green for indicating the clickEvent"/>
			<property name="wrapAround"
					  type="boolean"
					  value="false"
					  description="if true, movement continues on other side of the screen, if screen end reached"/>
			<property name="taskbarOffset"
					  type="boolean"
					  value="true"
					  description="if true, the size of the crosshairs (x/y) is calculated from screen size minus any taskbar sizes."/>
			<property name="clickEventTime"
				type="integer"
				value="1000"
				description="if not zero, the click event is created after n millseconds inactivity"/>
			<property name="lineWidth"
				type="integer"
				value="10"
				description="width of the crosshair indicator"/>
			<property name="baseVelocity"
				type="integer"
				value="10"
				description="base movement velocity in px per second"/>
			<property name="accelerationH"
				type="integer"
				value="100"
				description="horizontal movement acceleration, increasing px/second per second"/>
			<property name="accelerationV"
					  type="integer"
					  value="100"
					  description="vertical movement acceleration, increasing px/second per second"/>
			<property name="maxVelocity"
				type="integer"
				value="100"
				description="maximum movement velocity in px per second"/>
        </properties>

    </componentType>


    <componentType id="asterics.DialogBox"
                   canonical_name="eu.asterics.component.actuator.dialogbox.DialogBoxInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>creates a dialog box to display information</description>
        <ports>
			<inputPort id="setText">
				<description>updates the text to be displayed</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
        
		<events>
            <eventTriggererPort id="button1">
                <description>Button 1 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button2">
                <description>Button 2 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button3">
                <description>Button 3 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button4">
                <description>Button 4 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button5">
                <description>Button 5 pressed</description>
            </eventTriggererPort>
			<eventListenerPort id="displayBox">
				<description>displays the dialog box</description>
			</eventListenerPort>
			<eventListenerPort id="hideBox">
				<description>hides the dialog box</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="caption"
				type="string"
				value="info"
				description="the caption of the dialog box"/>
			<property name="text"
				type="string"
				value="this is an information"
				description="the text message of the dialog box"/>
			<property name="alwaysOnTop"
				type="boolean"
				value="true"
				description="if true, dialog stays on top, no matter if other windows are put to front."/>
            <property name="messageType"
                type="integer"
                value="0"
                description="the message type of the dialog box"
                combobox="plain//information//question//warning//error"/>
            <property name="buttonText1"
                type="string"
                value="OK"/>
            <property name="buttonText2"
                type="string"
                value=""/>
            <property name="buttonText3"
                type="string"
                value=""/>
            <property name="buttonText4"
                type="string"
                value=""/>
            <property name="buttonText5"
                type="string"
                value=""/>
        </properties>

    </componentType>


    <componentType id="asterics.DigitalOut"
                   canonical_name="eu.asterics.component.actuator.digitalout.DigitalOutInstance">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>true</singleton>
        <description>Digital Output control of GPIO-CIM</description>
        <ports>
            <inputPort id="action">
                <description>Commands for switching outputs, Examples: @GPIO:set,1/@GPIO:clear,2/@GPIO:toggle,1/@GPIO:press,4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOutput1">
                <description>Switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput2">
                <description>Switches Output2 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput3">
                <description>Switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput4">
                <description>Switches Output4 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput5">
                <description>Switches Output5 to high level</description>
            </eventListenerPort>

            <eventListenerPort id="clearOutput1">
                <description>Switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput2">
                <description>Switches Output2 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput3">
                <description>Switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput4">
                <description>Switches Output4 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput5">
                <description>Switches Output5 to low level</description>
            </eventListenerPort>

            <eventListenerPort id="toggleOutput1">
                <description>Toggles the state of Output1</description>
            </eventListenerPort>
            <eventListenerPort id="toggleOutput2">
                <description>Toggles the state of Output2</description>
            </eventListenerPort>
            <eventListenerPort id="toggleOutput3">
                <description>Toggles the state of Output3</description>
            </eventListenerPort>
            <eventListenerPort id="toggleOutput4">
                <description>Toggles the state of Output4</description>
            </eventListenerPort>
            <eventListenerPort id="toggleOutput5">
                <description>Toggles the state of Output5</description>
            </eventListenerPort>
            
            <eventListenerPort id="pressOutput1">
                <description>Presses Output1: Clears the state and after 500ms sets the state to high</description>
            </eventListenerPort>
            <eventListenerPort id="pressOutput2">
                <description>Presses Output2: Clears the state and after 500ms sets the state to high</description>
            </eventListenerPort>
            <eventListenerPort id="pressOutput3">
                <description>Presses Output3: Clears the state and after 500ms sets the state to high</description>
            </eventListenerPort>
            <eventListenerPort id="pressOutput4">
                <description>Presses Output4: Clears the state and after 500ms sets the state to high</description>
            </eventListenerPort>
            <eventListenerPort id="pressOutput5">
                <description>Presses Output5: Clears the state and after 500ms sets the state to high</description>
            </eventListenerPort>
            
        </events>        
        <properties>
            <property name="pullupStateOut3"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 3, true enables pull up"/>
            <property name="pullupStateOut4"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 4, true enables pull up"/>
            <property name="pullupStateOut5"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 5, true enables pull up"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
            
        </properties>
    </componentType>
    
    
    <componentType id="asterics.LegacyDigitalOut"
                   canonical_name="eu.asterics.component.actuator.digitalout.DigitalOutInstance">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>true</singleton>
        <description>Digital Output control of GPIO-CIM</description>
        <ports>
            <inputPort id="action">
                <description>Commands for switching outputs, Examples: @GPIO:set,1/@GPIO:clear,2/@GPIO:toggle,1/@GPIO:press,4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOutput1">
                <description>An incoming event switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput2">
                <description>An incoming event switches Output2 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput3">
                <description>An incoming event switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput4">
                <description>An incoming event switches Output4 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput5">
                <description>An incoming event switches Output5 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput6">
                <description>An incoming event switches Output6 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput7">
                <description>An incoming event switches Output7 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOutput8">
                <description>An incoming event switches Output8 to high level</description>
            </eventListenerPort>

            <eventListenerPort id="clearOutput1">
                <description>An incoming event switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput2">
                <description>An incoming event switches Output2 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput3">
                <description>An incoming event switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput4">
                <description>An incoming event switches Output4 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput5">
                <description>An incoming event switches Output5 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput6">
                <description>An incoming event switches Output6 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput7">
                <description>An incoming event switches Output7 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOutput8">
                <description>An incoming event switches Output8 to low level</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="pullupStateOut1"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 1, true enables pull up"/>
            <property name="pullupStateOut2"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 2, true enables pull up"/>
            <property name="pullupStateOut3"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 3, true enables pull up"/>
            <property name="pullupStateOut4"
                      type="boolean"
                      value="false"
                      description="Sets pull up state for output 4, true enables pull up"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
        </properties>
    </componentType>
    



    <componentType id="asterics.DotMeter"
                   canonical_name="eu.asterics.component.actuator.dotmeter.DotmeterInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>DotMeter</description>
        <ports>
            <inputPort id="x">
                <description>Input port for x-position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="y">
                <description>Input port for y-position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
		<events>
			<eventListenerPort id="dotOn">
				<description>display the dot</description>
			</eventListenerPort>
			<eventListenerPort id="dotOff">
				<description>hide the dot</description>
			</eventListenerPort>
		</events>			        
        <properties>
            <property name="xMin"
                      type="double"
                      value="0"
                      description="minimum X value"/>
            <property name="xMax"
                      type="double"
                      value="1000"
                      description="maximum X value"/>
            <property name="yMin"
                      type="double"
                      value="0"
                      description="minimum Y value"/>
            <property name="yMax"
                      type="double"
                      value="1000"
                      description="maximum Y value"/>
            <property name="mode"
                      type="integer"
                      value="1"
                      combobox="clip to min and max//autoupdate min and max"
                      description="how to deal with values exceeding min or max"/> 
            <property name="dotSize"
                      type="integer"
                      value="10"
                      description="size of the dot"/>
            <property name="centerLine"
                      type="boolean"
                      value="true"
                      description="draw line to center?"/>
            <property name="displayDot"
                      type="boolean"
                      value="true"
                      description="display dot at startup?"/>
            <property name="displayCaptions"
                      type="boolean"
                      value="true"
                      description="display meter captions?"/>
            <property name="gridColor"
                      type="integer"
                      value="0"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of the grid"/> 
            <property name="dotColor"
                      type="integer"
                      value="8"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of bar display"/> 
            <property name="backgroundColor"
                      type="integer"
                      value="11"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="background color"/> 
            <property name="fontSize"
                      type="integer"
                      value="14"
                      description="font size of dotmeter captions"/>
            <property name="caption"
                      type="string"
                      value="dotMeter"
                      description="caption of the meter"/>                                                       
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
        </properties>
        <gui>
            <width>3000</width>
            <height>3000</height>
        </gui>
    </componentType>


    <componentType id="asterics.EasyHomeControl"
                   canonical_name="eu.asterics.component.actuator.easyhomecontrol.EasyHomeControlInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>true</singleton>
        <description>EasyHome controller</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="onDevice1">
				<description>turns on device 1</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice2">
				<description>turns on device 2</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice3">
				<description>turns on device 3</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice4">
				<description>turns on device 4</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice5">
				<description>turns on device 5</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice6">
				<description>turns on device 6</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice7">
				<description>turns on device 7</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice8">
				<description>turns on device 8</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice9">
				<description>turns on device 9</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice10">
				<description>turns on device 10</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice11">
				<description>turns on device 11</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice12">
				<description>turns on device 12</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice13">
				<description>turns on device 13</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice14">
				<description>turns on device 14</description>
			</eventListenerPort>
			<eventListenerPort id="onDevice15">
				<description>turns on device 15</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice1">
				<description>turns off device 1</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice2">
				<description>turns off device 2</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice3">
				<description>turns off device 3</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice4">
				<description>turns off device 4</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice5">
				<description>turns off device 5</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice6">
				<description>turns off device 6</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice7">
				<description>turns off device 7</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice8">
				<description>turns off device 8</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice9">
				<description>turns off device 9</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice10">
				<description>turns off device 10</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice11">
				<description>turns off device 11</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice12">
				<description>turns off device 12</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice13">
				<description>turns off device 13</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice14">
				<description>turns off device 14</description>
			</eventListenerPort>
			<eventListenerPort id="offDevice15">
				<description>turns off device 15</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="nameDevice1"
				type="string"
				value="1"
				description="name of device"/>
			<property name="nameDevice2"
				type="string"
				value="2"
				description="name of device"/>
			<property name="nameDevice3"
				type="string"
				value="3"
				description="name of device"/>
			<property name="nameDevice4"
				type="string"
				value="4"
				description="name of device"/>
			<property name="nameDevice5"
				type="string"
				value="5"
				description="name of device"/>
			<property name="nameDevice6"
				type="string"
				value="6"
				description="name of device"/>
			<property name="nameDevice7"
				type="string"
				value="7"
				description="name of device"/>
			<property name="nameDevice8"
				type="string"
				value="8"
				description="name of device"/>
			<property name="nameDevice9"
				type="string"
				value="9"
				description="name of device"/>
			<property name="nameDevice10"
				type="string"
				value="10"
				description="name of device"/>
			<property name="nameDevice11"
				type="string"
				value="11"
				description="name of device"/>
			<property name="nameDevice12"
				type="string"
				value="12"
				description="name of device"/>
			<property name="nameDevice13"
				type="string"
				value="13"
				description="name of device"/>
			<property name="nameDevice14"
				type="string"
				value="14"
				description="name of device"/>
			<property name="nameDevice15"
				type="string"
				value="15"
				description="name of device"/>
			<property name="numberDevice1"
				type="integer"
				value="1"
				description="number of device"/>
			<property name="numberDevice2"
				type="integer"
				value="2"
				description="number of device"/>
			<property name="numberDevice3"
				type="integer"
				value="3"
				description="number of device"/>
			<property name="numberDevice4"
				type="integer"
				value="4"
				description="number of device"/>
			<property name="numberDevice5"
				type="integer"
				value="5"
				description="number of device"/>
			<property name="numberDevice6"
				type="integer"
				value="6"
				description="number of device"/>
			<property name="numberDevice7"
				type="integer"
				value="7"
				description="number of device"/>
			<property name="numberDevice8"
				type="integer"
				value="8"
				description="number of device"/>
			<property name="numberDevice9"
				type="integer"
				value="9"
				description="number of device"/>
			<property name="numberDevice10"
				type="integer"
				value="10"
				description="number of device"/>
			<property name="numberDevice11"
				type="integer"
				value="11"
				description="number of device"/>
			<property name="numberDevice12"
				type="integer"
				value="12"
				description="number of device"/>
			<property name="numberDevice13"
				type="integer"
				value="13"
				description="number of device"/>
			<property name="numberDevice14"
				type="integer"
				value="14"
				description="number of device"/>
			<property name="numberDevice15"
				type="integer"
				value="15"
				description="number of device"/>

        </properties>

    </componentType>


    <componentType id="asterics.EnobioDisplay"
                   canonical_name="com.starlab.component.actuator.enobiodisplay.EnobioDisplayInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>true</singleton>
        <description>Enobio actuator which displays the Enobio data</description>
        <ports>
            <inputPort id="Channel1">
                <description>Input port for Enobio channel 1 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel2">
                <description>Input port for Enobio channel 2 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel3">
                <description>Input port for Enobio channel 3 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Channel4">
                <description>Input port for Enobio channel 4 signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="Status">
                <description>Input port for the Enobio status signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <gui>
            <width>6000</width>
            <height>9000</height>
        </gui>
    </componentType>



    <componentType id="asterics.enocean"
                   canonical_name="eu.asterics.component.actuator.enocean.EnoceanInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Enables the ARE to communicate with an EnOcean wireless network</description>
        <ports>
			<inputPort id="command">
				<description>command string to send an EnOcean command</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="slider1">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider2">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider3">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider4">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider5">
				<description>v</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider6">
				<description>analog value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output1">
				<description>the output value, from device with IDTrigger1</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output2">
				<description>the output value, from device with IDTrigger2</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output3">
				<description>the output value, from device with IDTrigger3</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output4">
				<description>the output value, from device with IDTrigger4</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output5">
				<description>the output value, from device with IDTrigger5</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="output6">
				<description>the output value, from device with IDTrigger6</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		
            <eventTriggererPort id="event_out_1">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_2">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_3">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_4">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_5">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_6">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>                                                            
			<eventListenerPort id="send1">
				<description>Sending the value defined in send property sendvalue1 with id1</description>
			</eventListenerPort>
			<eventListenerPort id="send2">
				<description>Sending the value defined in send property sendvalue2 with id2</description>
			</eventListenerPort>
			<eventListenerPort id="send3">
				<description>Sending the value defined in send property sendvalue3 with id3</description>
			</eventListenerPort>
			<eventListenerPort id="send4">
				<description>Sending the value defined in send property sendvalue4 with id4</description>
			</eventListenerPort>
			<eventListenerPort id="send5">
				<description>Sending the value defined in send property sendvalue5 with id5</description>
			</eventListenerPort>
			<eventListenerPort id="send6">
				<description>Sending the value defined in send property sendvalue6 with id6</description>
			</eventListenerPort>


		</events>			
        <properties>
            <property name="localIP"
                      type="string"
                      value="127.0.0.1"
                      description="The local IP of network interface, which is connected to KNX/IP network"/>
            <property name="gatewayIP"
                      type="string"
                      value="172.0.10.2"
                      description="The hostname/IP of EnOcean IP gateway device"/>
            <property name="USB"
                      type="boolean"
                      value="true"
                      description="Use USB communication"/>
            <property name="id1"
                      type="string"
                      value="0"
                      description="Sending ID 1"/>
            <property name="sendType1"
                      type="string"
                      value="binary"
                      description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue1"
                      type="string"
                      value="0"
                      description="Value 1"/>
            <property name="id2"
                      type="string"
                      value="0"
                      description="Sending ID 2"/>
            <property name="sendType2"
                      type="string"
                      value="binary"
                      description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue2"
                      type="string"
                      value="0"
                      description="Value 2"/>
            <property name="id3"
                      type="string"
                      value="0"
                      description="Sending ID 3"/>
            <property name="sendType3"
                      type="string"
                      value="binary"
                      description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue3"
                      type="string"
                      value="0"
                      description="Value 3"/>
            <property name="id4"
                      type="string"
                      value="0"
                      description="Sending ID 4"/>
            <property name="sendType4"
                      type="string"
                      value="binary"
                      description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue4"
                      type="string"
                      value="0"
                      description="Value 4"/>
            <property name="id5"
                      type="string"
                      value="0"
                      description="Sending ID 5"/>
            <property name="sendType5"
                      type="string"
                      value="binary"
                      description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue5"
                      type="string"
                      value="0"
                      description="Value 5"/>
            <property name="id6"
                      type="string"
                      value="0"
                      description="Sending ID 6"/>
            <property name="sendType6"
                      type="string"
                      value="binary"
                      description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)"/>
            <property name="dataValue6"
                      type="string"
                      value="0"
                      description="Value 6"/>
                      
                      
            <property name="IDSlider1"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 1"/>
	        <property name="sendTypeSlider1"
                      type="string"
                      value="binary"
                      description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)"/>
	        <property name="IDSlider2"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 2"/>
	        <property name="sendTypeSlider2"
                      type="string"
                      value="binary"
                      description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)"/>
	        <property name="IDSlider3"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 3"/>
	        <property name="sendTypeSlider3"
                      type="string"
                      value="binary"
                      description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)"/>
	        <property name="IDSlider4"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 4"/>
	        <property name="sendTypeSlider4"
                      type="string"
                      value="binary"
                      description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)"/>
	        <property name="IDSlider5"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 5"/>
	        <property name="sendTypeSlider5"
                      type="string"
                      value="binary"
                      description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)"/>
	        <property name="IDSlider6"
	                  type="string"
	                  value="0"
	                  description="Sending ID Slider 6"/>
	        <property name="sendTypeSlider6"
                      type="string"
                      value="binary"
                      description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)"/>   
           
            <property name="IDTrigger1"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 1"/>
	        <property name="TypeTrigger1"
                      type="string"
                      value="binary"
                      description="DPT 1 (binary|temperature|illumination|fan|humidity|setpoint)"/>   
            <property name="IDTrigger2"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 2"/>
	        <property name="TypeTrigger2"
                      type="string"
                      value="binary"
                      description="DPT 2 (binary|temperature|illumination|fan|humidity|setpoint)"/> 
	        <property name="IDTrigger3"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 3"/>
	        <property name="TypeTrigger3"
                      type="string"
                      value="binary"
                      description="DPT 3 (binary|temperature|illumination|fan|humidity|setpoint)"/> 
	        <property name="IDTrigger4"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 4"/>
	        <property name="TypeTrigger4"
                      type="string"
                      value="binary"
                      description="DPT 4 (binary|temperature|illumination|fan|humidity|setpoint)"/> 
	        <property name="IDTrigger5"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 5"/>
	        <property name="TypeTrigger5"
                      type="string"
                      value="binary"
                      description="DPT 5 (binary|temperature|illumination|fan|humidity|setpoint)"/> 
	        <property name="IDTrigger6"
	                  type="string"
	                  value="AABBCCDD"
	                  description="Listening ID for event trigger/output value 6"/>
	        <property name="TypeTrigger6"
                      type="string"
                      value="binary"
                      description="DPT 6 (binary|temperature|illumination|fan|humidity|setpoint)"/> 
	                                  	                  	                  	        
        </properties>
    </componentType>


    <componentType id="asterics.EventVisualizer"
                   canonical_name="eu.asterics.component.actuator.event_visualizer.EventVisualizerInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Simple Event Visualizer</description>
        <ports>
        </ports>
        <events>
            <eventListenerPort id="eventDisplay">
                <description>Incoming events are displayed in the visualizer window</description>
            </eventListenerPort>
        </events>
        <properties>
                <property name="displayGUI"
                  type="boolean"
                  value="true"                      
                  description="if selected, the GUI window will be shown"/>        
        </properties>
        <gui>
            <width>3000</width>
            <height>1000</height>
        </gui>
    </componentType>



    <componentType id="asterics.FileWriter"
                   canonical_name="com.starlab.component.actuator.filewriter.FileWriterInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>File Writer actuator</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        </ports>
		<properties>
            <property name="FileName"
                      type="string"
                      value="filewriter"
                      description="Name of the file that will be written"/>                      
        </properties>
    </componentType>



    <componentType id="asterics.FlickeringLightStimulator"
                   canonical_name="com.starlab.component.actuator.flickeringlightstimulator.FlickeringLightStimulatorInstance">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>Flickering light stimulator</description>
        <ports>
			<inputPort id="panel1">
				<description>Frequency input for panel 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel2">
				<description>Frequency input for panel 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel3">
				<description>Frequency input for panel 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="panel4">
				<description>Frequency input for panel 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="startStim">
				<description>Start stimulation event</description></eventListenerPort>
			<eventListenerPort id="stopStim">
				<description>Stop stimulation event</description></eventListenerPort>
			<eventListenerPort id="updateConfiguration">
				<description>Update configuration event</description></eventListenerPort>
			<eventListenerPort id="startStimPeriod">
				<description>Start Stimulation for a period of N seconds</description></eventListenerPort>
			<eventTriggererPort id="stimPeriodFinished">
				<description>Stimulation period of N seconds finished</description></eventTriggererPort>
		</events>			
        <properties>
			<property name="frequencyPanel1"
				type="integer"
				value="1"
				description="Frequency for panel 1"/>
			<property name="frequencyPanel2"
				type="integer"
				value="1"
				description="Frequency for panel 2"/>
			<property name="frequencyPanel3"
				type="integer"
				value="1"
				description="Frequency for panel 3"/>
			<property name="frequencyPanel4"
				type="integer"
				value="1"
				description="Frequency for panel 4"/>
			<property name="dcPanel1"
				type="integer"
				value="50"
				description="Duty cycle for panel 1"/>
			<property name="dcPanel2"
				type="integer"
				value="50"
				description="Duty cycle for panel 2"/>
			<property name="dcPanel3"
				type="integer"
				value="50"
				description="Duty cycle for panel 3"/>
			<property name="dcPanel4"
				type="integer"
				value="50"
				description="Duty cycle for panel 4"/>
			<property name="intPanel1"
				type="integer"
				value="100"
				description="Intensity for panel 1"/>
			<property name="intPanel2"
				type="integer"
				value="100"
				description="Intensity for panel 2"/>
			<property name="intPanel3"
				type="integer"
				value="100"
				description="Intensity for panel 3"/>
			<property name="intPanel4"
				type="integer"
				value="100"
				description="Intensity for panel 4"/>
			<property name="red"
				type="boolean"
				value="true"
				description="Red color"/>
			<property name="blue"
				type="boolean" 
				value="true" 
				description="Blue color"/>
        	<property name="green"
        		type="boolean"
        		value="true"
        		description="Green color"/>
        	<property name="comPort"
        		type="string"
        		value="COM7"
        		description="COMM port"/>
        	<property name="N"
        		type="integer"
        		value="3000"
        		description="Stimulation of N milliseconds"/>
        </properties>

    </componentType>


    <componentType id="asterics.FS20Sender"
                   canonical_name="eu.asterics.component.actuator.fS20Sender.FS20SenderInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>true</singleton>
        <description>Sends FS20 commands</description>
        <ports>
			<inputPort id="Housecode">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="Address">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="Action">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
            <outputPort id="output">
                <description>Sent bytes after sending a FS20 command, smaller 0 if failure</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
		<events>
			<eventListenerPort id="off">
				<description>turn off (0 %)</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel1">
				<description>dim to brightness level 6,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel2">
				<description>dim to brightness level 12,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel3">
				<description>dim to brightness level 18,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel4">
				<description>dim to brightness level 25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel5">
				<description>dim to brightness level 31,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel6">
				<description>dim to brightness level 37,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel7">
				<description>dim to brightness level 43,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel8">
				<description>dim to brightness level 50 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel9">
				<description>dim to brightness level 56,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel10">
				<description>dim to brightness level 62,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel11">
				<description>dim to brightness level 68,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel12">
				<description>dim to brightness level 75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel13">
				<description>dim to brightness level 81,25 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel14">
				<description>dim to brightness level 87,5 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel15">
				<description>dim to brightness level 93,75 %</description>
			</eventListenerPort>
			<eventListenerPort id="onLevel16">
				<description>dim to brightness level 100 %</description>
			</eventListenerPort>
			<eventListenerPort id="onOldLevel">
				<description>dim to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="toggle">
				<description>toggle between on and off</description>
			</eventListenerPort>
			<eventListenerPort id="dimUp">
				<description>dim up for one brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="dimDown">
				<description>dim down for one brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="dimUpAndDown">
				<description>dim up to maximum wait for the internal timer time dim down to minimum</description>
			</eventListenerPort>
			<eventListenerPort id="programTimer">
				<description>start or end programming of the internal timer time</description>
			</eventListenerPort>
			<eventListenerPort id="offForTimerThenOldLevel">
				<description>off (0%) for the time specified by the internal timer then dim to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="OnForTimerThenOff">
				<description>On (100 %) for the time specified by the internal timer then off</description>
			</eventListenerPort>
			<eventListenerPort id="OnOldLevelForTimerThenOff">
				<description>Dim to previous brightness level, wait for the time specified by the internal timer, then turn off (0 %)</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>reset to factory defaults (not all devices support this function)</description>
			</eventListenerPort>
			<eventListenerPort id="onForTimerThenOldLevel">
				<description>on (100 %) for the time specified by the internal timer then dim back to the previous brightness level</description>
			</eventListenerPort>
			<eventListenerPort id="onOldLevelForTimerThenPreviousState">
				<description>dim to previous brightness level, wait for the time specified by the internal timer  enable the state before this command</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="Housecode"
				type="integer"
				value="11111111"
				description="Default housecode"/>
			<property name="Address"
				type="integer"
				value="1111"
				description="Default device address"/>

        </properties>

    </componentType>


    <componentType id="asterics.GMailShortcuts"
                   canonical_name="eu.asterics.component.actuator.gmailshortcuts.GMailShortcutsInstance">
        <type subtype="Others">actuator</type>
        <singleton>false</singleton>
        <description>This plugin emulates shortcuts for the GMail web client. It can be used to map any gestures to GMail shortcuts.</description>
        <ports>
			<inputPort id="KeyCode">
				<description>Character [a-z], digit [0-9] or one of predefined commands to send. See help file for command descriptions.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.GSMModem"
                   canonical_name="eu.asterics.component.actuator.gsmmodem.GSMModemInstance">
        <type subtype="Communication">actuator</type>
        <singleton>true</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="phoneID">
				<description>Phone ID for the SMS send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="SMSContent">
				<description>SMS content to send</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="remotePhoneID">
				<description>remote Phone ID</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="receivedSMS">
				<description>Received SMS content</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="errorNumber">
				<description>Error number out</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="sendSMS">
				<description>Send SMS</description>
			</eventListenerPort>

			<eventTriggererPort id="newSMS">
				<description>There is a new message</description>
			</eventTriggererPort>
			<eventTriggererPort id="error">
				<description>Error event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="serialPort"
				type="string"
				value=""
				description="Modem port"/>
			<property name="pin"
				type="string"
				value=""
				description="SIM card PIN"/>
			<property name="smsCenterID"
				type="string"
				value=""
				description="SMS Center ID"/>
			<property name="defaultPhoneID"
				type="string"
				value=""
				description="SMS Center ID"/>

        </properties>

    </componentType>


    <componentType id="asterics.gui_tester"
                   canonical_name="eu.asterics.component.actuator.gui_tester.GuiTesterInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GuiTester (for testing gui elements displacement on Desktop)</description>
        <ports>
            <inputPort id="input1">
                <description>Dummy chn1</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>

            </inputPort>
            <inputPort id="input2">
                <description>Dummy chn2</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>

            </inputPort>
        </ports>
        <gui>
            <width>7000</width>
            <height>7000</height>
        </gui>
    </componentType>


    <componentType id="asterics.ImageBox"
                   canonical_name="eu.asterics.component.actuator.imagebox.ImageBoxInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays a picture.</description>
        <ports>
			<inputPort id="input">
				<description>Picture path</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="clear">
				<description>Clear the picture</description>
			</eventListenerPort>

			<eventTriggererPort id="clicked">
				<description>component clicked</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="caption"
				type="string"
				value="Image Box"
				description="Caption of the component"/>
			<property name="default"
				type="string"
				value=""
				description="Default picture"/>
			<property name="backgroundColor"
				type="integer"
				value="11"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Background color"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>3000</height>
		</gui>

    </componentType>


    <componentType id="asterics.IrTrans"
                   canonical_name="eu.asterics.component.actuator.irtrans.IrTransInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Infrared Transmission Module, interfaces to the IrTrans device</description>
        <ports>
            <inputPort id="action">
                <description>Commands to send directly to IRTrans, Example: @IRTRANS:snd myremote,mycommand</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Received Command when IR command is received by IRTrans</description>
                <dataType>string</dataType>
            </outputPort>
			<outputPort id="outputResult">
                <description>Result of a command that was sent to action-port before</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sendprop1">
                <description>Sending the string defined in send property 1</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop2">
                <description>Sending the string defined in send property 2</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop3">
                <description>Sending the string defined in send property 3</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop4">
                <description>Sending the string defined in send property 4</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop5">
                <description>Sending the string defined in send property 5</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop6">
                <description>Sending the string defined in send property 6</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop7">
                <description>Sending the string defined in send property 7</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop8">
                <description>Sending the string defined in send property 8</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop9">
                <description>Sending the string defined in send property 9</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop10">
                <description>Sending the string defined in send property 10</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop11">
                <description>Sending the string defined in send property 11</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop12">
                <description>Sending the string defined in send property 12</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop13">
                <description>Sending the string defined in send property 13</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop14">
                <description>Sending the string defined in send property 14</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop15">
                <description>Sending the string defined in send property 15</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop16">
                <description>Sending the string defined in send property 16</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop17">
                <description>Sending the string defined in send property 17</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop18">
                <description>Sending the string defined in send property 18</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop19">
                <description>Sending the string defined in send property 19</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop20">
                <description>Sending the string defined in send property 20</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop21">
                <description>Sending the string defined in send property 21</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop22">
                <description>Sending the string defined in send property 22</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop23">
                <description>Sending the string defined in send property 23</description>
            </eventListenerPort>
            <eventListenerPort id="sendprop24">
                <description>Sending the string defined in send property 24</description>
            </eventListenerPort>                                    
        </events>         
        <properties>
            <property name="hostname"
                      type="string"
                      value="localhost"
                      description="the hostname / IP of the IRTrans"/>
            <property name="port"
                      type="string"
                      value="21000"
                      description="The port of the IRTrans"/>
<!--            <property name="useTCP"
                      type="boolean"
                      value="false"
                      description="Using TCP if selected, otherwise UDP"/>-->
            <property name="prestring"
                      type="string"
                      value=""
                      description="The string, which will be send before the strings in the following properties"/>
            <property name="send1"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop1 will be triggered"/>
            <property name="send2"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop2 will be triggered"/>
            <property name="send3"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop3 will be triggered"/>
            <property name="send4"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop4 will be triggered"/>
            <property name="send5"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop5 will be triggered"/>
            <property name="send6"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop6 will be triggered"/>
           <property name="send7"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop7 will be triggered"/>
            <property name="send8"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop8 will be triggered"/>
            <property name="send9"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop9 will be triggered"/>
            <property name="send10"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop10 will be triggered"/>
            <property name="send11"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop11 will be triggered"/>
            <property name="send12"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop12 will be triggered"/>
           <property name="send13"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop13 will be triggered"/>
            <property name="send14"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop14 will be triggered"/>
            <property name="send15"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop15 will be triggered"/>
            <property name="send16"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop16 will be triggered"/>
            <property name="send17"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop17 will be triggered"/>
            <property name="send18"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop18 will be triggered"/>
           <property name="send19"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop19 will be triggered"/>
            <property name="send20"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop20 will be triggered"/>
            <property name="send21"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop21 will be triggered"/>
            <property name="send22"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop22 will be triggered"/>
            <property name="send23"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop23 will be triggered"/>
            <property name="send24"
                      type="string"
                      value=""
                      description="The string, which will be send if sendprop24 will be triggered"/>                                                                  
        </properties>
    </componentType>



    <componentType id="asterics.Keyboard"
                   canonical_name="eu.asterics.component.actuator.keyboard.KeyboardInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Local Keyboard actuator</description>
        <ports>
            <inputPort id="keyCodes">
                <description>input string for keycodes</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="sendKeys">
                <description>On incoming event, all keys in keycode-string are sent</description>
            </eventListenerPort>
            <eventListenerPort id="pressKey">
                <description>On incoming event, the next key in keycode-string is pressed</description>
            </eventListenerPort>
            <eventListenerPort id="holdKey">
                <description>On incoming event, hold the next key in keycode-string </description>
            </eventListenerPort>
            <eventListenerPort id="releaseKey">
                <description>On incoming event, release current key released</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="keyCodeString"
                      type="string"
                      value="a"
                      description="Keycodes to send"/>
            <property name="inputMethod"
                      type="integer"
                      value="1"
                      description="defines the way how keyboard input is injected"
                      combobox="sending window messages//using system-wide SendInput API function//using JNativehook"/>
            <property name="waitTime"
                      type="integer"
                      value="1000"
                      description="defines the wait period which is done whenever the special sequence {WAIT} is found in the input keycode string (in milliseconds)"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.Knx"
                   canonical_name="eu.asterics.component.actuator.knx.KnxInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Enables the ARE to communicate with a KNX network</description>
        <ports>
			<inputPort id="actionString">
				<description>command string to send a KNX command</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="slider1">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider2">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider3">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider4">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider5">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slider6">
				<description>value for a dimming actuator</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="data1">
				<description>the output value, from the group address groupAddressOutput1 </description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="data2">
				<description>the output value, from the group address groupAddressOutput2</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="data3">
				<description>the output value, from the group address groupAddressOutput3</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="data4">
				<description>the output value, from the group address groupAddressOutput4</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="data5">
				<description>the output value, from the group address groupAddressOutput5</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="data6">
				<description>the output value, from the group address groupAddressOutput6</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		
            <eventTriggererPort id="event_out_1">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger1)</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_2">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger2)</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_3">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger3)</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_4">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger4)</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_5">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger5)</description>
            </eventTriggererPort>
            <eventTriggererPort id="event_out_6">
                <description>Event port, triggered if any action on the group address is received (property: groupAddressTrigger6)</description>
            </eventTriggererPort>                                                            
			<eventListenerPort id="send1">
				<description>Sending the value to KNX defined by the properties groupAddress1, dataValue1 and DPTEvent1</description>
			</eventListenerPort>
			<eventListenerPort id="send2">
				<description>Sending the value to KNX defined by the properties groupAddress2, dataValue2 and DPTEvent2</description>
			</eventListenerPort>
			<eventListenerPort id="send3">
				<description>Sending the value to KNX defined by the properties groupAddress3, dataValue3 and DPTEvent3</description>
			</eventListenerPort>
			<eventListenerPort id="send4">
				<description>Sending the value to KNX defined by the properties groupAddress4, dataValue4 and DPTEvent4</description>
			</eventListenerPort>
			<eventListenerPort id="send5">
				<description>Sending the value to KNX defined by the properties groupAddress5, dataValue5 and DPTEvent5</description>
			</eventListenerPort>
			<eventListenerPort id="send6">
				<description>Sending the value to KNX defined by the properties groupAddress6, dataValue6 and DPTEvent6</description>
			</eventListenerPort>
			<eventListenerPort id="read1">
				<description>Trigger a read on the given group address, data is sent to data1. Properties: groupAddressOutput1 and DPTOutput1</description>
			</eventListenerPort>
			<eventListenerPort id="read2">
				<description>Trigger a read on the given group address, data is sent to data2. Properties: groupAddressOutput2 and DPTOutput2</description>
			</eventListenerPort>
			<eventListenerPort id="read3">
				<description>Trigger a read on the given group address, data is sent to data3. Properties: groupAddressOutput3 and DPTOutput3</description>
			</eventListenerPort>
			<eventListenerPort id="read4">
				<description>Trigger a read on the given group address, data is sent to data4. Properties: groupAddressOutput4 and DPTOutput4</description>
			</eventListenerPort>
			<eventListenerPort id="read5">
				<description>Trigger a read on the given group address, data is sent to data5. Properties: groupAddressOutput5 and DPTOutput5</description>
			</eventListenerPort>
			<eventListenerPort id="read6">
				<description>Trigger a read on the given group address, data is sent to data6. Properties: groupAddressOutput6 and DPTOutput6</description>
			</eventListenerPort>


		</events>			
        <properties>
            <property name="localIP"
                      type="string"
                      value="172.22.1.10"
                      description="The local IP of network interface, which is connected to KNX/IP network"/>
            <property name="KNXNetIP"
                      type="string"
                      value="knxip1.aat.technikum-wien.at"
                      description="The hostname/IP of KNXnet/IP device"/>
            <property name="NAT"
                      type="boolean"
                      value="true"
                      description="Use NAT mode of Calimero, if you are not directly connected to a KNX/IP network"/>
            <property name="groupAddress1"
                      type="string"
                      value="1/0/0"
                      description="Destination group address 1"/>
            <property name="dataValue1"
                      type="string"
                      value="0"
                      description="Value 1"/>
			<property name="DPTEvent1"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 1"/>
            <property name="groupAddress2"
                      type="string"
                      value="1/0/0"
                      description="Destination group address 2"/>
            <property name="dataValue2"
                      type="string"
                      value="1"
                      description="Value 2"/>
			<property name="DPTEvent2"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 2"/>
            <property name="groupAddress3"
                      type="string"
                      value="1/1/0"
                      description="Destination group address 3"/>
            <property name="dataValue3"
                      type="string"
                      value="0"
                      description="Value 3"/>
			<property name="DPTEvent3"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 3"/>
            <property name="groupAddress4"
                      type="string"
                      value="1/1/0"
                      description="Destination group address 4"/>
            <property name="dataValue4"
                      type="string"
                      value="1"
                      description="Value 4"/>
			<property name="DPTEvent4"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 4"/>
            <property name="groupAddress5"
                      type="string"
                      value="1/1/1"
                      description="Destination group address 5"/>
            <property name="dataValue5"
                      type="string"
                      value="0"
                      description="Value 5"/>
			<property name="DPTEvent5"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 5"/>
            <property name="groupAddress6"
                      type="string"
                      value="1/1/1"
                      description="Destination group address 6"/>
            <property name="dataValue6"
                      type="string"
                      value="1"
                      description="Value 6"/>
			<property name="DPTEvent6"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for event input 6"/>
            <property name="groupAddressSlider1"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider1"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider1"/>
            <property name="groupAddressSlider2"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider2"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider2"/>                  
            <property name="groupAddressSlider3"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider3"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider3"/>
            <property name="groupAddressSlider4"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider4"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider4"/>
            <property name="groupAddressSlider5"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider5"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider5"/>
            <property name="groupAddressSlider6"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address Slider"/>
	        <property name="DPTSlider6"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for slider6"/>
            <property name="groupAddressTrigger1"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 1"/>
            <property name="groupAddressTrigger2"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 2"/>
            <property name="groupAddressTrigger3"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 3"/>
            <property name="groupAddressTrigger4"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 4"/>
            <property name="groupAddressTrigger5"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 5"/>
            <property name="groupAddressTrigger6"
	                  type="string"
	                  value="1/1/1"
	                  description="Destination group address for event trigger 6"/>
	        <property name="groupAddressOutput1"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data1"/>
	        <property name="DPTOutput1"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data1"/>
	        <property name="groupAddressOutput2"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data2"/>
	        <property name="DPTOutput2"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data2"/>
	        <property name="groupAddressOutput3"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data3"/>
			<property name="DPTOutput3"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data3"/>
	        <property name="groupAddressOutput4"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data4"/>
			<property name="DPTOutput4"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data4"/>
	        <property name="groupAddressOutput5"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data5"/>
			<property name="DPTOutput5"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data5"/>
	        <property name="groupAddressOutput6"
	                  type="string"
	                  value="1/1/1"
	                  description="Listen group address for output: data6"/>
	        <property name="DPTOutput6"
                      type="string"
                      value=""
                      getStringList="true"
                      description="DataPoint for output data6"/>                 	                  	                  	                  	                  
	                                  	                  	                  	        
        </properties>
    </componentType>


    <componentType id="asterics.MediaPlayer"
                   canonical_name="eu.asterics.component.actuator.mediaplayer.MediaPlayerInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>Media player for supported file formats</description>
        <ports>
			<inputPort id="filename">
				<description>file name of media file</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="position">
				<description>set position in media file (0-100%)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="rate">
				<description>playback speed (0-500%)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
            <outputPort id="actPos">
                <description>current playback position (0-100%)</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
		<events>
			<eventListenerPort id="play">
				<description>plays the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="pause">
				<description>pauses the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stops the mediafile</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>resets the mediafile to initial position</description>
			</eventListenerPort>
			<eventListenerPort id="next">
				<description>plays the next media item (in case a directory was specified as filename)</description>
			</eventListenerPort>
			<eventListenerPort id="previous">
				<description>plays the previous media item (in case a directory was specified as filename)</description>
			</eventListenerPort>
		</events>			
        <properties>
			<property name="filename"
				type="string"
                value=""
                getStringList="true"
				description="path and filename of a valid media file, or path to a directory containing multiple media files"/>
			<property name="autoplay"
				type="boolean"
				value="true"
				description="automatically play the media file at startup or when a filename is received"/>
			<property name="displayGui"
				type="boolean"
				value="true"
				description="shall a window be displayed (e.g for movies) or not ?"/>
			<property name="pathToVLC"
				type="string"
                value="C:\Program Files (x86)\VideoLAN\VLC"
				description="default path to the VLC media player installation (libvlc.dll)"/>
        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.MidiPlayer"
                   canonical_name="eu.asterics.component.actuator.midi.MidiInstance">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>This plugin is used for MIDI applications</description>
        <ports>
			<inputPort id="trigger">
				<description>this input port triggers the keystroke of the midi plugin</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="pitch">
				<description>this input selects the pitch of the tone played.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="instrument">
				<description>accepts string inputs for instrument names of the active midi device, to select this instrument.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="scale">
				<description>accepts string inputs for filenames of a tonescale, to select this scale.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
		</events>			
        <properties>
			<property name="midiDevice"
                      type="string"
                      value="Gervill"
                      getStringList="true"
                      description="name of the Midi Output device"/>
			<property name="channel"
                      type="integer" 
                      value="1"
                      description="sets the channel for the midi instrument"/>
			<property name="instrument"
                      type="string"
                      value="Vibraphone"
                      getStringList="true"
                      description="name of the instrument or controller"/>
			<property name="triggerThreshold"
                      type="double"
                      value="50"
                      description="sets the threshold for triggering a note"/>
			<property name="triggerMax"
                      type="double"
                      value="100"
                      description="sets the value for the trigger input where the tone will have maximum volume"/>
			<property name="pitchMin"
                      type="double"
                      value="0"
                      description="sets the minimum input value for computing the tone pitch"/>
			<property name="pitchMax"
                      type="double"
                      value="1000"
                      description="sets the maximum input value for computing the tone pitch"/>
			<property name="toneScale"
                      type="string"
                      value="alltones.sc"
                      getStringList="true"
                      description="filename of tone scale file"/>
            <property name="playOnlyChangingNotes"
                      type="boolean"
                      value="true"                      
                      description="if selected, only note changes will be played"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window with tone parameters will be shown"/>
            <property name="displayNoteNames"
                      type="boolean"
                      value="false"                      
                      description="if selected, the note captions will be displayed"/>
        </properties>
		<gui>
			<width>5000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.modelSwitcher"
                   canonical_name="eu.asterics.component.actuator.modelSwitcher.ModelSwitcherInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>The ModelSwitcher plugin can be used to deploy and start a model via incoming event or model name</description>
        <ports>
			<inputPort id="modelName">
				<description>Name of the Model to be started </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
            <eventListenerPort id="switchModel">
                <description>incoming event switches to the default model given as property value</description>
            </eventListenerPort>
		</events>			
        <properties>
			<property name="model"
				type="string"
				value="autostart.acs"
				description="default model name"/>

        </properties>
    </componentType>


    <componentType id="asterics.Mouse"
                   canonical_name="eu.asterics.component.actuator.mouse.MouseInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Local mouse actuator, emulates mouse activity on local system</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="outX">
                <description>the current absolute x-position of the mouse, updated everytime the mouse is moved.</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="outY">
                <description>the current absolute y-position of the mouse, updated everytime the mouse is moved.</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>generates a left click</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>generates a middle click</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>generates a right click</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>generates a double left click</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>generates a left mouse button press</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>generates a left mouse button release</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>moves wheel up one step</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>moves wheel down one step</description>
            </eventListenerPort>

			 <eventListenerPort id="nextClickRight">
                <description>the next left click event will generate a right click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDouble">
                <description>the next left click event will generate a double click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickMiddle">
                <description>the next left click event will generate a middle click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDrag">
                <description>the next left click event will generate a drag click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickRelease">
                <description>the next left click event will release a drag click</description>
            </eventListenerPort> 

            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
            <eventListenerPort id="activate">
                <description>On incoming event, the mouse activity starts</description>
            </eventListenerPort>
            <eventListenerPort id="deactivate">
                <description>On incoming event, the mouse activity stops</description>
            </eventListenerPort>
            <eventListenerPort id="toggle">
                <description>On incoming event, the mouse activity toggles</description>
            </eventListenerPort>   
			<eventListenerPort id="absolutePosition">
                <description>On incoming event, the position of the mouse will be set to the given absolute position</description>
            </eventListenerPort> 			
			 <eventListenerPort id="relativePosition">
                <description>On incoming event, the positioning of the mouse will be set relative to the actual position</description>
            </eventListenerPort>
            <eventListenerPort id="moveToLastStable">
                <description>moves to last stable x/y cursor position without movement</description>
            </eventListenerPort>
        </events>         
        <properties>
            <property name="enableMouse"
                      type="boolean"
                      value="true"
                      description="Defines if the mouse will move and clicks will be performed"/>
            <property name="absolutePosition"
                      type="boolean"
                      value="true"
                      description="X and Y values are absolute positions or relative movements"/>
            <property name="startCentered"
                      type="boolean"
                      value="true"
                      description="If true the mouse starts in the middle of the screen, if false starting the starting position is the current position"/>
            <property name="xMin"
                      type="integer"
                      value="0"
                      description="minimum value for x-coordinate"/>
            <property name="xMax"
                      type="integer"
                      value="2000"
                      description="maximum value for x-coordinate (0 for auto-detect)"/>
            <property name="yMin"
                      type="integer"
                      value="0"
                      description="minimum value for y-coordinate"/>
            <property name="yMax"
                      type="integer"
                      value="1024"
                      description="maximum value for y-coordinate (0 for auto-detect)"/>
        </properties>
    </componentType>



    <componentType id="asterics.MouseCursorIcon"
                   canonical_name="eu.asterics.component.actuator.mousecursoricon.MouseCursorIconInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>sets different cursor icnos for the local mouse cursor</description>
        <ports>
			<inputPort id="iconName">
				<description>filename of the icon</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="setIcon1">
				<description>activates Icon1</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon2">
				<description>activates Icon2</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon3">
				<description>activates Icon3</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon4">
				<description>activates Icon4</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon5">
				<description>activates Icon5</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon6">
				<description>activates Icon6</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon7">
				<description>activates Icon7</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon8">
				<description>activates Icon8</description>
			</eventListenerPort>
			<eventListenerPort id="setIcon9">
				<description>activates Icon9</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="icon1name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon2name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon3name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon4name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon5name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon6name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon7name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon8name"
				type="string"
				value="arrow"
				description="filename of the icon"/>
			<property name="icon9name"
				type="string"
				value="arrow"
				description="filename of the icon"/>

        </properties>

    </componentType>


    <componentType id="asterics.NetConnection"
                   canonical_name="eu.asterics.component.actuator.netconnection.NetConnectionInstance">
        <type subtype="Communication">actuator</type>
        <singleton>false</singleton>
        <description>This component provides the interface for connecting this other application through the Internet.</description>
        <ports>
			<inputPort id="integerInputPort1">
				<description>Integer input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort2">
				<description>Integer input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort3">
				<description>Integer input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort4">
				<description>Integer input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="integerInputPort5">
				<description>Integer input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="doubleInputPort1">
				<description>Double input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort2">
				<description>Double input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort3">
				<description>Double input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort4">
				<description>Double input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="doubleInputPort5">
				<description>Double input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="stringInputPort1">
				<description>String input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort2">
				<description>String input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort3">
				<description>String input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort4">
				<description>String input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="stringInputPort5">
				<description>String input port 5</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="integerOutputPort1">
				<description>Integer output port  1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort2">
				<description>Integer output port  2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort3">
				<description>Integer output port  3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort4">
				<description>Integer output port  4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="integerOutputPort5">
				<description>Integer output port  5</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort1">
				<description>Double output port  1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort2">
				<description>Double output port  2</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort3">
				<description>Double output port  3</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort4">
				<description>Double output port  4</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="doubleOutputPort5">
				<description>Double output port  5</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="stringOutputPort1">
				<description>String output port  1</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort2">
				<description>String output port  2</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort3">
				<description>String output port  3</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort4">
				<description>String output port  4</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="stringOutputPort5">
				<description>String output port  5</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="inputEvent1">
				<description>Input Event 1</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent2">
				<description>Input Event 2</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent3">
				<description>Input Event 3</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent4">
				<description>Input Event 4</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent5">
				<description>Input Event 5</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent6">
				<description>Input Event 6</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent7">
				<description>Input Event 7</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent8">
				<description>Input Event 8</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent9">
				<description>Input Event 9</description>
			</eventListenerPort>
			<eventListenerPort id="inputEvent10">
				<description>Input Event 10</description>
			</eventListenerPort>

			<eventTriggererPort id="outputEvent1">
				<description>output Event 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent2">
				<description>output Event 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent3">
				<description>output Event 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent4">
				<description>output Event 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent5">
				<description>output Event 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent6">
				<description>output Event 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent7">
				<description>output Event 7</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent8">
				<description>output Event 8</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent9">
				<description>output Event 9</description>
			</eventTriggererPort>
			<eventTriggererPort id="outputEvent10">
				<description>output Event 10</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="connectionType"
				type="integer"
				value="0"
				combobox="server//client"
				description="Type of the connection for this plugin: server or client"/>
			<property name="IP"
				type="string"
				value="localhost"
				description="IP of the remote server"/>
			<property name="port"
				type="integer"
				value="21112"
				description="Port used in IP/TCP connection"/>
			<property name="multisession"
				type="boolean"
				value="false"
				description="If the plugin is set to work as the server and this property is set, the plugin can connect to many clients."/>

        </properties>

    </componentType>


    <componentType id="asterics.Oscilloscope"
                   canonical_name="eu.asterics.component.actuator.oscilloscope.OscilloscopeInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>Oscilloscope display for one signal channel</description>
        <ports>
            <inputPort id="in">
                <description>Input port of oscilloscope</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>

            </inputPort>
        </ports>
        <properties>
            <property name="displayBuffer"
                      type="integer"
                      value="3"
                      description="How many values will be buffered before redraw of oscilloscope"/>
            <property name="drawingMode"
                      type="integer"
                      value="0"
                      combobox="autoupdate min and max//crop to min and max"
                      description="drawing mode of the oscilloscope"/> 
            <property name="displayMode"
                      type="integer"
                      value="0"
                      combobox="redraw on incoming sample//draw periodically"
                      description="display update mode of the oscilloscope"/> 
            <property name="drawingInterval"
                      type="integer"
                      value="100"
                      description="draw interval in milliseconds (if periodic drawing is used)"/> 
            <property name="min"
                      type="double"
                      value="-100"
                      description="minimum display value (if crop drawing mode is used)"/>
            <property name="max"
                      type="double"
                      value="100"
                      description="maximum display value (if crop drawing mode is used)"/>
            <property name="gridColor"
                      type="integer"
                      value="0"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of the grid"/> 
            <property name="channelColor"
                      type="integer"
                      value="10"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of channel 1 signal"/> 
            <property name="backgroundColor"
                      type="integer"
                      value="11"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="background color"/>                 
            <property name="fontSize"
                      type="integer"
                      value="14"
                      description="font size of oscilloscope captions"/>
            <property name="caption"
                      type="string"
                      value="oscilloscope"
                      description="caption of the oscilloscope"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
            
        </properties>
        <gui>
            <width>6000</width>
            <height>3000</height>
        </gui>
    </componentType>



    <componentType id="asterics.OscOutClient"
                   canonical_name="eu.asterics.component.actuator.oscoutclient.OscOutClientInstance">
        <type subtype="Communication">actuator</type>
        <singleton>false</singleton>
        <description>Sends data out via OSC</description>
        <ports>
			<inputPort id="CH1">
				<description>Argument Nr. 0 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>Argument Nr. 1 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>Argument Nr. 2 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>Argument Nr. 3 of the OSC message specified by Property AddressCH1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="StringIN">
				<description>String which is send by one OSC message to the Address specified by Property AddressStringCh </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>

			<eventTriggererPort id="TriggerOne">
				<description>not populated, reserved for future use</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="Port"
				type="integer"
				value="57111"
				description="Specifies the port which is used by OSC"/>
			<property name="PeerAddress"
				type="string"
				value="127.0.0.1"
				description="Specifies the IP where data is send to"/>	
			<property name="AddressCh1"
				type="string"
				value="/channel1"
				description="Specifies the Address for channel 1"/>
			<property name="AddressStringCh"
				type="string"
				value="/AddressStringCh"
				description="Specifies the Addres for the string channel"/>
						

        </properties>

    </componentType>


    <componentType id="asterics.PhilipsHue"
                   canonical_name="eu.asterics.component.actuator.philipshue.PhilipsHueInstance">
        <type subtype="Home Control">actuator</type>
        <singleton>false</singleton>
        <description>Control Philips Hue devices via the RESTful API</description>
        <ports>
            <inputPort id="cmd">
                <description>Set new state of defined Philips Hue device (JSON)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="cmdResponse">
                <description>Get response of the command sent via the cmd input (JSON)</description>
                <dataType>string</dataType>
            </outputPort>

            <outputPort id="currentState">
                <description>Current state of all Philips Hue devices (JSON)</description>
                <dataType>string</dataType>
            </outputPort>

        </ports>
        <events>
            <eventListenerPort id="lightOn">
                <description>turn defined light on</description>
            </eventListenerPort>

            <eventListenerPort id="lightOff">
                <description>turn defined light off</description>
            </eventListenerPort>

            <eventListenerPort id="lightWhite">
                <description>turn defined light white (neutral color, 100% brightness)</description>
            </eventListenerPort>

            <eventListenerPort id="lightRed">
                <description>turn defined light red</description>
            </eventListenerPort>

            <eventListenerPort id="lightGreen">
                <description>turn defined light green</description>
            </eventListenerPort>

            <eventListenerPort id="lightBlue">
                <description>turn defined light blue</description>
            </eventListenerPort>
            <eventListenerPort id="lightBriLow">
                <description>set brightness of defined light to 10%</description>
            </eventListenerPort>

            <eventListenerPort id="lightBriHalf">
                <description>set brightness of defined light to 50%</description>
            </eventListenerPort>

            <eventListenerPort id="lightBriFull">
                <description>set brightness of defined light to 100%</description>
            </eventListenerPort>

            <eventListenerPort id="lightSaturate">
                <description>set saturation of defined light to 100%</description>
            </eventListenerPort>

            <eventListenerPort id="lightDesaturate">
                <description>set saturation of defined light to 0%</description>
            </eventListenerPort>


            <eventListenerPort id="allLightsOn">
                <description>turn all lights on</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsOff">
                <description>turn all lights off</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsWhite">
                <description>reset all lights (neutral color, 100% brightness)</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsRed">
                <description>turn all lights red</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsGreen">
                <description>turn all lights green</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsBlue">
                <description>turn all lights blue</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsColorloop">
                <description>activate the colorloop effect for all lights</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsBriLow">
                <description>set brightness for all lights to 10%</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsBriHalf">
                <description>set brightness for all lights to 50%</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsBriFull">
                <description>set brightness for all lights to 100%</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsSaturate">
                <description>set saturation for all lights to 100%</description>
            </eventListenerPort>

            <eventListenerPort id="allLightsDesaturate">
                <description>set saturation for all lights to 0%</description>
            </eventListenerPort>


            <eventTriggererPort id="statusChanged">
                <description>fires when any light changed its status</description>
            </eventTriggererPort>

            <eventTriggererPort id="tick">
                <description>fires for each tick (depends on updateRate variable)</description>
            </eventTriggererPort>

            <eventTriggererPort id="turnedOn">
                <description>fires if the light is turned on</description>
            </eventTriggererPort>

            <eventTriggererPort id="turnedOff">
                <description>fires if the light is turned off</description>
            </eventTriggererPort>

        </events>
        <properties>
            <property name="apiKey"
                      type="string"
                      value="0UqD9KYkjxiFzxJsQnqXyhllxXQ0-KEw4Ifbl5i2"
                      description="Philips Hue RESTful API key"/>
            <property name="ip"
                      type="string"
                      value="192.168.0.115"
                      description="Philips Hue Bridge IP"/>
            <property name="target"
                      type="string"
                      value="/lights/2"
                      description="light to be controlled in the form /light/&lt;id&gt;"/>
            <property name="updateRate"
                      type="integer"
                      value="1000"
                      description="Update rate for Hue bridge polling in ms. Don't use rate below 500ms."/>

        </properties>

    </componentType>


    <componentType id="asterics.PhoneControl"
                   canonical_name="eu.asterics.component.actuator.phonecontrol.PhoneControlInstance">
        <type subtype="Phone Interface">actuator</type>
        <singleton>true</singleton>
        <description>Phone plugin</description>
        <ports>
            <inputPort id="phoneID">
                <description>Phone ID for the phone connection or send SMS</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="SMSContent">
                <description>SMS content to send</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="command">
                <description>String command</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="remotePhoneID">
                <description>remote Phone ID</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="receivedSMS">
                <description>Received SMS content</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="errorNumber">
                <description>Error number out</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sendSMS">
                <description>Send SMS</description>
            </eventListenerPort>
            <eventListenerPort id="makePhoneCall">
                <description>Make Phone Call</description>
            </eventListenerPort>
            <eventListenerPort id="acceptPhoneCall">
                <description>Accept phone call</description>
            </eventListenerPort>
            <eventListenerPort id="dropPhoneCall">
                <description>Drop phone call</description>
            </eventListenerPort>
            <eventListenerPort id="reconnect">
                <description>Reconnect to the phone</description>
            </eventListenerPort>
            <eventTriggererPort id="idleState">
                <description>Phone is in the idle state</description>
            </eventTriggererPort>
            <eventTriggererPort id="ringState">
                <description>Ring state</description>
            </eventTriggererPort>
            <eventTriggererPort id="connectedState">
                <description>Phone is connected</description>
            </eventTriggererPort>
            <eventTriggererPort id="newSMS">
                <description>There is a new message</description>
            </eventTriggererPort>
            <eventTriggererPort id="error">
                <description>Error event</description>
            </eventTriggererPort>
        </events>    
        <properties>
        	<property name="defaultPhoneID"
                      type="string"
                      value=""
                      description="Default phone number"/>
            <property name="bluetoothPhoneName"
                      type="string"
                      value=""
                      description="Bluetooth phone name"/>
            <property name="port"
                      type="integer"
                      value="-1"
                      description="Phone server port number"/>
        </properties>
    </componentType>



    <componentType id="asterics.PicoTTS"
                   canonical_name="eu.asterics.component.actuator.picotts.PicoTTSInstance">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Text-to-speech via picoTTS</description>
        <ports>
			<inputPort id="input">
				<description>text to be spoken</description>
				<mustBeConnected>true</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>


		</events>			
        <properties>
			<property name="language"
				type="integer"
				value="0"
				combobox="english (GBR)//english(USA)//german//french//spanish//italian"
				description="creates speech output on RaspberryPi via the PicoTTS framework"/>

        </properties>

    </componentType>



    <componentType id="asterics.PlatformDigitalOut"
                   canonical_name="eu.asterics.component.actuator.platformdigitalout.PlatformDigitalOutInstance">
        <type subtype="Personal Platform">actuator</type>
        <singleton>true</singleton>
        <description>Control for the digital outputs of the Personal Platform</description>
        <ports>
            <inputPort id="command">
                <description>Commands for switching outputs (on/off/toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="setOut1">
                <description>An incoming event switches Output1 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOut2">
                <description>An incoming event switches Output2 to high level</description>
            </eventListenerPort>
<!--             
            <eventListenerPort id="setOut3">
                <description>An incoming event switches Output3 to high level</description>
            </eventListenerPort>
            <eventListenerPort id="setOut4">
                <description>An incoming event switches Output4 to high level</description>
            </eventListenerPort>
 -->
            <eventListenerPort id="clearOut1">
                <description>An incoming event switches Output1 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOut2">
                <description>An incoming event switches Output2 to low level</description>
            </eventListenerPort>
<!-- 
            <eventListenerPort id="clearOut3">
                <description>An incoming event switches Output3 to low level</description>
            </eventListenerPort>
            <eventListenerPort id="clearOut4">
                <description>An incoming event switches Output4 to low level</description>
            </eventListenerPort>
 -->
        </events>        
        <properties>
            <property name="pullupOutput1"
                      type="boolean"
                      value="false"
                      description="Defines if pullup resistor of output 1 should be activated"/>
            <property name="pullupOutput2"
                      type="boolean"
                      value="false"
                      description="Defines if pullup resistor of output 2 should be activated"/>
        </properties>
    </componentType>



    <componentType id="asterics.PlatformLCD"
                   canonical_name="eu.asterics.component.actuator.platformlcd.PlatformLCDInstance">
        <type subtype="Personal Platform">actuator</type>
        <singleton>false</singleton>
        <description>LC-Display actuator for Personal Platform display control</description>
        <ports>
            <inputPort id="input">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <properties>
        </properties>
    </componentType>


    <componentType id="asterics.EmulateFaultyPlugin"
                   canonical_name="eu.asterics.component.actuator.emulatefaultyplugin.EmulateFaultyPluginInstance">
        <type subtype="Test">actuator</type>
        <singleton>false</singleton>
        <description>Emulates a faulty plugin - supports throwing exceptions during method calls or hanging (unresponsive) method calls </description>
        <ports>
			<inputPort id="inA">
				<description>input A</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="inB">
				<description>input C</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="inC">
				<description>input C</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inD">
				<description>input C</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="eventA">
				<description>eventA</description>
			</eventListenerPort>
			<eventListenerPort id="eventB">
				<description>eventB</description>
			</eventListenerPort>
			<eventListenerPort id="eventC">
				<description>eventC</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="instantiationException"
				type="boolean"
				value="false"
				description="Produce an exception during instantion/setRuntimePropertyValue"/>        
			<property name="startException"
				type="boolean"
				value="false"
				description="Produce an exception during start method"/>
			<property name="pauseException"
				type="boolean"
				value="false"
				description="Produce an exception during pause method"/>
			<property name="resumeException"
				type="boolean"
				value="false"
				description="Produce an exception during resume method"/>
			<property name="stopException"
				type="boolean"
				value="false"
				description="Produce an exception during stop method"/>
				
				<!-- 
			<property name="getInputPortException"
				type="boolean"
				value="false"
				description="Produce an exception during method call"/>
			<property name="getOutputPortException"
				type="boolean"
				value="false"
				description="Produce an exception during method call"/>
			<property name="getRuntimePropertyValueException"
				type="boolean"
				value="false"
				description="Produce an exception during method call"/>
			<property name="setRuntimePropertyValueException"
				type="boolean"
				value="false"
				description="Produce an exception during method call"/>
			<property name="getEventListenerPortException"
				type="boolean"
				value="false"
				description="Produce an exception during method call"/>
			<property name="getInputPortNullValue"
				type="boolean"
				value="false"
				description="Return a null value"/>
			<property name="getOutputPortNullValue"
				type="boolean"
				value="false"
				description="Return a null value"/>
			<property name="getRuntimePropertyNullValue"
				type="boolean"
				value="false"
				description="Return a null value"/>
			<property name="getEventListenerPortNullValue"
				type="boolean"
				value="false"
				description="Return a null value"/>
				-->
			<property name="startDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="pauseDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="resumeDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="stopDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
				<!-- 
			<property name="getRuntimePropertyDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="setRuntimePropertyDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
				-->
			<property name="inADuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="inBDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="inCDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="inDDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="eventADuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="eventBDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>
			<property name="eventCDuration"
				type="integer"
				value="0"
				description="Duration of hanging call in ms (-1=hangs forever)"/>

        </properties>
		<gui>
			<width>30</width>
			<height>20</height>
		</gui>

    </componentType>


    <componentType id="asterics.LineWriter"
                   canonical_name="eu.asterics.component.actuator.linewriter.LineWriterInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>Writes single Lines into a file</description>
        <ports>
			<inputPort id="actLine">
				<description>input string to be written</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>


        </ports>
		<events>


		</events>			
        <properties>
			<property name="fileName"
				type="string"
				value="outfile"
				description="the name and path of the output file (.txt will be added automatically)"/>
			<property name="addTimeToFileName"
				type="boolean"
				value="false"
				description="if true, the filename will be unique by adding the current time"/>
			<property name="titleCaption"
				type="string"
				value=""
				description="an optional title string which will be inserted as first line"/>
			<property name="timestamp"
				type="integer"
				value="0"
				combobox="no timestamp//milliseconds"
				description="an optional timestamp can be added at the beginning of the each line"/>
			<property name="lineEndMark"
				type="integer"
				value="0"
				combobox="System-Default//LF (\n)//CR+LF (\r\n)"
				description="the character(s) which mark a line end"/>
			<property name="append"
				type="boolean"
				value="false"
				description="if true, the file will be appended (not deleted)"/>

        </properties>

    </componentType>


    <componentType id="asterics.PongGame"
                   canonical_name="eu.asterics.component.actuator.ponggame.PongGameInstance">
        <type subtype="Others">actuator</type>
        <singleton>true</singleton>
        <description>Plugin displays a pong game in the AsTeRICS GUI</description>
        <ports>
			<inputPort id="playerOnePos">
				<description>range 0 to 300 will move paddle of player 1 to this position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerTwoPos">
				<description>range 0 to 300 will move paddle of player 2 to this position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerOneSpeed">
				<description>range -10 to 10 will move paddle up or down at specified speed</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="playerTwoSpeed">
				<description>range -10 to 10 will move paddle up or down at specified speed</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<outputPort id="ballX">
				<description>current X position of the Ball</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="ballY">
				<description>current Y position of the Ball</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="startGame">
				<description>incoming event will start the game</description>
			</eventListenerPort>
			<eventListenerPort id="playerOneToggleDirection">
				<description>incoming event will switch paddle direction in event and speed controlled drive</description>
			</eventListenerPort>
			<eventListenerPort id="playerTwoToggleDirection">
				<description>incoming event will switch paddle direction in event and speed controlled drive</description>
			</eventListenerPort>
			<eventListenerPort id="playerTwoMovement">
				<description>incoming event will add points/calories for player 2 (and move paddle in event controlled drive)</description>
			</eventListenerPort>
			<eventListenerPort id="playerOneMovement">
				<description>incoming event will add point for player 1 (and move paddle in event controlled drive)</description>
			</eventListenerPort>

			<eventTriggererPort id="gameOver">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="goalPlayerOne">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="goalPlayerTwo">
				<description>etp description</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="controlMode"
				type="integer"
                value="1"
                combobox="Position//Speed//Event"
				description="selects the type of drive control (position input ports, speed input ports or event ports)"/>
			<property name="speedStep"
				type="double"
				value="0.2"
				description="speed to be multiplied by speed input (only in speed controlled drive)"/>
			<property name="goalsToWin"
				type="integer"
				value="3"
				description="how many goals to win a game"/>
			<property name="eventsToCaloryMultiplier"
				type="double"
				value="0.0"
				description="mapping of input events to calories (0 = deactivate calory events and screens)"/>
			<property name="goalScoreBase"
				type="integer"
				value="1000"
				description="Base amount of points for a goal"/>
			<property name="goalTouchBase"
				type="integer"
				value="10"
				description="Base amount of points for touching the ball with the paddle"/>
			<property name="resetWaitTime"
				type="integer"
				value="2000"
				description="time to wait after reset of ball"/>
			<property name="maxSpeed"
				type="double"
				value="5.0"
				description="top speed of ball"/>
			<property name="minXSpeed"
				type="double"
				value="1.0"
				description="speed threshold for x movement to avoid stalled game"/>
			<property name="reflectionYImpulse"
				type="double"
				value="0.5"
				description="Base amount of y force applied to ball on touch to rectangular paddle"/>
			<property name="soundFilePaddleTouch"
				type="string"
				value="data/sounds/pong_2.wav"
				description="sound to be played when ball touches paddle"/>
			<property name="soundFileBoundsTouch"
				type="string"
				value="data/sounds/pong_1.wav"
				description="sound to be played when ball touches bounds"/>
			<property name="soundFileGoal"
				type="string"
				value="data/sounds/pong_3.wav"
				description="sound to be played when ball touches bounds"/>
			<property name="soundFileEndGame"
				type="string"
				value="data/sounds/pong_3.wav"
				description="sound to be played when game ends"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.TextDisplay"
                   canonical_name="eu.asterics.component.actuator.textdisplay.TextDisplayInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays text.</description>
        <ports>
			<inputPort id="input">
				<description>Input string port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
		    <eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>
            <eventTriggererPort id="clicked">
                <description>component clicked</description>
            </eventTriggererPort>		
		</events>			
        <properties>
        	<property name="caption"
				type="string"
				value="Text Display"
				description="Caption of the component"/>
			<property name="default"
				type="string"
				value=""
				description="Defalult text"/>
			<property name="textPosition"
				type="integer"
				value="1"
				description="Position of the text"
				combobox="left//center//right"/>
			<property name="textColor"
                type="integer"
                value="0"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="color of text"/> 
            <property name="backgroundColor"
                type="integer"
                value="11"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="background color"/> 
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.Comparator"
                   canonical_name="eu.asterics.component.processor.comparator.ComparatorInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Comparator for two inputs</description>
        <ports>
            <inputPort id="inA">
                <description>Input port 1 of comparator</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inB">
                <description>Input port 2 of comparator</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
            <outputPort id="output">
                <description>Output signal of comparator</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>

            <eventTriggererPort id="conditionTrue">
                <description>Event port triggers if condition becomes true</description>
            </eventTriggererPort>
            <eventTriggererPort id="conditionFalse">
                <description>Event port triggers if condition becomes false</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property name="condition"
                      type="integer"
                      value="0"
                      combobox="a greater b//a equals b//a lower b//a greater threshold//a equals threshold//a lower threshold//a between threshold and threshold2"
                      description="condition for even generation"/>
            <property name="outputMode"
                      type="integer"
                      value="2"
                      combobox="output max//output min//output a if condition met"
                      description="mode for output signal"/>
            <property name="eventMode"
                      type="integer"
                      value="0"
                      combobox="create event only if condition changes//create event on every incoming value"
                      description="mode for event generation"/>
            <property name="threshold"
                      type="double"
                      value="1"
                      description="threshold for signal comparison with constant value"/>
            <property name="threshold2"
                      type="double"
                      value="10"
                      description="threshold2 for signal range comparison (a between threshold and threshold2)"/>
        </properties>
    </componentType>



    <componentType id="asterics.ECMAScriptInterpreter"
                   canonical_name="org.whitesoft.asterics.component.processor.ecmascriptinterpreter.ECMAScriptInterpreterInstance">
        <type subtype="Scripting">processor</type>
        <singleton>false</singleton>
        <description>A plugin that can interpret ECMAScript files</description>
        <ports>
			<inputPort id="inputPort1">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort2">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort3">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort4">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort5">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort6">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inputPort7">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
		    <inputPort id="inputPort8">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
							
			    					
			<outputPort id="outputPort1">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>

			<outputPort id="outputPort2">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>

			<outputPort id="outputPort3">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="outputPort4">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
						
			<outputPort id="outputPort5">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="outputPort6">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="outputPort7">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="outputPort8">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>
																								
        </ports>
		<events>
			<eventListenerPort id="elpPort1">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort2">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort3">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort4">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort5">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort6">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort7">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="elpPort8">
				<description>elp description</description>
			</eventListenerPort>
																											
			<eventTriggererPort id="etpPort1">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort2">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort3">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort4">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort5">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort6">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort7">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="etpPort8">
				<description>etp description</description>
			</eventTriggererPort>
																					
		</events>			
        <properties>
			<property name="scriptname"
				type="string"
				value=""
				description="the script to be executed"/>

			<property name="value1"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value2"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value3"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value4"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value5"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value6"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value7"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
			<property name="value8"
				type="string"
				value=""
				description="a general purpose value that can be read by the script"/>
																		
        </properties>

    </componentType>


    <componentType id="asterics.HRVAnalysis"
                   canonical_name="eu.asterics.component.processor.hrvanalysis.HRVAnalysisInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>HRV - Analysis</description>
        <ports>
			<inputPort id="HRVInput">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<outputPort id="Runtime">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Pulserate">
				<description>Pulserate of patient</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SDNN">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rMSSD">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SDSD">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="pNN50">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>		
			<outputPort id="pNN20">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="DD">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			


        </ports>
		<events>
			<eventListenerPort id="start">
				<description>Start HRV detection</description>
			</eventListenerPort>

		</events>	
		<properties>		
        <property name="samplerate"
                      type="double"
                      value="100"
                      description="Samplerate of Inputsignal"/>     
          <property name="OutlierRange"
                      type="double"
                      value="1.5"
                      description="OutlierRange of peak"/>           
        </properties>


    </componentType>


    <componentType id="asterics.NexusConnector"
                   canonical_name="eu.asterics.component.processor.nexusconnector.NexusConnectorInstance">
        <type subtype="Web">processor</type>
        <singleton>false</singleton>
        <description>Nexus Connector</description>
        <ports>
            <inputPort id="in1d">
                <description>Input 1 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in2d">
                <description>Input 2 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in3d">
                <description>Input 3 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in4d">
                <description>Input 4 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in5s">
                <description>Input 5 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="in6s">
                <description>Input 6 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="in7s">
                <description>Input 7 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="in8s">
                <description>Input 8 sends data to the Nexus</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="out1d">
                <description>Output 1 receives data from the Nexus</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out2d">
                <description>Output 2 receives data from the Nexus</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out3d">
                <description>Output 3 receives data from the Nexus</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out4d">
                <description>Output 4 receives data from the Nexus</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out5s">
                <description>Output 5 receives data from the Nexus</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out6s">
                <description>Output 6 receives data from the Nexus</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out7s">
                <description>Output 7 receives data from the Nexus</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out8s">
                <description>Output 8 receives data from the Nexus</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="nexusHostname"
                      type="string"
                      value="localhost"
                      description="Hostname of Nexus"/>
            <property name="nexusPort"
                      type="integer"
                      value="9081"
                      description="Port number of Nexus"/>
            <property name="nexusComponentPath"
                      type="string"
                      value="nexus.asterics"
                      description="Nexus component to bind to"/>
        </properties>
    </componentType>



    <componentType id="asterics.Sampler"
                   canonical_name="eu.asterics.component.processor.sampler.SamplerInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Sets the constant rate of the sampling</description>
        <ports>
			<inputPort id="input">
				<description>Input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="samplingRate"
				type="double"
				value="10"
				description="Rate of the sampling (Hz)"/>
			<property name="responseTime"
				type="integer"
				value="0"
				description="Response time [ms]. If the time from arrival of the last input data exceeds the response time, the plugin stops sending output data."/>
			<property name="sendNullSamples"
				type="boolean"
				value="false"
				description="If this property is set and there is no input data or the response time is exceeded the plugin sends samples equal zero."/>

        </properties>

    </componentType>


    <componentType id="asterics.StringPathSelector"
                   canonical_name="eu.asterics.component.processor.stringpathselector.StringPathselectorInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>StringPathselector routes signal to one of four output ports</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="out1">
                <description>Path 1</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Path 2"</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Path 3</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out5">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out6">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out7">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
            <outputPort id="out8">
                <description>Path 4</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="select1">
                <description>selects out-port 1</description>
            </eventListenerPort>
            <eventListenerPort id="select2">
                <description>selects out-port 2</description>
            </eventListenerPort>
            <eventListenerPort id="select3">
                <description>selects out-port 3</description>
            </eventListenerPort>
            <eventListenerPort id="select4">
                <description>selects out-port 4</description>
            </eventListenerPort>
            <eventListenerPort id="select5">
                <description>selects out-port 5</description>
            </eventListenerPort>
            <eventListenerPort id="select6">
                <description>selects out-port 6</description>
            </eventListenerPort>
            <eventListenerPort id="select7">
                <description>selects out-port 7</description>
            </eventListenerPort>
            <eventListenerPort id="select8">
                <description>selects out-port 8</description>
            </eventListenerPort>
            <eventListenerPort id="selectNext">
                <description>selects next out-port</description>
            </eventListenerPort>
            <eventListenerPort id="selectPrevious">
                <description>selects previous out-port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property name="activePorts"
                      type="integer"
                      value="1"
                      combobox="1//2//3//4//5//6//7//8"
                      description="number of connected (and active) ports"/>
        </properties>
    </componentType>



    <componentType id="asterics.ButtonGrid"
                   canonical_name="eu.asterics.component.sensor.buttongrid.ButtonGridInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>Keyboard which sends event after button press</description> 
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="button1">
                <description>Button 1 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button2">
                <description>Button 2 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button3">
                <description>Button 3 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button4">
                <description>Button 4 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button5">
                <description>Button 5 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button6">
                <description>Button 6 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button7">
                <description>Button 7 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button8">
                <description>Button 8 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button9">
                <description>Button 9 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button10">
                <description>Button 10 pressed</description>
            </eventTriggererPort>      
            <eventTriggererPort id="button11">
                <description>Button 11 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button12">
                <description>Button 12 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button13">
                <description>Button 13 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button14">
                <description>Button 14 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button15">
                <description>Button 15 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button16">
                <description>Button 16 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button17">
                <description>Button 17 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button18">
                <description>Button 18 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button19">
                <description>Button 19 pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="button20">
                <description>Button 20 pressed</description>
            </eventTriggererPort>     
        </events>
        <properties>
            <property name="caption"
                      type="string"
                      value="Keyboard"
                      description="Caption of the keyboard"/>
            <property name="horizontalOrientation"
                      type="boolean"
                      value="false"
                      description="Sets keys in horizontal orientation"/> 
			<property name="textColor"
				type="integer"
				value="13"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow//default"
				description="Text color"/>
			<property name="backgroundColor"
				type="integer"
				value="13"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow//default"
				description="Background color of the button"/>
			<property name="borderColor"
				type="integer"
				value="13"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow//default"
				description="Color of the button frame"/>
			<property name="borderThickness"
				type="integer"
				value="2"
				description="Thickness of the button frame"/>
			<property name="selectionFrameColor"
				type="integer"
				value="13"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow//default"
				description="Color of the selection frame (active when hovering over the button)"/>
			<property name="selectionFrameThickness"
				type="integer"
				value="4"
				description="Thickness of the selection frame (active when hovering over the button)"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>

            <property name="buttonCaption1"
                      type="string"
                      value="Button 1"
                      description="Caption of the button 1"/>
            <property name="buttonCaption2"
                      type="string"
                      value="Button 2"
                      description="Caption of the button 2"/>
            <property name="buttonCaption3"
                      type="string"
                      value=""
                      description="Caption of the button 3"/>
            <property name="buttonCaption4"
                      type="string"
                      value=""
                      description="Caption of the button 4"/>
            <property name="buttonCaption5"
                      type="string"
                      value=""
                      description="Caption of the button 5"/>
            <property name="buttonCaption6"
                      type="string"
                      value=""
                      description="Caption of the button 6"/>
            <property name="buttonCaption7"
                      type="string"
                      value=""
                      description="Caption of the button 7"/>
            <property name="buttonCaption8"
                      type="string"
                      value=""
                      description="Caption of the button 8"/>
            <property name="buttonCaption9"
                      type="string"
                      value=""
                      description="Caption of the button 9"/>
            <property name="buttonCaption10"
                      type="string"
                      value=""
                      description="Caption of the button 10"/>
            <property name="buttonCaption11"
                      type="string"
                      value=""
                      description="Caption of the button 11"/>
            <property name="buttonCaption12"
                      type="string"
                      value=""
                      description="Caption of the button 12"/>
            <property name="buttonCaption13"
                      type="string"
                      value=""
                      description="Caption of the button 13"/>
            <property name="buttonCaption14"
                      type="string"
                      value=""
                      description="Caption of the button 14"/>
            <property name="buttonCaption15"
                      type="string"
                      value=""
                      description="Caption of the button 15"/>
            <property name="buttonCaption16"
                      type="string"
                      value=""
                      description="Caption of the button 16"/>
            <property name="buttonCaption17"
                      type="string"
                      value=""
                      description="Caption of the button 17"/>
            <property name="buttonCaption18"
                      type="string"
                      value=""
                      description="Caption of the button 18"/>
            <property name="buttonCaption19"
                      type="string"
                      value=""
                      description="Caption of the button 19"/>
            <property name="buttonCaption20"
                      type="string"
                      value=""
                      description="Caption of the button 20"/>

            <property name="toolTip1"
                      type="string"
                      value=""
                      description="Tooltip text for button 1"/>
            <property name="toolTip2"
                      type="string"
                      value=""
                      description="Tooltip text for button 2"/>
            <property name="toolTip3"
                      type="string"
                      value=""
                      description="Tooltip text for button 3"/>
            <property name="toolTip4"
                      type="string"
                      value=""
                      description="Tooltip text for button 4"/>
            <property name="toolTip5"
                      type="string"
                      value=""
                      description="Tooltip text for button 5"/>
            <property name="toolTip6"
                      type="string"
                      value=""
                      description="Tooltip text for button 6"/>
            <property name="toolTip7"
                      type="string"
                      value=""
                      description="Tooltip text for button 7"/>
            <property name="toolTip8"
                      type="string"
                      value=""
                      description="Tooltip text for button 8"/>
            <property name="toolTip9"
                      type="string"
                      value=""
                      description="Tooltip text for button 9"/>
            <property name="toolTip10"
                      type="string"
                      value=""
                      description="Tooltip text for button 10"/>
            <property name="toolTip11"
                      type="string"
                      value=""
                      description="Tooltip text for button 11"/>
            <property name="toolTip12"
                      type="string"
                      value=""
                      description="Tooltip text for button 12"/>
            <property name="toolTip13"
                      type="string"
                      value=""
                      description="Tooltip text for button 13"/>
            <property name="toolTip14"
                      type="string"
                      value=""
                      description="Tooltip text for button 14"/>
            <property name="toolTip15"
                      type="string"
                      value=""
                      description="Tooltip text for button 15"/>
            <property name="toolTip16"
                      type="string"
                      value=""
                      description="Tooltip text for button 16"/>
            <property name="toolTip17"
                      type="string"
                      value=""
                      description="Tooltip text for button 17"/>
            <property name="toolTip18"
                      type="string"
                      value=""
                      description="Tooltip text for button 18"/>
            <property name="toolTip19"
                      type="string"
                      value=""
                      description="Tooltip text for button 19"/>
            <property name="toolTip20"
                      type="string"
                      value=""
                      description="Tooltip text for button 20"/>                       
        </properties>
        <gui>
            <width>500</width>
            <height>2000</height>
        </gui>
    </componentType>



    <componentType id="asterics.FourDJoystick"
                   canonical_name="eu.asterics.component.sensor.fourdjoystick.FourDJoystickInstance">
        <type subtype="Others">sensor</type>
        <singleton>false</singleton>
        <description>Plugin to interface the 4D Joystick developed by KI-I</description>
        <ports>

			<outputPort id="joyX">
				<description>joystick x value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="joyY">
				<description>joystick y value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="joyZ">
				<description>joystick z value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="sipPuff">
				<description>joystick sip/puff value</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="CH5Pressed">
				<description>channel 5 got pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="CH5Released">
				<description>channel 5 got released</description>
			</eventTriggererPort>
			<eventTriggererPort id="CH6Pressed">
				<description>channel 6 got pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="CH6Released">
				<description>channel 6 got released</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="comPort"
				type="string"
				value="COM0"
				description="Com Port of the joystick"/>

        </properties>

    </componentType>


    <componentType id="asterics.MicGPI"
                   canonical_name="eu.asterics.component.sensor.micgpi.MicGPIInstance">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>This plugin reads an input signal via the microphone input</description>
        <ports>

			<inputPort id="thresholdLow">
				<description>threshold for button release</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="thresholdHigh">
				<description>threshold for button release</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			
		
			<outputPort id="pressure">
				<description>sound pressure level</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="frequency">
				<description>the dominant frequency in the spectrum</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventTriggererPort id="inLow">
				<description>This event gets fired if the signal goes beyond the lowThreshold</description>
			</eventTriggererPort>
			<eventTriggererPort id="inHigh">
				<description>This event gets fired if the signal goes over the highThreshold</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="samplingFrequency"
				type="integer"
				value="8000"
				description="the sampling frequency setting for the audio input (min:300 Hz, max:44100 Hz)"/>
			<property name="sampleSize"
				type="integer"
				value="2"
				combobox="32//64//128//256//512//1024//2048"				
				description="interval length (samples per calculation block)"/>
			<property name="mode"
				type="integer"
				value="1"
				combobox="average sample values//average absolute sample values//min value//max value//max absolute value"				
				description="the calculation mode for the threshold and pressure output port (applied to the samples of the interval)"/>
			<property name="thresholdLow"
				type="integer"
				value="-30"
				description="threshold for low event"/>
			<property name="thresholdHigh"
				type="integer"
				value="30"
				description="threshold for high event"/>
			<property name="noiseLevel"
				type="double"
				value="1.5"
				description="sound below noise level will be attenuated"/>
			<property name="calculateFrequency"
                      type="boolean"
                      value="false"
                      description="if selected, the dominant frequency is calculated"/> 
			<property name="printSpectrum"
                      type="boolean"
                      value="false"
                      description="if selected, the frequency spectrum is shown in the console window"/> 
			<property name="captureDevice"
                type="string"
                value="System Default"
                getStringList="true"
			    description="Specifies which device should be used for recording"/>
        </properties>

    </componentType>


    <componentType id="asterics.RemoteJoystick"
                   canonical_name="eu.asterics.component.actuator.remotejoystick.RemoteJoystickInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Joystick emulator, communicates via HID actuator, compatible to PS3 sixaxis / SEGA Virtua Stick </description>
        <ports>
            <inputPort id="joystickX">
                <description>Input port for x-coordinate for joystick (Left-X)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickY">
                <description>Input port for y-coordinate for joystick (Left-Y)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickZ">
                <description>Input port for z-coordinate for joystick (Right-X)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickR">
                <description>Input port for r-coordinate for joystick (Right-Y)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="joystickPov">
                <description>Input port for POV-hat for joystick (Direction)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="pressButton1">
                <description>presses button 1 (Square)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton1">
                <description>releases button 1 (Square)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton2">
                <description>presses button 2 (Cross)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton2">
                <description>releases button 2 (Cross)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton3">
                <description>presses button 3 (Circle)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton3">
                <description>releases button 3 (Circle)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton4">
                <description>presses button 4 (Triangle)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton4">
                <description>releases button 4 (Triangle)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton5">
                <description>presses button 5 (L1)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton5">
                <description>releases button 5 (L1)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton6">
                <description>presses button 6 (R1)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton6">
                <description>releases button 6 (R1)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton7">
                <description>presses button 7 (L2)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton7">
                <description>releases button 7 (L2)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton8">
                <description>presses button 8 (R2)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton8">
                <description>releases button 8 (R2)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton9">
                <description>presses button 9 (Select)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton9">
                <description>releases button 9 (Select)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton10">
                <description>presses button 10 (Start)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton10">
                <description>releases button 10 (Start)</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton11">
                <description>presses button 11</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton11">
                <description>releases button 11</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton12">
                <description>presses button 12</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton12">
                <description>releases button 12</description>
            </eventListenerPort>
            <eventListenerPort id="pressButton13">
                <description>presses button 13 (PS)</description>
            </eventListenerPort>
            <eventListenerPort id="releaseButton13">
                <description>releases button 13 (PS)</description>
            </eventListenerPort>
            <eventListenerPort id="reset">
                <description>resets to default values (no button pressed, axis centered)</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="refreshInterval"
                      type="integer"
                      value="0"
                      description="the minimim time between two update-packets to the joystick HID (in milliseconds)"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.RemoteKeyboard"
                   canonical_name="eu.asterics.component.actuator.remotekeyboard.RemoteKeyboardInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>false</singleton>
        <description>Keyboard emulator for remote keyboard input via HID actuator</description>
        <ports>
            <inputPort id="keyCodes">
                <description>input string for keycodes</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="sendKeys">
                <description>On incoming event, all keys in keycode-string are sent</description>
            </eventListenerPort>
            <eventListenerPort id="pressKey">
                <description>On incoming event, the next key in keycode-string is pressed</description>
            </eventListenerPort>
            <eventListenerPort id="holdKey">
                <description>On incoming event, hold the next key in keycode-string</description>
            </eventListenerPort>
            <eventListenerPort id="releaseKey">
                <description>On incoming event, release current keys</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="keyCodeString"
                      type="string"
                      value="a"
                      description="Keycodes to send"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                                            
        </properties>
    </componentType>



    <componentType id="asterics.RemoteMouse"
                   canonical_name="eu.asterics.component.actuator.remotemouse.RemoteMouseInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Remote mouse emulation via HID actuator</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>On incoming event, middle mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>On incoming event, right mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>On incoming event, left mouse button is double-clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>On incoming event, left mouse button is released</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>On incoming event, mouse wheel position is increased</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>On incoming event, mouse wheel position is decreased</description>
            </eventListenerPort>
            <eventListenerPort id="nextClickRight">
                <description>the next left click event will generate a right click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDouble">
                <description>the next left click event will generate a double click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickMiddle">
                <description>the next left click event will generate a middle click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDrag">
                <description>the next left click event will generate a drag click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickRelease">
                <description>the next left click event will release a drag click</description>
            </eventListenerPort> 
            
            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="absolutePosition"
                      type="boolean"
                      value="true"
                      description="X and Y values are absolute positions or relative movements"/>
            <property name="centerX"
                      type="integer"
                      value="300"
                      description="center value for X location"/>                      
            <property name="centerY"
                      type="integer"
                      value="150"
                      description="center value for Y location"/>   
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                                         
        </properties>
    </componentType>



    <componentType id="asterics.RemoteTablet"
                   canonical_name="eu.asterics.component.actuator.remotetablet.RemoteTabletInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>Remote tablet emulation via HID actuator</description>
        <ports>
            <inputPort id="mouseX">
                <description>Input port of x-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="mouseY">
                <description>Input port of y-coordinate for mouse</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="action">
                <description>Mouse commands for selection of next click type (eg.: @MOUSE:nextclick,right @MOUSE:action,enable @MOUSE:action,toggle)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="leftClick">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="middleClick">
                <description>On incoming event, middle mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="rightClick">
                <description>On incoming event, right mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="doubleClick">
                <description>On incoming event, left mouse button is double-clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragPress">
                <description>On incoming event, left mouse button is clicked</description>
            </eventListenerPort>
            <eventListenerPort id="dragRelease">
                <description>On incoming event, left mouse button is released</description>
            </eventListenerPort>
            <eventListenerPort id="wheelUp">
                <description>On incoming event, mouse wheel position is increased</description>
            </eventListenerPort>
            <eventListenerPort id="wheelDown">
                <description>On incoming event, mouse wheel position is decreased</description>
            </eventListenerPort>
			 <eventListenerPort id="nextClickRight">
                <description>the next left click event will generate a right click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDouble">
                <description>the next left click event will generate a double click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickMiddle">
                <description>the next left click event will generate a middle click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickDrag">
                <description>the next left click event will generate a drag click</description>
            </eventListenerPort> 
			 <eventListenerPort id="nextClickRelease">
                <description>the next left click event will release a drag click</description>
            </eventListenerPort>             
            <eventListenerPort id="center">
                <description>On incoming event, the mouse cursor position will be centered</description>
            </eventListenerPort>
            <eventListenerPort id="activate">
                <description>On incoming event, the mouse activity starts</description>
            </eventListenerPort>
            <eventListenerPort id="deactivate">
                <description>On incoming event, the mouse activity stops</description>
            </eventListenerPort>
            <eventListenerPort id="toggle">
                <description>On incoming event, the mouse activity toggles</description>
            </eventListenerPort>        </events>        
        <properties>
            <property name="absolutePosition"
                      type="boolean"
                      value="true"
                      description="X and Y values are absolute positions or relative movements"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
   
        </properties>
    </componentType>



    <componentType id="asterics.RemoteWindow"
                   canonical_name="eu.asterics.component.actuator.remotewindow.RemoteWindowInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>provides basic  Window manipulation for another active window</description>
        <ports>
			<inputPort id="name">
				<description>the title of the window</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="XPos">
				<description>desired X offset</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="YPos">
				<description>desired Y offset</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="MoveToTop">
				<description>moves Window to top of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="MoveToBottom">
				<description>moves Window to bottom of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="MoveToLeft">
				<description>moves Window to left side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="MoveToRight">
				<description>moves Window to right side of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="MoveToCenter">
				<description>moves Window to center of the screen</description>
			</eventListenerPort>
			<eventListenerPort id="Minimize">
				<description>minimizes the Window to the taskbar</description>
			</eventListenerPort>
			<eventListenerPort id="Restore">
				<description>restores the Window from the taskbar</description>
			</eventListenerPort>
			<eventListenerPort id="bringToFront">
				<description>brings the Window to foreground position</description>
			</eventListenerPort>
			<eventListenerPort id="moveNow">
				<description>moves the Window to selected x/y position</description>
			</eventListenerPort>
		</events>			
        <properties>
			<property name="windowName"
				type="string"
				value="Notepad"
				description="the title (caption) of the window"/>
			<property name="mode"
				type="integer"
				value="1"
				combobox="exact match//window title contains text"
				description="mode for searching the window title"/>
			<property name="xPos"
				type="integer"
				value="0"
				description="default x position"/>
			<property name="yPos"
				type="integer"
				value="0"
				description="default y position"/>
			<property name="autoSetPosition"
				type="boolean"
				value="false"
				description="if true, the window will be moved automatically when new position values come in"/>

        </properties>

    </componentType>


    <componentType id="asterics.serialSender"
                   canonical_name="eu.asterics.component.actuator.serialSender.SerialSenderInstance">
        <type subtype="Generic Control Output">actuator</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="Slot0">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot1">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot2">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot3">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot4">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot5">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot6">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot7">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot8">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot9">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot10">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot11">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot12">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot13">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot14">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="slot15">
				<description>Slot0 input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="send">
				<description>elp description</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="COMPort"
				type="string"
				value="COM0"
				description="property description"/>
			<property name="debug"
				type="boolean"
				value="false"
				description="property description"/>
			<property name="BaudRate"
				type="integer"
				value="600"
				description="property description"/>
			<property name="slot0"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot1"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot2"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot3"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot4"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot5"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot6"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot7"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot8"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot9"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot10"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot11"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot12"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot13"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot14"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot15"
				type="integer"
				value="0"
				description="slotValue"/>
			<property name="slot0Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot1Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot2Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot3Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot4Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot5Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot6Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot7Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot8Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot9Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot10Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot11Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot12Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot13Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot14Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot15Active"
				type="boolean"
				value="false"
				description="activate this slot"/>
			<property name="slot0Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot1Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot2Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot3Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot4Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot5Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot6Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot7Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot8Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot9Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot10Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot11Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot12Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot13Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot14Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>
			<property name="slot15Delay"
				type="integer"
				value="0"
				description="slot delay to send data"/>

        </properties>

    </componentType>


    <componentType id="asterics.Skype"
                   canonical_name="eu.asterics.component.actuator.skype.SkypeInstance">
        <type subtype="Communication">actuator</type>
        <singleton>true</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="skypeID">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="callerID">
				<description>output port description</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="callUser1">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="callUser2">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="callUser3">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="callUser4">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="callUser5">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="call">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="cancelCall">
				<description></description>
			</eventListenerPort>
			<eventListenerPort id="answerCall">
				<description></description>
			</eventListenerPort>
			<eventTriggererPort id="incomingCall">
				<description></description>
			</eventTriggererPort>
			<eventTriggererPort id="callFinished">
				<description></description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="user1"
				type="string"
				value=" "
				description="property description"/>
			<property name="user2"
				type="string"
				value=" "
				description="property description"/>
			<property name="user3"
				type="string"
				value=" "
				description="property description"/>
			<property name="user4"
				type="string"
				value=" "
				description="property description"/>
			<property name="user5"
				type="string"
				value=" "
				description="property description"/>

        </properties>

    </componentType>


    <componentType id="asterics.SkyWatcherMount"
                   canonical_name="eu.asterics.component.actuator.skywatchermount.SkyWatcherMountInstance">
        <type subtype="Others">actuator</type>
        <singleton>false</singleton>
        <description>Plugin to control telescope mounts using the NEXStar 5 protocol</description>
        <ports>
			<inputPort id="speed">
                <description>movement speed of the mount</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="panPosition">
                <description>Position to go for pan</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="tiltPosition">
                <description>Position to go for tilt</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="EndPointLeft">
                <description>max left step position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="EndPointRight">
                <description>max right step position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="EndPointUp">
                <description>max up step position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<inputPort id="EndPointDown">
                <description>max down step position</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
			<outputPort id="posX">
				<description>x coordinates of the head</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="posY">
				<description>x coordinates of the head</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="goLeft">
				<description>moves the head to the left</description>
			</eventListenerPort>
			<eventListenerPort id="goRandom">
				<description>moves the head to a random position between the set direction limits</description>
			</eventListenerPort>
			<eventListenerPort id="goRight">
				<description>moves the head to the right</description>
			</eventListenerPort>
			<eventListenerPort id="goUp">
				<description>moves the head to the up</description>
			</eventListenerPort>
			<eventListenerPort id="goDown">
				<description>moves the head to the down</description>
			</eventListenerPort>
			<eventListenerPort id="stopPan">
				<description>stops the pan axis</description>
			</eventListenerPort>
			<eventListenerPort id="stopTilt">
				<description>stops the tilt axis</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stops the pan and tilt axis</description>
			</eventListenerPort>
			<eventListenerPort id="goToPanPosition">
				<description>moves the head to the specified Pan position</description>
			</eventListenerPort>
			<eventListenerPort id="goToTiltPosition">
				<description>moves the head to the specified tilt position</description>
			</eventListenerPort>
			<eventListenerPort id="triggerOn">
				<description>turns the shutter on</description>
			</eventListenerPort>
			<eventListenerPort id="triggerOff">
				<description>turns the shutter off</description>
			</eventListenerPort>
			<eventListenerPort id="enableLimits">
				<description>enables the maximum and minimum movement limits</description>
			</eventListenerPort>
			<eventListenerPort id="disableLimits">
				<description>disable the maximum and minimum movement limits</description>
			</eventListenerPort>
			<eventListenerPort id="disable">
				<description>disable all movements of the skywatcher mount</description>
			</eventListenerPort>
			<eventListenerPort id="enable">
				<description>enable all movements of the skywatcher mount</description>
			</eventListenerPort>
		</events>			
        <properties>
			<property name="SerialPort"
				type="string"
				value="COMX"
				description="Serial Port of the skywatcher device"/>
			<property name="EndPointsActive"
                      type="boolean"
                      value="false"
                      description="defines if the endpoints are used by the mount"/> 
        </properties>

    </componentType>


    <componentType id="asterics.SSVEPFileWriter"
                   canonical_name="com.starlab.component.actuator.ssvepfilewriter.SSVEPFileWriterInstance">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>This plugin writes to a text file the 4 EEG channels along with a software trigger received through the event listener ports</description>
        <ports>
        	<inputPort id="filename">
				<description>Name of the file to be saved</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="channel1">
				<description>Input EEG signal channel 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel2">
				<description>Input EEG signal channel 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel3">
				<description>Input EEG signal channel 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel4">
				<description>Input EEG signal channel 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="StimulationFrequency">
				<description>If a stimulation frequency value is received before the StarStimulation Event the stimulation freqeuncy is appended to the name of the output file to be saved</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="StartTrial">
				<description>An incoming event at this port starts the file writer process </description>
			</eventListenerPort>
			<eventListenerPort id="StopTrial">
				<description>Stops the file writer process</description>
			</eventListenerPort>
			<eventListenerPort id="StartStimulation">
				<description>Sets the trigger channel to the corresponding stimulation frequency value in Hz</description>
			</eventListenerPort>
			<eventListenerPort id="StopStimulation">
				<description>Sets  the trigger channel to zeros </description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="DefaultFileName"
				type="string"
				value="ssveptrial.txt"
				description="The default file name"/>

        </properties>

    </componentType>


    <componentType id="asterics.SSVEPStimulator"
                   canonical_name="eu.asterics.component.actuator.ssvepstimulator.SSVEPStimulatorInstance">
        <type subtype="Brain Computer Interface">actuator</type>
        <singleton>false</singleton>
        <description>SSVEP flickering stimulator</description>
        <ports>
        	<inputPort id="frequency">
				<description>Frequency input for panel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
        </ports>
        <events>
            <eventListenerPort id="startStim">
                <description>On incoming event, flickering starts</description>
            </eventListenerPort>
            <eventListenerPort id="stopStim">
                <description>On incoming event, flickering stops</description>
            </eventListenerPort>
            <eventTriggererPort id="stimPeriodFinished">
				<description>Stimulation period finished</description>
			</eventTriggererPort>
        </events>        
        <properties>
            <property name="onBitmapFile"
                      type="string"
                      value="arrow_up"
                      description="bitmap file for stimulation on-phase"/>
            <property name="offBitmapFile"
                      type="string"
                      value=""
                      description="bitmap file for stimulation off-phase (if not specified, black color is used)"/>
            <property name="xPosition"
                      type="integer"
                      value="100"
                      description="x-position of the flashing icon"/>
            <property name="yPosition"
                      type="integer"
                      value="100"
                      description="y-position of the flashing icon"/>
            <property name="frequency"
                      type="integer"
                      value="10"
                      description="the flickering frequency in Hz"/>
            <property name="msec"
                      type="integer"
                      value="3000"
                      description="the stimulation duration in milliseconds"/>
        </properties>
    </componentType>



    <componentType id="asterics.SyntheticVoice"
                   canonical_name="eu.asterics.component.actuator.syntheticvoice.SyntheticVoiceInstance">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Uses SAPI technology to generate synthetic voice</description>
        <ports>
            <inputPort id="input">
                <description>Text to speak</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <properties>
        	<property name="volume"
                      type="integer"
                      value="100"
                      description="Volume of the voice"/>
            <property name="speed"
                      type="integer"
                      value="0"
                      description="Speed of the voice"/>
            <property name="voice"
                      type="string"
                      value=""
                      description="Name of the voice used."/>
            <property name="xmlTags"
                      type="boolean"
                      value="false"
                      description="Defines if the xml tags in the string are supported"/>
        </properties>
    </componentType>



    <componentType id="asterics.TeensyRCprototype"
                   canonical_name="eu.asterics.component.actuator.teensyrcprototype.TeensyRCprototypeInstance">
        <type subtype="Others">actuator</type>
        <singleton>false</singleton>
        <description>Remote Control for radio-controlled toy models</description>
        <ports>
			<inputPort id="channel1">
				<description>Channel1 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel2">
				<description>Channel2 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel3">
				<description>Channel3 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel4">
				<description>Channel4 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel5">
				<description>Channel5 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel6">
				<description>Channel6 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel7">
				<description>Channel7 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="channel8">
				<description>Channel8 Value (0-1000)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

        </ports>
		<events>

		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.TextArea"
                   canonical_name="eu.asterics.component.actuator.textarea.TextAreaInstance">
        <type subtype="Graphical User Interface">actuator</type>
        <singleton>false</singleton>
        <description>GUI component, which displays text.</description>
        <ports>
			<inputPort id="setText">
				<description>Input string to set the text area</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="appendText">
				<description>Input string to append the text area</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<outputPort id="text">
				<description>outputs the text area on incoming send event</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		    <eventListenerPort id="delete">
                <description>deletes one character</description>
            </eventListenerPort>
		    <eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>
		    <eventListenerPort id="send">
                <description>sends the text</description>
            </eventListenerPort>
		    <eventListenerPort id="sendAndClear">
                <description>sends and clears the text</description>
            </eventListenerPort>
            <eventTriggererPort id="clicked">
                <description>component clicked</description>
            </eventTriggererPort>		
		</events>			
        <properties>
        	<property name="caption"
				type="string"
				value="Text Display"
				description="Caption of the component"/>
			<property name="default"
				type="string"
				value=""
				description="Default Text"/>
			<property name="editable"
				type="boolean"
				value="false"
				description="is the text area editable by the user ?"/>
			<property name="fontSize"
				type="integer"
				value="14"
				description="the font size"/>
			<property name="textColor"
                type="integer"
                value="0"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="color of text"/> 
            <property name="backgroundColor"
                type="integer"
                value="11"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="background color"/> 
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.ToneGenerator"
                   canonical_name="eu.asterics.component.actuator.tonegenerator.ToneGeneratorInstance">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Plays a tone with a given frequency for a given time</description>
        <ports>
			<inputPort id="frequencyLeft">
				<description>frequency of the left channel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="frequencyRight">
				<description>frequency of the right channel</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

        </ports>
		<events>
			<eventListenerPort id="play">
				<description>plays the tone</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stops the tone</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="samplerate"
				type="integer"
				value="44100"
				description="sample rate"/>
			<property name="separate channels"
				type="boolean"
				value="true"
				description="play frequencies on separate channels"/>
			<property name="waveform"
				type="integer"
				value="0"
				combobox="sine//square//sawtooth"
				description="defines the waveform for the generated tone"/>				
        </properties>

    </componentType>


    <componentType id="asterics.Tooltip"
                   canonical_name="eu.asterics.component.actuator.tooltip.TooltipInstance">
        <type subtype="Input Device Emulation">actuator</type>
        <singleton>true</singleton>
        <description>show tooltips next to mouse pointer for triggering various actions</description>
        <ports>
			<inputPort id="x">
				<description>cursor movement x direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="y">
				<description>cursor movement y direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
            <outputPort id="tooltip">
                <description>the filename of the selected tooltip icon.</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
		<events>
			<eventListenerPort id="activateTooltips">
				<description>if available, show tooltip icons and activate tooltip mode</description>
			</eventListenerPort>
			<eventListenerPort id="deactivateTooltips">
				<description>deactivate tooltip mode</description>
			</eventListenerPort>
			<eventListenerPort id="nextTooltip">
				<description>navigates to next tooltip, if tooltips are currently activated</description>
			</eventListenerPort>
			<eventListenerPort id="previousTooltip">
				<description>navigates to previous tooltip, if tooltips are currently activated</description>
			</eventListenerPort>
			<eventListenerPort id="selectTooltip">
				<description>selects the currently shown tooltip and disables tooltip mode afterwards</description>
			</eventListenerPort>

			<eventTriggererPort id="tooltipActivated">
				<description>this event is generated when the tooltip mode is activated</description>
			</eventTriggererPort>
			<eventTriggererPort id="tooltipDeactivated">
				<description>this event is generated when the tooltip mode is deactivated, either by event or by timeout of selectTime</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="initialX"
				type="integer"
				value="-1"
				description="initial position in x-axis, "/>
			<property name="initialY"
				type="integer"
				value="-1"
				description="initial position in y-axis"/>
			<property name="selectTime"
				type="integer"
				value="1000"
				description="if not zero, the click event is created after n millseconds inactivity"/>
			<property name="tooltipFolder"
				type="string"
				value="pictures/tooltips"
				description="folder which contains tooltip icons in .png format"/>
			<property name="tooltipStartIndex"
				type="integer"
				value="3"
				description="start index for first shown tooltip"/>

        </properties>
    </componentType>


    <componentType id="asterics.WavefilePlayer"
                   canonical_name="eu.asterics.component.actuator.wavefileplayer.WavefilePlayerInstance">
        <type subtype="Audio and Voice">actuator</type>
        <singleton>false</singleton>
        <description>Plays .Wav - soundfiles on event or filename reception. </description>
        <ports>
            <inputPort id="wavefileName">
                <description>Filename of wave file to be played (absolute path)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="Start">
                <description>An incoming event starts the wav file playback</description>
                </eventListenerPort>
            <eventListenerPort id="Stop">
                <description>An incoming event stops the wav file playback</description>
            </eventListenerPort>
             <eventListenerPort id="VolumeUp">
                <description>An incoming event puts the volume up</description>
            </eventListenerPort>
             <eventListenerPort id="VolumeDown">
                <description>An incoming event puts the volume down</description>
            </eventListenerPort>
            
        </events>        
        <properties>
            <property name="filename"
                      type="string"
                      value=""
                      getStringList="true"
                      description="Wav file to be played."/>
        </properties>
    </componentType>



    <componentType id="asterics.WriteCSV"
                   canonical_name="eu.asterics.component.actuator.writecsv.WriteCSVInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>Write a csv file</description>
        <ports>
			<inputPort id="Input">
				<description>string input to write in the csv file</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
		<events>
			<eventListenerPort id="StartWriting">
				<description>start to write</description>
			</eventListenerPort>
			<eventListenerPort id="StopWriting">
				<description>stop to write</description>
			</eventListenerPort>
		</events>			
        <properties>
			<property name="FileName"
				type="string"
				value="fileName"
				description="name of the file"/>
			<property name="FilePath" type="string" value="./data/csv" description="path of the file"></property></properties>
    </componentType>


    <componentType id="asterics.WriteEDF"
                   canonical_name="eu.asterics.component.actuator.writeedf.WriteEDFInstance">
        <type subtype="File System">actuator</type>
        <singleton>false</singleton>
        <description>This plugin records the incoming data live into an EDF file (http://www.edfplus.info/specs/edf.html). So it can be viewed in the EDF-Browser (http://www.teuniz.net/edfbrowser/) simulaneously</description>
        <ports>
			<inputPort id="CH1">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH5">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH6">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH7">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH8">
				<description>input port description</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>


        </ports>
		<events>


		</events>			
        <properties>
			<property name="patientID"
				type="string"
				value="undefined"
				description="ID of the recorded subject"></property>
			<property name="FileName"
				type="string"
				value="record"
				description="name of the recording file"/>
			<property name="reSampling"
				type="boolean"
				value="false"
				description="incoming data will be re-sampled according to the set frequency"/>
			<property name="SamplingRateCH1"
				type="integer"
				value="100"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel "/>
			<property name="SamplingRateCH2"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH3"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH4"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH5"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH6"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH7"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="SamplingRateCH8"
				type="integer"
				value="0"
				description="sampling rate for the corresponding channel. Set to zero to deactivate this channel"/>
			<property name="PhysicalMinimumCH1"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH2"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH3"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH4"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH5"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH6"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH7"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMinimumCH8"
				type="integer"
				value="-32768"
				description="physical minimum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH1"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH2"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH3"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH4"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH5"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH6"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH7"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="PhysicalMaximumCH8"
				type="integer"
				value="32767"
				description="physical maximum of the corresponding  channel"/>
			<property name="DigitalMinimumCH1"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH2"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH3"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH4"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH5"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH6"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH7"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMinimumCH8"
				type="integer"
				value="-32768"
				description="digital minimum of the corresponding  channel"/>
			<property name="DigitalMaximumCH1"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH2"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH3"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH4"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH5"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH6"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH7"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
			<property name="DigitalMaximumCH8"
				type="integer"
				value="32767"
				description="digital maximum of the corresponding  channel"/>
		</properties>

    </componentType>


    <componentType id="asterics.AcousticScanning"
                   canonical_name="eu.asterics.component.processor.acousticscanning.AcousticScanningInstance">
        <type subtype="Audio and Voice">processor</type>
        <singleton>false</singleton>
        <description>Acoustic scanning of selection sets (words, letters) for composition of text or commands</description>
        <ports>
			<inputPort id="loadSetFile">
				<description>name of file containing new selectionSets to load</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="selectionPreview">
				<description>preview for word composition</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="selection">
				<description>selected word composition</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="selectionSet1">
				<description>start playback of selection set 1</description>
			</eventListenerPort>
			<eventListenerPort id="selectionSet2">
				<description>start playback of selection set 2</description>
			</eventListenerPort>
			<eventListenerPort id="selectionSet3">
				<description>start playback of selection set 3</description>
			</eventListenerPort>
			<eventListenerPort id="selectionSet4">
				<description>start playback of selection set 4</description>
			</eventListenerPort>
			<eventListenerPort id="selectionSet5">
				<description>start playback of selection set 5</description>
			</eventListenerPort>
			<eventListenerPort id="selectionSet6">
				<description>start playback of selection set 6</description>
			</eventListenerPort>
			<eventListenerPort id="select">
				<description>select currently played item</description>
			</eventListenerPort>

			<eventTriggererPort id="event1">
				<description>event1 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event2">
				<description>event2 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event3">
				<description>event3 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event4">
				<description>event4 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event5">
				<description>event5 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event6">
				<description>event6 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event7">
				<description>event7 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event8">
				<description>event8 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event9">
				<description>event9 has been selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="event10">
				<description>event10 has been selected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="language"
				type="string"
				value="de"
				description="language"/>
			<property name="voice"
				type="string"
				value="voice-cmu-slt-hsmm-5.2"
				description="a german voice"/>
			<property name="delayTime"
				type="integer"
				value="800"
				description="delay between selection items"/>
			<property name="selectionSet1"
				type="string"
				value="a,b,c,d,e,f,g,h"
				description="items of selection set 1"/>
			<property name="selectionSet2"
				type="string"
				value="i,j,k,l,m,n,o,p"
				description="items of selection set 2"/>
			<property name="selectionSet3"
				type="string"
				value="q,r,s,t,u,v,w,x,y,z"
				description="items of selection set 3"/>
			<property name="selectionSet4"
				type="string"
				value="1,2,3,4,5,6,7,8,9,0"
				description="items of selection set 4"/>
			<property name="selectionSet5"
				type="string"
				value="backspace#del,space key#space,enter key#enter,speak preview#speak,commit text#commit,clear all#clear"
				description="items of selection set 5"/>
			<property name="selectionSet6"
				type="string"
				value="event1#event1,event2#event2,speak different text#this text is different"
				description="items of selection set 6"/>

        </properties>

    </componentType>


    <componentType id="asterics.AdjustmentCurve"
                   canonical_name="eu.asterics.component.processor.adjustmentcurve.AdjustmentCurveInstance">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>AdjustmentCurve</description>
        <ports>
            <inputPort id="in">
                <description>Input port for signal</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="curveName">
                <description>Input port for curve to load from file</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output port for modified signal</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
		<events>
			<eventListenerPort id="displayGui">
				<description>display the Graphical User Interface</description>
			</eventListenerPort>
			<eventListenerPort id="hideGui">
				<description>hide the Graphical User Interface</description>
			</eventListenerPort>
			<eventListenerPort id="loadCurve">
				<description>load curve points from file</description>
			</eventListenerPort>
			<eventListenerPort id="saveCurve">
				<description>save curve points to file</description>
			</eventListenerPort>
		</events>			        
        <properties>
            <property name="filename"
                      type="string"
                      value="curve1"
                      description="file to store the curve points"/> 
            <property name="displayGui"
                      type="boolean"
                      value="true"
                      description="if selected, the GUI is displayed "/> 
            <property name="inMin"
                      type="double"
                      value="0"
                      description="minimum input value"/>
            <property name="inMax"
                      type="double"
                      value="1000"
                      description="maximum input value"/>
            <property name="outMin"
                      type="double"
                      value="0"
                      description="minimum output value"/>
            <property name="outMax"
                      type="double"
                      value="1000"
                      description="maximum output value"/>
            <property name="mode"
                      type="integer"
                      value="1"
                      combobox="clip to min and max//autoupdate min and max"
                      description="how to deal with input values exceeding min or max (GUI related only)"/>
            <property name="fontSize"
                      type="integer"
                      value="14"
                      description="font size of dotmeter captions"/>
            <property name="caption"
                      type="string"
                      value="signal mapper"
                      description="caption of the curve window"/>
            <property name="operationMode"
                      type="integer"
                      value="0"
                      combobox="use file and GUI//use property curvePoints (percent values)//use property curvePoints (absolute values)"
                      description="operation mode, either use file and GUI or property curvePoints"/>
            <property name="curvePoints"
                      type="string"
                      value="(10,0),(10,10),(100,100)"
                      description="curvePoints (x/y) for operationMode 'curve points from property'"/>
        </properties>
        <gui>
            <width>5000</width>
            <height>5000</height>
        </gui>
    </componentType>


    <componentType id="asterics.AmazonEchoControl"
                   canonical_name="eu.asterics.component.processor.amazonechocontrol.amazonEchoControlInstance">
        <type subtype="Home Control">processor</type>
        <singleton>false</singleton>
        <description>OpenHAB based Plugin to Control Amazon Echo Dot</description>
        <ports>
			<inputPort id="jsonCommand">
				<description>JSON Command {"ItemSuffix":"itemname","value":"state"}</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="currentState">
				<description>Output of currentState of the current used item</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="currentTitle">
				<description>Output of currentTitle which is played</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="cmdResponse">
				<description>Response with OK or ERROR</description>
				<dataType>string</dataType>
			</outputPort>
		</ports>
			<events>
			<eventListenerPort id="playerPlay">
				<description>turn Player on</description>
			</eventListenerPort>
				<eventListenerPort id="playerPause">
					<description>turn Player off</description>
				</eventListenerPort>
				<eventListenerPort id="playerNext">
					<description>Next Song</description>
				</eventListenerPort>
				<eventListenerPort id="playerPrevious">
				<description>Next Song</description>
			</eventListenerPort>
				<eventListenerPort id="volumeMute">
					<description>Mute Echo Dot</description>
				</eventListenerPort>
				<eventListenerPort id="volume30">
					<description>volume 30%</description>
				</eventListenerPort>
				<eventListenerPort id="weather">
					<description>weather</description>
				</eventListenerPort>
				<eventListenerPort id="tellStory">
					<description>Tell a Story</description>
				</eventListenerPort>
				<eventListenerPort id="traffic">
					<description>traffic</description>
				</eventListenerPort>
				<eventListenerPort id="singASong">
					<description>sing a song</description>
				</eventListenerPort>
				<eventListenerPort id="flashBriefing">
					<description>flashBriefing</description>
				</eventListenerPort>

				<eventTriggererPort id="turnedOn">
					<description>fires if the player is turned on</description>
				</eventTriggererPort>

				<eventTriggererPort id="turnedOff">
					<description>fires if the player is turned off</description>
				</eventTriggererPort>
			</events>


        <properties>
			<property name="updaterate"
				type="integer"
				value="1000"
				description="update rate of the openHAB items (time in milliseconds)"/>
			<property name="hostname"
				type="string"
				value="localhost"
				description="Base address of the openHAB installation"/>
			<property name="port"
				type="string"
				value="8080"
				description="Port for connection (default for openHAB: 8080 for non-HTTPS, 8443 for HTTPS)"/>
			<property name="protocol"
				type="integer"
				value="0"
				combobox="http//https"
				description="Protocol to be used for connection, either http or https"/>
			<property name="lazyCertificates"
				type="boolean"
				value="false"
				description="if true, any SSL certificate validation will be deactivated for the given hostname"/>
			<property name="username"
				type="string"
				value=""
				description="Username, if required by openHAB configuration"/>
			<property name="password"
				type="string"
				value=""
				description="Password, if required by openHAB configuration"/>
				
				


        </properties>

    </componentType>


    <componentType id="asterics.Amplifier"
                   canonical_name="eu.asterics.component.processor.amplifier.AmplifierInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Multiplies input with a proportional factor</description>
        <ports>
            <inputPort id="sigIn">
                <description>Input port of amplifier</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="sigOut">
                <description>Output port of amplifier</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="factor"
                      type="double"
                      value="1"
                      description="The factor to multiply input with"/>
        </properties>
    </componentType>



    <componentType id="asterics.Arduino"
                   canonical_name="eu.asterics.component.processor.arduino.ArduinoInstance">
        <type subtype="Microcontroller Interface">processor</type>
        <singleton>false</singleton>
        <description>Arduino Microcontroller CIM</description>
        <ports>
			<inputPort id="pwm3">
				<description>PWM value for Pin3 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="pwm5">
				<description>PWM value for Pin5 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="pwm6">
				<description>PWM value for Pin6 Analog Output (0-255)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="A0">
				<description>Analog Value Channel 0</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A1">
				<description>Analog Value Channel1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A2">
				<description>Analog Value Channel2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A3">
				<description>Analog Value Channel3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A4">
				<description>Analog Value Channel4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="A5">
				<description>Analog Value Channel5</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="setPin2">
				<description>set Pin2 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin2">
				<description>set Pin2 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin3">
				<description>set Pin3 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin3">
				<description>set Pin3 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin4">
				<description>set Pin4 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin4">
				<description>set Pin4 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin5">
				<description>set Pin5 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin5">
				<description>set Pin5 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin6">
				<description>set Pin6 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin6">
				<description>set Pin6 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin7">
				<description>set Pin7 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin7">
				<description>set Pin7 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin8">
				<description>set Pin8 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin8">
				<description>set Pin8 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin9">
				<description>set Pin9 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin9">
				<description>set Pin9 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin10">
				<description>set Pin10 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin10">
				<description>set Pin10 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin11">
				<description>set Pin11 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin11">
				<description>set Pin11 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin12">
				<description>set Pin12 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin12">
				<description>set Pin12 to 0V</description>
			</eventListenerPort>
			<eventListenerPort id="setPin13">
				<description>set Pin13 to 5V</description>
			</eventListenerPort>
			<eventListenerPort id="clearPin13">
				<description>set Pin13 to 0V</description>
			</eventListenerPort>

			<eventTriggererPort id="pin2ChangedLowToHigh">
				<description>input on Pin2 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin2ChangedHighToLow">
				<description>input on Pin2 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin3ChangedLowToHigh">
				<description>input on Pin3 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin3ChangedHighToLow">
				<description>input on Pin3 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin4ChangedLowToHigh">
				<description>input on Pin4 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin4ChangedHighToLow">
				<description>input on Pin4 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin5ChangedLowToHigh">
				<description>input on Pin5 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin5ChangedHighToLow">
				<description>input on Pin5 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin6ChangedLowToHigh">
				<description>input on Pin6 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin6ChangedHighToLow">
				<description>input on Pin6 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin7ChangedLowToHigh">
				<description>input on Pin7 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin7ChangedHighToLow">
				<description>input on Pin7 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin8ChangedLowToHigh">
				<description>input on Pin8 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin8ChangedHighToLow">
				<description>input on Pin8 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin9ChangedLowToHigh">
				<description>input on Pin9 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin9ChangedHighToLow">
				<description>input on Pin9 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin10ChangedLowToHigh">
				<description>input on Pin10 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin10ChangedHighToLow">
				<description>input on Pin10 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin11ChangedLowToHigh">
				<description>input on Pin11 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin11ChangedHighToLow">
				<description>input on Pin11 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin12ChangedLowToHigh">
				<description>input on Pin12 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin12ChangedHighToLow">
				<description>input on Pin12 changed from high to low</description>
			</eventTriggererPort>
			<eventTriggererPort id="pin13ChangedLowToHigh">
				<description>input on Pin13 changed from low to high </description>
			</eventTriggererPort>
			<eventTriggererPort id="pin13ChangedHighToLow">
				<description>input on Pin13 changed from high to low</description>
			</eventTriggererPort>

		</events>			
        <properties>
            <property name="uniqueID"
              type="string"
              value="not used"
              getStringList="true"
              description="ID (if more than one devices of this kind are connected)"/>
        
			<property name="periodicADCUpdate"
				type="integer"
				value="200"
				description="automatic update of ADC values (time in milliseconds, 0=off)"/>
			<property name="pin2Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 2 Mode"/>
			<property name="pin3Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz"
				description="Pin 3 Mode"/>
			<property name="pin4Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 4 Mode"/>
			<property name="pin5Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz"
				description="Pin 5 Mode"/>
			<property name="pin6Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high//PWM for Servo//PWM 500Hz"
				description="Pin 6 Mode"/>
			<property name="pin7Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 7 Mode"/>
			<property name="pin8Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 8 Mode"/>
			<property name="pin9Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 9 Mode"/>
			<property name="pin10Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 10 Mode"/>
			<property name="pin11Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 11 Mode"/>
			<property name="pin12Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 12 Mode"/>
			<property name="pin13Mode"
				type="integer"
				value="0"
				combobox="not used//input without pullup//input with pullup//output, default low//output, default high"
				description="Pin 13 Mode"/>

        </properties>

    </componentType>


    <componentType id="asterics.AudioSelector"
                   canonical_name="com.starlab.component.processor.audioselector.AudioSelectorInstance">
        <type subtype="Audio and Voice">processor</type>
        <singleton>true</singleton>
        <description>This plug-in manages the audio tracks present in the data/music folder and different external request working as an interface with the wavefileplayer plug-in</description>
        <ports>

			<outputPort id="TrackName">
				<description>Name of the Track to be played</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="StartStop">
				<description>Togle between play stop state</description>
			</eventListenerPort>
			<eventListenerPort id="NextTrack">
				<description>Play next track</description>
			</eventListenerPort>
			<eventListenerPort id="VolumeUp">
				<description>Put the volume up</description>
			</eventListenerPort>
			<eventListenerPort id="VolumeDown">
				<description>Put the volume down</description>
			</eventListenerPort>

			<eventTriggererPort id="Play">
				<description>Play Track Request</description>
			</eventTriggererPort>
			<eventTriggererPort id="Pause">
				<description>Stop Track Request</description>
			</eventTriggererPort>
			<eventTriggererPort id="VolumeUp">
				<description>Volume Up request</description>
			</eventTriggererPort>
			<eventTriggererPort id="VolumeDown">
				<description>Volume Down Request</description>
			</eventTriggererPort>
						<eventTriggererPort id="NextTrack">
				<description>Play Next Track Request</description>
			</eventTriggererPort>

		</events>			
        <properties>

        </properties>

    </componentType>


<componentType id="asterics.Averager"
                   canonical_name="eu.asterics.component.processor.averager.AveragerInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Linked list-based averager or accumulator</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port of averaged/accumulated values</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
    <events>
        <eventListenerPort id="enablePlugin">
            <description>enables the functionality of this plugin</description>
        </eventListenerPort>
        <eventListenerPort id="disablePlugin">
            <description>disables the functionality of this plugin</description>
        </eventListenerPort>
    </events>
    <properties>
            <property name="enabled"
                      type="boolean"
                      value="true"
                      description="if true, the plugin is enabled, if false the plugin does nothing"/>
            <property name="bufferSize"
                      type="integer"
                      value="50"
                      description="The size of the averager's buffer or milliseconds to accumulate"/>
            <property name="mode"
                      type="integer"
                      value="0"
                      combobox="average//averager with integer output//accumulate for n milliseconds//median"
                      description="The averager or accumulator mode"/>
            <property name="autoReenableTime"
                      type="integer"
                      value="0"
                      description="time in ms, after the plugin automatically re-enables itself after being disabled. Set to zero to deactivate this functionality (never auto re-enable)."/>
        </properties>
    </componentType>



    <componentType id="asterics.BasicTRalgorithms"
                   canonical_name="eu.asterics.component.processor.basictralgorithms.BasicTRalgorithmsInstance">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Basic tremor reduction algorithms</description>
        <ports>
			<inputPort id="inputX">
				<description>Mouse X input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputY">
				<description>Mouse Y input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="bufferSize">
				<description>New buffer size value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="maxDistance">
				<description>New max distance value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="factor">
				<description>New factor value </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="outputX">
				<description>Mouse X output port</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputY">
				<description>Mouse Y output port</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="algorithm"
				type="integer"
				value="0"
				combobox="Arithmetic Mean//Outlier-Reduction//Exponential Smoothing"
				description="Algorithm used for tremor reduction"/>
			<property name="eventsType"
				type="integer"
				value="0"
				combobox="Absolute positions//Relative movements"
				description="Type of the mouse events"/>
			<property name="bufferSize"
				type="integer"
				value="20"
				description="Arithmetic Middle algorithm parameter"/>
			<property name="maxDistance"
				type="double"
				value="10"
				description="Outlier-Reduction algorithm parameter"/>
			<property name="factor"
				type="double"
				value="0.5"
				description="Exponential Smoothing algorithm parameter"/>
			<property name="degree"
				type="integer"
				value="0"
				combobox="1//2//3//4"
				description="Degree of Exponential Smoothing algorithm"/>

        </properties>

    </componentType>


    <componentType id="asterics.Benchmark"
                   canonical_name="eu.asterics.component.processor.benchmark.BenchmarkInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Measures incoming data or events per time</description>
        <ports>
            <inputPort id="in">
                <description>Input port for numerics values</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
        	<outputPort id="dataCount">
                <description>Data received per time</description>
                <dataType>integer</dataType>
            </outputPort>
        	<outputPort id="eventCount">
                <description>Number of events per time</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="eventIncrease">
                <description>Received event increases event counter</description>
            </eventListenerPort>
            <eventListenerPort id="resetCounter">
                <description>Resets benchmark counters to zero</description>
            </eventListenerPort>
        </events>         
        <properties>
            <property name="time"
                      type="integer"
                      value="1000"
                      description="The time for counting/update in miliseconds"/>
        </properties>
    </componentType>



    <componentType id="asterics.BlinkChangeDetector"
                   canonical_name="eu.asterics.component.processor.blinkchangedetector.BlinkChangeDetectorInstance">
        <type subtype="Sensor Data and Reasoning">processor</type>
        <singleton>false</singleton>
        <description>The plugin detects blinks, based on both eyes' simultaneous open and closed states, which are indicated by externally fired events, 
and then calculates and outputs blink-related metrics. When firing the eyes' state events, this plugin handles itself, 
whether the state has changed or stayed the same for a while.
A blink's start is defined as both eyes' state having simultaneously changed from open to closed, 
the blink's end is indicated by both eyes' being reopened again. There is an ongoing (a "current") blink as soon as a blink's start is detected.
        
Metrics that can be forwarded and continuously output:
The respective "forwarding" event listeners allow recalculating and forwarding blink rate or blink duration to the output ports on demand. 
Further, blink rate and blink duration are recalculated and sent to the output ports when the eyes' state changes, and if specified via properties, in a certain interval. 
If the eyes' state events are detected but the state has not changed, there is only a recalculation and output when propOutputIntervalMs 
is set and has passed by since the last state-based output. 
        
Note: The duration changes while the eyes are closed and is set to 0 milliseconds when the eyes' state changes to closed. 
It is longest at the first eyesAreOrBecomeOpen event in a row and then set back to 0 milliseconds again till the next eyesAreOrBecomeClosed is detected.
In contrast, the rate changes steadily and is unlikely to ever be 0 Hz again, independently from eyes being closed or open.
A blink is included in the rate calculation as soon as it has started (i.e. the eyes changed to closed).
        
Trends:
Changes in blink rate and blink duration are analysed at certain eyes' states respectively state changes. 
Then the plugin fires events, if certain thresholds are exceeded respectively undercut. 
The detectable trends (rate increase/decrease and duration prolongation/shortening) work with the same basic detection algorithm,
described below, but using trend-specific properties.
The rate trend is analysed, when a blink starts or the output interval leads to recalculation. 
The duration trend is only analysed, when a blink ends (as then the final duration is clear and 
as there cannot be a duration analysis while no blink is going on, either). 
Trend detection is never done when there is a rate or duration recalculation and output due to forwarding events.
        
Basic Trend Detection Algorithm: 
Blink duration trend detection as well as blink rate trend detection allow certain thresholds. 
All of them are optional and specify whether only an increasing, only a decreasing, both or no trends are detectable.
Each calculated value not undercutting the lower and not exceeding the upper threshold is "within range". 
		
If the most recently calculated value is passed on to trend detection, three cases are possible: 
	1) The value exceeds the upper threshold which starts the detection algorithm for a currently ongoing increasing trend.
	2) The value undercuts the lower threshold which starts the detection algorithm for a currently ongoing decreasing trend.
	3) The value is within range which means an ongoing trend is not interrupted but no new trend can be detected either.
If one of the thresholds is not set, the corresponding case cannot appear but does not influence the others. 
If trend detection into one direction is initiated, an opposite trend is always interrupted.
Whenever starting trend detection into one direction, the corresponding internal counter (above upper threshold or below lower threshold)  
is set to 1, then the buffer of earlier calculated values is walked through backwards, i.e. the more recent values first. 
Each value within the range does not affect trend detection, whereas each crossing a threshold in the same direction increases 
the counter and in the opposite direction interrupts this turn of trend detection.
Results:
The algorithm terminates with firing the corresponding trend detection event, as soon as the counter exceeds howManyDurationOutliers (for a duration trend) or howManyRateOutliers (for a rate trend), respectively.
The algorithm terminates with not firing any detection event, if the start of the buffer was reached or if it was interrupted by a value crossing the opposite threshold. 
        </description>
        <ports>
			<outputPort id="blinkDurationMs">
				<description> Outputs the currently recalculated duration in milliseconds (ms) since blink start, whenever the event forwardCurrentBlinkDuration is detected, eyes' state changed to closed, 
or eyesAreOrBecomeOpen or eyesAreOrBecomeClosed are detected and propOutputIntervalMs passed by. 
Outputs 0, if currently the eyes are open (no current blink - indicated by the event eyesAreOrBecomeOpened).
				</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="blinkRateHz">
				<description>Outputs the current recalculated blink rate (in Hertz) since the plugin's start, whenever the event forwardCurrentBlinkRate is detected, 
or when eyesAreOrBecomeOpen or eyesAreOrBecomeClosed are detected and propOutputIntervalMs passed by.
It is possible to make the plugin calculate it for a specified observation period, rather than since model start, this can be set by the property rateObservationPeriodMinutes.
				</description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
        
		<events>
			<eventTriggererPort id="blinkRateIncreased">
				<description>Triggers when the detection of an increasing blink rate trend was positive. 
Also, the properties rateObservationPeriodMinutes and trendsBufferSize are considered and must therefore be set meaningfully (or be disabled).
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="blinkRateDecreased">
				<description>Triggers when the detection of a decreasing blink rate trend was positive. 
Also, the properties rateObservationPeriodMinutes and trendsBufferSize are considered and must therefore be set meaningfully (or be disabled).
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="blinkDurationLonger">
				<description>Triggers when the detection of an increasing blink duration trend was positive.
Also, the property trendsBufferSize is considered and must therefore be set meaningfully (or be disabled).
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="blinkDurationShorter">
				<description>Triggers when the detection of a decreasing blink duration trend was positive.
Also, the property trendsBufferSize is considered and must therefore be set meaningfully (or be disabled).
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="blinkStarts">
				<description>Triggers when a blink's start is detected during the handling of the eyesAreOrBecomeClosed event.</description>
			</eventTriggererPort>
			<eventTriggererPort id="blinkEnds">
				<description>Triggers when a blink's end is detected during the handling of the eyesAreOrBecomeOpen event.</description>
			</eventTriggererPort>
			
			<eventListenerPort id="eyesAreOrBecomeClosed">
				<description>The event represents the closed-state of the eyes and the listener handles, whether it indicates that a new blink has just 
started or eyes have not even been opened in the meantime (no previous eyesAreOrBecomeOpen since last firing this event). 
This listener is responsible for triggering blinkStarts.
Considering propOutputIntervalMs and the current blink state, it recalculates blink duration, blink rate and initiates trend detection for the blink rate.
				</description>
			</eventListenerPort>
			<eventListenerPort id="eyesAreOrBecomeOpen">
				<description>The event represents the open-state of the eyes and the listener handles, whether it indicates that a blink has just 
ended or eyes have not even been closed before (no previous eyesAreOrBecomeClosed since last firing this event). 
This listener is responsible for triggering blinkEnds. 
Considering propOutputIntervalMs and the current blink state, it recalculates blink duration, blink rate and initiates trend detection for the blink rate and blink duration.
				</description>
			</eventListenerPort>
			<eventListenerPort id="forwardCurrentBlinkDuration">
				<description>Sends the time that has passed by since blink start to the output port. 0, if currently not blinking (i.e. if eyes are open). It does not do any threshold evaluations (trend detection) or trigger events!</description>
			</eventListenerPort>
			<eventListenerPort id="forwardCurrentBlinkRate">
				<description>Sends the recalculated blink rate, no matter whether there is currently a blink (i.e. eyes closed) going on. A possible ongoing blink is already included in the rate calculation. It does not do any threshold evaluations or trigger events!</description>
			</eventListenerPort>
		</events>	
				
        <properties>
			<property name="outputIntervalMs"
				type="integer"
				value="-1"
				description="Defines how often the blink rate and duration (also 0, if currently not blinking) are sent to the output ports without the forwarding events being fired. 
This is only relevant, if the eyes' state has not changed as at blink end or blink start the output ports always receive data. 
This property was introduced in order not to send values too often (e.g. in a 1ms-interval, if the source for eyes state detection such as a camera plugin would fire events that often) 
but to adapt the outputs for visualization in an oscilloscope etc. The unit for the interval is milliseconds (ms). 
Rate is always recalculated and sent to the output port when a blink starts, the duration, if a blink starts (0 ms) or ends. 
If those outputs, together with output (recalculation and) forwarding events on demand is sufficient, and no continuous output is desired, it can be disabled by setting 0 or a negative value. 
It is not possible to turn off the outputs, just described for blink starts or ends."/>
			<property name="trendsBufferSize"
				type="integer"
				value="10"
				description="Used for blink rate and blink duration trend detection: Defines how many blink rates and blink durations can be looked back for detecting blink rate and blink duration outliers in trend detection. 
This buffer must not be lower than howManyRateOutliers and howManyDurationOutliers properties, as then the conditions to fire the corresponding events can never be fulfilled! 
Value 0 disables the buffer (only meaningful if the needed number of outliers is 1 or disabled). Negative values are invalid and the default value is used. 
This must not be confused with rateObservationPeriodMinutes which restricts the period for which blinks are considered when calculating the current blink rate."/>
			<property name="threshDurationHighMs"
				type="integer"
				value="500"
				description="Used for blink duration trend detection: Defines the blink duration in milliseconds (ms) above which a blink is detected as an outlier, representing a prolonged blink duration. 
This upper threshold can be disabled by setting it to 0 or a negative value."/>
			<property name="threshDurationLowMs"
				type="integer"
				value="-1"
				description="Used for blink duration trend detection: Defines the blink duration in milliseconds below which a blink is detected as an outlier, representing a shortened blink duration. 
This lower threshold can be disabled by setting it to 0 or a negative value. "/>
			<property name="howManyDurationOutliers"
				type="integer"
				value="3"
				description="Used for blink duration trend detection: Defines how many blink duration outliers must occur in one trend direction within the buffered durations for a duration trend to be detected. 
If a trend shall be detected, as soon as there is one outlier, it must be set to 1, duration trend detection can be disabled by setting it to 0 or a negative value. 
The 1-outlier option especially makes sense when no buffer is used."/>
			<property name="threshRateHighHz"
				type="double"
				value="1"
				description="Used for blink rate trend detection: Defines above which rate in Hertz (Hz) a blink rate must be, in order to count towards an increasing blink rate trend. 
This higher threshold can be disabled by setting it to 0 or a negative value."/>
			<property name="threshRateLowHz"
				type="double"
				value="-1"
				description="Used for blink rate trend detection: Defines below which rate in Hertz (Hz) a blink rate must be, in order to count towards a decreasing blink rate trend. 
This lower threshold can be disabled by setting it to 0 or a negative value."/>
			<property name="howManyRateOutliers"
				type="integer"
				value="3"
				description="Used for blink rate trend detection: Defines how many blink rate outliers must occur in one trend direction within the buffered rates for a rate trend to be detected. 
If a trend shall be detected, as soon as there is one outlier, it must be set to 1, rate trend detection can be disabled by setting it to 0 or a negative value. 
The 1-outlier option especially makes sense when no buffer is used."/>
			<property name="rateObservationPeriodMinutes"
				type="integer"
				value="2"
				description="Used for blink rate calculation and rate trend detection: Defines the length of the observation period for the blink rate in minutes, 
e.g. if 3, the number of blinks during the last 3 minutes (sliding window) is considered when calculating the blink rate for this 3-minutes-period.
If this property is used, no memory control is done, thus it is recommended not to use a period longer than 1 day (1440 minutes). 
If all blinks and the whole time period since model start (memory control restricts it to several hours though) shall be considered, the observation period can be disabled by setting it to 0 or a negative number. 
Note, that the rate for a natural blinking behavior gets steadily flatter then, as time passes by and might not be representative for trend detection."/>
        </properties>
    </componentType>


    <componentType id="asterics.BlinkDetector"
                   canonical_name="com.starlab.component.processor.blinkdetector.BlinkDetectorInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Blink detector. It detects both a simple and a double blinks</description>
        <ports>
			<inputPort id="Input">
				<description>Input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<outputPort id="Filtered Sample">
				<description>Output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Differential">
				<description>Output port 1</description>
				<dataType>double</dataType>
			</outputPort>


        </ports>
		<events>

			<eventTriggererPort id="BlinkDetected">
				<description>Blink detection</description>
			</eventTriggererPort>
			<eventTriggererPort id="DoubleblinkDetected">
				<description>Double blink detection</description>
			</eventTriggererPort>
 
		</events>			
        <properties>
			<property name="SampleRate"
				type="integer"
				value="250"
				description="The signal sample rate"/>
			<property name="maxThreshold"
				type="integer"
				value="10000"
				description="The value used to tune the maximum threshold (for the positive slope of the derivative) that determines whether the signal is behaving as an eye blink"></property>
			<property name="minThreshold" 
				type="integer" 
				value="-10000" 
				description="The value used to tune the minimum threshold (for the negative slope in the derivative) that determines whether the signal is behaving as an eye blink"/>
			<property name="BlinkLength"
				type="integer"
				value="300"
				description="Maximum length of the blink in milliseconds"></property>
			<property name="DoubleBlinkSeparation"
				type="integer"
				value="500"
				description="Maximum separation between blinks to be considered as double blink"/>
		</properties>

    </componentType>


    <componentType id="asterics.BlinkDetectorTrainer"
                   canonical_name="com.starlab.component.processor.blinkdetectortrainer.BlinkDetectorTrainerInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>Blink detector trainer</description>
        <ports>
			<inputPort id="Input">
				<description>EOG signal with blinks</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="Protocol">
				<description>Instruction and results to the GUI</description>
				<dataType>string</dataType>
			</outputPort>

			<outputPort id="Results">
				<description>Parameters to be used in the Blink detector</description>
				<dataType>string</dataType>
			</outputPort>
		</ports>
		<events>
			<eventListenerPort id="StartProtocol">
				<description>Start protocol event listener</description>
			</eventListenerPort>


			<eventListenerPort id="StopProtocol">
				<description>Stop protocol event listener</description>
				</eventListenerPort>
		</events>			
        <properties>
			<property name="language"
				type="integer"
				value="0"
				combobox="English//Spanish"
				description="Instrucion language"/>

			<property name="sampleRate"
				type="integer"
				value="250"
				description="Sample rate of the incoming signal (in samples / second)"/>
		</properties>

    </componentType>


    <componentType id="asterics.ComPort"
                   canonical_name="eu.asterics.component.processor.comport.ComPortInstance">
        <type subtype="Communication">processor</type>
        <singleton>false</singleton>
        <description>interfaces a (virtual) COM Port for data send/receive  operations</description>
        <ports>
			<inputPort id="send">
				<description>data to be sent to COM port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="received">
				<description>data received from COM port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="enablePlugin">
				<description>enables the functionality of this plugin</description>
			</eventListenerPort>
			<eventListenerPort id="disablePlugin">
				<description>disables all functionality of this plugin</description>
			</eventListenerPort>
		</events>
		<properties>
			<property name="enabled"
					  type="boolean"
					  value="true"
					  description="if true, the plugin is enabled, if false the plugin does nothing"/>
			<property name="ComPort"
				type="string"
				value="COM4"
				description="used COM port name"/>
			<property name="BaudRate"
				type="integer"
				value="115200"
				description="baud rate for the COM port communication"/>
			<property name="ReceivedDataType"
				type="integer"
				value="0"
				combobox="string"
				description="data type for incoming (received) values from COM port"/>
			<property name="SendDataType"
				type="integer"
				value="1"
				combobox="string//string with added newline character"
				description="data type for sending values to COM port"/>

        </properties>

    </componentType>


    <componentType id="asterics.ComputeBandpower"
                   canonical_name="com.starlab.component.processor.computebandpower.ComputeBandPowerInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>FFT plus Power In Band processor</description>
        <ports>
            <inputPort id="input">
				<description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="DataLen"
                      type="integer"
					  value="1024"
                      description="Length of the data vector in the input port. Only power of two values are permitted"/>
            <property name="SampleRate"
                      type="integer"
					  value="250"
                      description="Sample rate in sample per seconds"/>
            <property name="StartBandFrequency"
                      type="integer"
					  value="0"
                      description="Start of the band under analysis"/>
            <property name="EndBandFrequency"
                      type="integer"
					  value="125"
                      description="End of the band under analysis"/>
            <property name="PsdComputingRate"
            		  type="integer"
            		  value="100"
            		  description="PSD computing rate as a % of DataLen"/>
       </properties>
    </componentType>



    <componentType id="asterics.ConstantDispatcher"
                   canonical_name="eu.asterics.component.processor.constantdispatcher.ConstantDispatcherInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Send double values from chosen slot</description>
        <ports>
            <outputPort id="output">
                <description>Output value</description>
                <dataType>double</dataType>
            </outputPort>
            <inputPort id="slotDispatch">
                <description>Send the value from the slot defined by number</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="dispatchSlot1">
                <description>Send double value from slot 1</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot2">
                <description>Send double value from slot 2</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot3">
                <description>Send double value from slot 3</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot4">
                <description>Send double value from slot 4</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot5">
                <description>Send double value from slot 5</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot6">
                <description>Send double value from slot 6</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot7">
                <description>Send double value from slot 7</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot8">
                <description>Send double value from slot 8</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot9">
                <description>Send double value from slot 9</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot10">
                <description>Send double value from slot 10</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot11">
                <description>Send double value from slot 11</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot12">
                <description>Send double value from slot 12</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot13">
                <description>Send double value from slot 13</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot14">
                <description>Send double value from slot 14</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot15">
                <description>Send double value from slot 15</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot16">
                <description>Send double value from slot 16</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot17">
                <description>Send double value from slot 17</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot18">
                <description>Send double value from slot 18</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot19">
                <description>Send double value from slot 19</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot20">
                <description>Send double value from slot 20</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchNextSlot">
                <description>Send double value from the next slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchPreviousSlot">
                <description>Send double value from the previous slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlotSeries">
                <description>Send slots values in sequence from slot 1 to slot defined by the Number property with the delay defined by the Delay property</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="number"
                      type="integer"
                      value="20"
                      description="Number of used slots"/>
            <property name="delay"
                      type="integer"
                      value="300"
                      description="Delay in ms used in sequence slot dispatch"/>
            <property name="slot1"
                      type="double"
                      value="0"
                      description="Slot 1 value"/>
            <property name="slot2"
                      type="double"
                      value="0"
                      description="Slot 2 value"/>
            <property name="slot3"
                      type="double"
                      value="0"
                      description="Slot 3 value"/>
            <property name="slot4"
                      type="double"
                      value="0"
                      description="Slot 4 value"/>
            <property name="slot5"
                      type="double"
                      value="0"
                      description="Slot 5 value"/>
            <property name="slot6"
                      type="double"
                      value="0"
                      description="Slot 6 value"/>
            <property name="slot7"
                      type="double"
                      value="0"
                      description="Slot 7 value"/>
            <property name="slot8"
                      type="double"
                      value="0"
                      description="Slot 8 value"/>
            <property name="slot9"
                      type="double"
                      value="0"
                      description="Slot 9 value"/>
            <property name="slot10"
                      type="double"
                      value="0"
                      description="Slot 10 value"/>
            <property name="slot11"
                      type="double"
                      value="0"
                      description="Slot 11 value"/>
            <property name="slot12"
                      type="double"
                      value="0"
                      description="Slot 12 value"/>
            <property name="slot13"
                      type="double"
                      value="0"
                      description="Slot 13 value"/>
            <property name="slot14"
                      type="double"
                      value="0"
                      description="Slot 14 value"/>
            <property name="slot15"
                      type="double"
                      value="0"
                      description="Slot 15 value"/>
            <property name="slot16"
                      type="double"
                      value="0"
                      description="Slot 16 value"/>
            <property name="slot17"
                      type="double"
                      value="0"
                      description="Slot 17 value"/>
            <property name="slot18"
                      type="double"
                      value="0"
                      description="Slot 18 value"/>
            <property name="slot19"
                      type="double"
                      value="0"
                      description="Slot 19 value"/>
            <property name="slot20"
                      type="double"
                      value="0"
                      description="Slot 20 value"/>
            <property name="autosendSlot"
                      type="integer"
                      value="0"
                      description="Number of slot which is automatically sent at start (0=disable)"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.DataType"
                   canonical_name="eu.asterics.component.processor.datatype.DataTypeInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Uses the given outValue and sends it to each output port using the respective data type</description>
        <ports>
			<inputPort id="inByte">
				<description>byte value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>byte</dataType>
			</inputPort>
			<inputPort id="inChar">
				<description>char value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>char</dataType>
			</inputPort>
			<inputPort id="inInteger">
				<description>integer value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inDouble">
				<description>double value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="inString">
				<description>string value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inBoolean">
				<description>boolean value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>boolean</dataType>
			</inputPort>

			<outputPort id="outByte">
				<description>byte value</description>
				<dataType>byte</dataType>
			</outputPort>
			<outputPort id="outChar">
				<description>char value</description>
				<dataType>char</dataType>
			</outputPort>
			<outputPort id="outInteger">
				<description>integer value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outDouble">
				<description>double value</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="outString">
				<description>string value</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="outBoolean">
				<description>boolean value</description>
				<dataType>boolean</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="outValue"
				type="double"
				value="1.1"
				description="Value that is converted and sent to out ports"/>

        </properties>

    </componentType>


    <componentType id="asterics.DateToDouble"
                   canonical_name="eu.asterics.component.processor.datetodouble.DateToDoubleInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts a date string to a Unix epoch timestamp in milliseconds, using the default time zone and a property-defined date format.</description>
        <ports>
			<inputPort id="dateString">
				<description>Date string input to be converted using the date format given by the property. 
The event formatInput is also fired internally whenever this input port receives data.
				</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			
			<outputPort id="timestampUnixMs">
				<description>The converted Unix epoch timestamp in milliseconds.</description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
        
		<events>
			<eventTriggererPort id="dateFormatted">
				<description>Triggers when an output value is available at the output port.</description>
			</eventTriggererPort>
			<eventTriggererPort id="conversionFailed">
				<description>Triggers when a conversion attempt failed (might happen if inputs are missing or do not fit the specified date format).</description>
			</eventTriggererPort>

			<eventListenerPort id="formatInput">
				<description>Initiates conversion for the current input date string, triggers dateFormatted when done.</description>
			</eventListenerPort>
		</events>			
		
        <properties>
			<property name="dateFormat"
				type="string"
				value="dd.MM.yyyy-HH:mm:ss.SSS"
				description="The format of the incoming date string. It is used for conversion into a UNIX timestamp in milliseconds. If invalid (according to java.text.SimpleDateFormat) or null, the default date format is tried. If conversion fails because of missing or invalid input conversionFailed is triggered."/>
        </properties>
    </componentType>


    <componentType id="asterics.Deadzone"
                   canonical_name="eu.asterics.component.processor.deadzone.DeadzoneInstance">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Defines active/passive Zone for x/y values</description>
        <ports>
            <inputPort id="inX">
                <description>Input port for x value</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inY">
                <description>Input port for y value</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="radius">
                <description>Input port for deadzone radius</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="outX">
                <description>Output port for x value</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="outY">
                <description>Output port for y value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="setCenter">
                <description>Incoming Event stores current x/y values as center values</description>
            </eventListenerPort>
            <eventTriggererPort id="enterZone">
                <description>Event fired if zone is entered</description>
            </eventTriggererPort>
            <eventTriggererPort id="exitZone">
                <description>Event fired if zone is left</description>
            </eventTriggererPort>
            
        </events>
        
        <properties>
            <property name="xCenter"
                      type="double"
                      value="0"
                      description="x offset of the center"/>
            <property name="yCenter"
                      type="double"
                      value="0"
                      description="y offset of the center"/>
            <property name="radius"
                      type="double"
                      value="10"
                      description="Radius of the zone"/>
            <property name="mode"
                      type="integer"
                      value="0"
                      combobox="only inner values//only outer values//deadzone"
                      description="Mode of operation (deadzone: starts with 0 when outer zone reached)"/>
        </properties>
    </componentType>



    <componentType id="asterics.Decimation"
                   canonical_name="com.starlab.component.processor.decimation.DecimationInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>true</singleton>
        <description>Decimation processor</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>boolean</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="DownSamplingRatio"
                      type="integer"
                      value="1"
                      description="Down sampling ratio"/>
        </properties>
    </componentType>




    <componentType id="asterics.Delay"
                   canonical_name="eu.asterics.component.processor.delay.DelayInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>delays the incoming signal by a given time</description>
        <ports>
			<inputPort id="in">
				<description>input value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="out">
				<description>delayed output value</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="delay"
				type="integer"
				value="1000"
				description="delay time in milliseconds"/>

        </properties>

    </componentType>


    <componentType id="asterics.Derivative"
                   canonical_name="com.starlab.component.processor.derivative.DerivativeInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Derivative processor</description>
        <ports>
            <inputPort id="input">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="SampleFrequency"
                      type="integer"
                      value="250"
                      description="sample frequency of the input signal"/>
        </properties>
    </componentType>




    <componentType id="asterics.Differentiate"
                   canonical_name="eu.asterics.component.processor.differentiate.DifferentiateInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Differentiate (subtract last input value from input value)</description>
        <ports>
            <inputPort id="in">
                <description>Input port of differentiate</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output result value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>

        <properties>
            <property name="resetValue"
                      type="double"
                      value="0"
                      description="The reset value"/>
        </properties>
    </componentType>



    <componentType id="asterics.Dissimilarity"
                   canonical_name="com.starlab.component.processor.dissimilarity.DissimilarityInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Dissimilarity processor</description>
        <ports>
            <inputPort id="input1">
                <description>Input port 1</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port 2</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="DataLen"
                      type="integer"
					  value="100"
                      description="Length of the of signals over what to calculate the dissimilarity"/>
        </properties>
    </componentType>




    <componentType id="asterics.DoubleToString"
                   canonical_name="eu.asterics.component.processor.doubletostring.DoubleToStringInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts double to string</description>
        <ports>
			<inputPort id="input">
				<description>Double input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port.</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.EventBlock"
                   canonical_name="eu.asterics.component.processor.eventblock.EventBlockInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Pass or block event</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Event input port</description>
			</eventListenerPort>
			<eventListenerPort id="pass">
				<description>Pass events</description>
			</eventListenerPort>
			<eventListenerPort id="block">
				<description>Block events</description>
			</eventListenerPort>
			<eventListenerPort id="change">
				<description>Change the pass/block state to the opposed.</description>
			</eventListenerPort>

			<eventTriggererPort id="output">
				<description>Event output port</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="block"
				type="boolean"
				value="false"
				description="Initial state is block."/>
			<property name="blockAfterEvent"
				type="boolean"
				value="false"
				description="Block the event pass after the event is passed"/>

        </properties>

    </componentType>


    <componentType id="asterics.EventCascade"
                   canonical_name="eu.asterics.component.processor.eventcascade.EventCascadeInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>allows to specify a sequence of events with arbitrary delay times and loops</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="nextEvent">
				<description>fires next event trigger</description>
			</eventListenerPort>
			<eventListenerPort id="previousEvent">
				<description>fires previous event trigger</description>
			</eventListenerPort>
			<eventListenerPort id="startCascade">
				<description>starts event cascade (from current trigger to last trigger)</description>
			</eventListenerPort>
			<eventListenerPort id="stopCascade">
				<description>stops event cascade</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>resets current trigger position to first trigger</description>
			</eventListenerPort>

			<eventTriggererPort id="trigger1">
				<description>trigger slot 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger2">
				<description>trigger slot 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger3">
				<description>trigger slot 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger4">
				<description>trigger slot 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger5">
				<description>trigger slot 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger6">
				<description>trigger slot 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger7">
				<description>trigger slot 7</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger8">
				<description>trigger slot 8</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger9">
				<description>trigger slot 9</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger10">
				<description>trigger slot 10</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger11">
				<description>trigger slot 11</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger12">
				<description>trigger slot 12</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger13">
				<description>trigger slot 13</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger14">
				<description>trigger slot 14</description>
			</eventTriggererPort>
			<eventTriggererPort id="trigger15">
				<description>trigger slot 15</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="activeTriggers"
				type="integer"
				value="4"
				description="Number of active trigger slots"/>
			<property name="loops"
				type="integer"
				value="0"
				description="How many loops (0=endless)"/>
			<property name="autoStart"
				type="boolean"
				value="false"
				description="automatically start event cascade at model startup"/>
			<property name="delayBeforeTrigger1"
				type="integer"
				value="500"
				description="delay time before trigger 1 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger2"
				type="integer"
				value="500"
				description="delay time before trigger 2 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger3"
				type="integer"
				value="500"
				description="delay time before trigger 3 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger4"
				type="integer"
				value="500"
				description="delay time before trigger 4 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger5"
				type="integer"
				value="500"
				description="delay time before trigger 5 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger6"
				type="integer"
				value="500"
				description="delay time before trigger 6 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger7"
				type="integer"
				value="500"
				description="delay time before trigger 7 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger8"
				type="integer"
				value="500"
				description="delay time before trigger 8 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger9"
				type="integer"
				value="500"
				description="delay time before trigger 9 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger10"
				type="integer"
				value="500"
				description="delay time before trigger 10 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger11"
				type="integer"
				value="500"
				description="delay time before trigger 11 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger12"
				type="integer"
				value="500"
				description="delay time before trigger 12 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger13"
				type="integer"
				value="500"
				description="delay time before trigger 13 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger14"
				type="integer"
				value="500"
				description="delay time before trigger 14 will be fired (in milliseconds)"/>
			<property name="delayBeforeTrigger15"
				type="integer"
				value="500"
				description="delay time before trigger 15 will be fired (in milliseconds)"/>

        </properties>

    </componentType>


    <componentType id="asterics.EventCounter"
                   canonical_name="eu.asterics.component.processor.eventcounter.EventCounterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Two-direction event counter</description>
        <ports>
        	<inputPort id="setValue">
                <description>Sets the current value of the event counter to the incoming value</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        	<outputPort id="output">
                <description>Sends the number of events</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="increase">
                <description>Increases the number of events</description>
            </eventListenerPort>
            <eventListenerPort id="decrease">
                <description>Decreases the number of events</description>
            </eventListenerPort>
            <eventListenerPort id="resetToZero">
                <description>Sets the event number to zero</description>
            </eventListenerPort>
            <eventListenerPort id="resetToInitial">
                <description>Sets the event number to the initial value</description>
            </eventListenerPort>
            <eventListenerPort id="sendNow">
                <description>(re-)sends the current counter value to the output port</description>
            </eventListenerPort>
        </events>         
        <properties>
            <property name="mode"
                      type="integer"
                      value="0"
                      description="the mode of operation"
                      combobox="no limit//limit maximum//limit minimum//limit minimum and maximum"/>
            <property name="minValue"
                      type="integer"
                      value="0"
                      description="the minimum value"/>
            <property name="maxValue"
                      type="integer"
                      value="1000"
                      description="the maximum value"/>
            <property name="initialValue"
                      type="integer"
                      value="0"
                      description="the initial value"/>
            <property name="wrapAround"
                      type="boolean"
                      value="false"
                      description="if selected, exceeding the max value will wrap to the min value and vice versa"/>
            <property name="sendInitialValue"
                      type="boolean"
                      value="false"
                      description="if selected, the initial value is sent at startup"/>
            <property name="autoSend"
                      type="boolean"
                      value="true"
                      description="if selected, changing values are sent automatically to the output port"/>
        </properties>
    </componentType>



    <componentType id="asterics.EventDelay"
                   canonical_name="eu.asterics.component.processor.eventdelay.EventDelayInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Delalys events</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Input port for the events</description>
			</eventListenerPort>

			<eventTriggererPort id="output">
				<description>Output port for the events.</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="delay"
				type="integer"
				value="100"
				description="Event delay (ms)"/>

        </properties>

    </componentType>


    <componentType id="asterics.EventDispatcher"
                   canonical_name="eu.asterics.component.processor.eventdispatcher.EventdispatcherInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Translates incoming command strings into events</description>
        <ports>
            <inputPort id="cmd">
                <description>Input port for commands</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
        </ports>
        <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event fired if input cmd = command1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event fired if input cmd = command2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event fired if input cmd = command3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event fired if input cmd = command4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event fired if input cmd = command5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event fired if input cmd = command6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event fired if input cmd = command7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand8">
                <description>Event fired if input cmd = command8</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand9">
                <description>Event fired if input cmd = command9</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand10">
                <description>Event fired if input cmd = command10</description>
            </eventTriggererPort>
        </events>
        
        <properties>
            <property name="command1"
                      type="string"
                      value=""
                      description="Command for event 1"/>
            <property name="command2"
                      type="string"
                      value=""
                      description="Command for event 2"/>
            <property name="command3"
                      type="string"
                      value=""
                      description="Command for event 3"/>
            <property name="command4"
                      type="string"
                      value=""
                      description="Command for event 4"/>
            <property name="command5"
                      type="string"
                      value=""
                      description="Command for event 5"/>
            <property name="command6"
                      type="string"
                      value=""
                      description="Command for event 6"/>
            <property name="command7"
                      type="string"
                      value=""
                      description="Command for event 7"/>
            <property name="command8"
                      type="string"
                      value=""
                      description="Command for event 8"/>
            <property name="command9"
                      type="string"
                      value=""
                      description="Command for event 9"/>
            <property name="command10"
                      type="string"
                      value=""
                      description="Command for event 10"/>
        </properties>
    </componentType>



    <componentType id="asterics.EventFlipFlop"
                   canonical_name="eu.asterics.component.processor.eventflipflop.EventFlipFlopInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Event Flip-flop: First event-in fires event-out1, second event-in fires event-out2, etc.</description>
        <ports/>
        <events>
            <eventListenerPort id="event-in">
                <description>Receive an event and store the state</description>
            </eventListenerPort>
            <eventListenerPort id="selectOut1">
                <description>select state 1 (next event will be sent to out1)</description>
            </eventListenerPort>
            <eventListenerPort id="selectOut2">
                <description>select state 2 (next event will be sent to out2)</description>
            </eventListenerPort>

            <eventTriggererPort id="event-out1">
                <description>Fired, if internal state is 1</description>
            </eventTriggererPort>
            <eventTriggererPort id="event-out2">
                <description>Fired, if internal state is 2</description>
            </eventTriggererPort>

        </events>         
        <properties/>
    </componentType>



    <componentType id="asterics.EventRouter"
                   canonical_name="eu.asterics.component.processor.eventrouter.EventRouterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>routes incoming events to one of 8 event trigger ports</description>
        <ports>
			<inputPort id="routeIndex">
				<description>Select the route (range 0 - 1)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
        </ports>
		<events>
			<eventListenerPort id="eventIn">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="eventIn2">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="eventIn3">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="eventIn4">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="eventIn5">
				<description>the events to be routed</description>
			</eventListenerPort>
			<eventListenerPort id="eventIn6">
				<description>the events to be routed</description>
			</eventListenerPort>
			
			<eventListenerPort id="select1">
				<description>select route 1</description>
			</eventListenerPort>
			<eventListenerPort id="select2">
				<description>select route 2</description>
			</eventListenerPort>
			<eventListenerPort id="select3">
				<description>select route 3</description>
			</eventListenerPort>
			<eventListenerPort id="select4">
				<description>select route 4</description>
			</eventListenerPort>
			<eventListenerPort id="select5">
				<description>select route 5</description>
			</eventListenerPort>
			<eventListenerPort id="select6">
				<description>select route 6</description>
			</eventListenerPort>
			<eventListenerPort id="select7">
				<description>select route 7</description>
			</eventListenerPort>
			<eventListenerPort id="select8">
				<description>select route 8</description>
			</eventListenerPort>

			<eventListenerPort id="selectNext">
				<description>select next route</description>
			</eventListenerPort>

			<eventListenerPort id="selectPrevious">
				<description>select previous route</description>
			</eventListenerPort>


			<eventTriggererPort id="eventOut1">
				<description>output route 1 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2">
				<description>output route 2 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3">
				<description>output route 3 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4">
				<description>output route 4 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5">
				<description>output route 5 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6">
				<description>output route 6 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut7">
				<description>output route 7 for eventIn 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut8">
				<description>output route 8 for eventIn 1</description>
			</eventTriggererPort>

			<eventTriggererPort id="eventOut2_1">
				<description>output route 1 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_2">
				<description>output route 2 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_3">
				<description>output route 3 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_4">
				<description>output route 4 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_5">
				<description>output route 5 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_6">
				<description>output route 6 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_7">
				<description>output route 7 for eventIn 2</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut2_8">
				<description>output route 8 for eventIn 2</description>
			</eventTriggererPort>

			<eventTriggererPort id="eventOut3_1">
				<description>output route 1 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_2">
				<description>output route 2 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_3">
				<description>output route 3 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_4">
				<description>output route 4 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_5">
				<description>output route 5 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_6">
				<description>output route 6 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_7">
				<description>output route 7 for eventIn 3</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut3_8">
				<description>output route 8 for eventIn 3</description>
			</eventTriggererPort>

			<eventTriggererPort id="eventOut4_1">
				<description>output route 1 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_2">
				<description>output route 2 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_3">
				<description>output route 3 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_4">
				<description>output route 4 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_5">
				<description>output route 5 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_6">
				<description>output route 6 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_7">
				<description>output route 7 for eventIn 4</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut4_8">
				<description>output route 8 for eventIn 4</description>
			</eventTriggererPort>
			
			<eventTriggererPort id="eventOut5_1">
				<description>output route 1 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_2">
				<description>output route 2 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_3">
				<description>output route 3 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_4">
				<description>output route 4 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_5">
				<description>output route 5 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_6">
				<description>output route 6 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_7">
				<description>output route 7 for eventIn 5</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut5_8">
				<description>output route 8 for eventIn 5</description>
			</eventTriggererPort>
			
			<eventTriggererPort id="eventOut6_1">
				<description>output route 1 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_2">
				<description>output route 2 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_3">
				<description>output route 3 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_4">
				<description>output route 4 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_5">
				<description>output route 5 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_6">
				<description>output route 6 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_7">
				<description>output route 7 for eventIn 6</description>
			</eventTriggererPort>
			<eventTriggererPort id="eventOut6_8">
				<description>output route 8 for eventIn 6</description>
			</eventTriggererPort>
			
		</events>			
        <properties>
        	<property name="activeRoutes"
				type="integer"
				value="3"
				description="number of active routes (for next / previous events)"/>
        
			<property name="wrapAround"
                      type="boolean"
                      value="true"
                      description="wrap around to first or last route (for next / previous events)"/> 
        </properties>

    </componentType>


    <componentType id="asterics.EventStateMachine"
                   canonical_name="eu.asterics.component.processor.eventstatemachine.EventStateMachineInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Compares incoming events with a given  sequence, fired an event  when the sequence is completed </description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="in1">
				<description>input event type 1</description>
			</eventListenerPort>
			<eventListenerPort id="in2">
				<description>input event type 2</description>
			</eventListenerPort>
			<eventListenerPort id="in3">
				<description>input event type 3</description>
			</eventListenerPort>
			<eventListenerPort id="in4">
				<description>input event type 4</description>
			</eventListenerPort>
			<eventListenerPort id="in5">
				<description>input event type 5</description>
			</eventListenerPort>
			<eventListenerPort id="in6">
				<description>input event type 6</description>
			</eventListenerPort>
			<eventListenerPort id="in7">
				<description>input event type 7</description>
			</eventListenerPort>
			<eventListenerPort id="in8">
				<description>input event type 8</description>
			</eventListenerPort>
			<eventListenerPort id="in9">
				<description>input event type 9</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>reset to initial state</description>
			</eventListenerPort>
			
			<eventTriggererPort id="stateChanged">
				<description>the statemachine switched to a new state</description>
			</eventTriggererPort>
			<eventTriggererPort id="finalStateReached">
				<description>the final state is triggered</description>
			</eventTriggererPort>
			<eventTriggererPort id="stateError">
				<description>the incoming event did not match the sequence</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="stateSequence"
				type="string"
				value="1,2,3,1,2,3"
				description="the desired state sequence "/>
			<property name="stateTiming"
				type="string"
				value="0/2000,x,x,1000/3000"
				description="the min/max time before the next state occurs (in milliseconds). Separated with commas. X indicates if timing is irrelevant for the state change."/>
			<property name="resetOnIncorrectEvent"
				type="boolean"
				value="true"
				description="reset to first state if incoming event does not match "/>
			<property name="skipFirstEvent"
				type="boolean"
				value="false"
				description="if a separation event is used before and after the event patterns, this option allows to remove the initial separation event."/>

        </properties>

    </componentType>


    <componentType id="asterics.FABI"
                   canonical_name="eu.asterics.component.processor.fabi.FABIInstance">
        <type subtype="Microcontroller Interface">processor</type>
        <singleton>false</singleton>
        <description>Plugin for connection to FABI and setting ButtonModes over AsTeRICS -Models</description>
        <ports>
			<inputPort id="ButtonMode">
				<description>Number of ButtonMode</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="SlotSaveName">
				<description>Name of slot to save</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="SlotLoadName">
				<description>Name of slot to load</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="MoveMouseX">
				<description>x moves of mouse in X direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="MoveMouseY">
				<description>x moves of mouse in Y direction</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="Text">
				<description>keyboard write text</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="key">
				<description>key for keypress (more keys at the same time are possible  e.g. "KEY_CTRL KEY_ALT KEY_DELETE")</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="List">
				<description>List of all saved mode names</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="ID">
				<description>identification (e.g. "FABI Version 2.0")</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="ID">
				<description>gets the identification and Version of FABI  and sends it to the Output-Port</description>
			</eventListenerPort>
			<eventListenerPort id="ButtonMode">
				<description>calls the  AT BM num (num is the Input-Port "ButtonMode")</description>
			</eventListenerPort>
			<eventListenerPort id="ClickLeft">
				<description>Click left mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ClickRight">
				<description>Click right mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ClickDoubleLeft">
				<description>Click double with left mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ClickMiddle">
				<description>Click middle mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="PressLeft">
				<description>press/hold the left mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="PressRight">
				<description>press/hold the right mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="PressMiddle">
				<description>press/hold the middle mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ReleaseLeft">
				<description>release the left mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ReleaseRight">
				<description>release the right mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="ReleaseMiddle">
				<description>release the middle mouse button</description>
			</eventListenerPort>
			<eventListenerPort id="WheelUp">
				<description>move mouse wheel up</description>
			</eventListenerPort>
			<eventListenerPort id="WheelDown">
				<description>move mouse wheel down</description>
			</eventListenerPort>
			<eventListenerPort id="MoveMouseX">
				<description>move mouse in x direction</description>
			</eventListenerPort>
			<eventListenerPort id="MoveMouseY">
				<description>move mouse in y direction</description>
			</eventListenerPort>
			<eventListenerPort id="KeyWrite">
				<description>keyboard write text</description>
			</eventListenerPort>
			<eventListenerPort id="KeyPress">
				<description>press/hold one or more keys</description>
			</eventListenerPort>
			<eventListenerPort id="KeyRelease">
				<description>release one or more keys</description>
			</eventListenerPort>
			<eventListenerPort id="KeyReleaseAll">
				<description>release all pressed keys</description>
			</eventListenerPort>
			<eventListenerPort id="Save">
				<description>save settings and current button modes to next free eeprom slot under given name</description>
			</eventListenerPort>
			<eventListenerPort id="Load">
				<description>load button modes from eeprom slot</description>
			</eventListenerPort>
			<eventListenerPort id="List">
				<description>list all saved mode names</description>
			</eventListenerPort>
			<eventListenerPort id="Next">
				<description>next mode will be loaded</description>
			</eventListenerPort>
			<eventListenerPort id="Clear">
				<description>clear eeprom content</description>
			</eventListenerPort>
			<eventListenerPort id="Idle">
				<description>idle command (no operation)</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="Stepsize"
				type="double"
				value="3"
				description="Stepsize of mouse wheel commands"/>
			<property name="COMPort"
				type="integer"
				value="1"
				description="COM-Port of FABI"/>

        </properties>

    </componentType>


    <componentType id="asterics.FabiCronusMax"
                   canonical_name="eu.asterics.component.processor.fabicronusmax.FabiCronusMaxInstance">
        <type subtype="Microcontroller Interface">processor</type>
        <singleton>false</singleton>
        <description>Plugin for the combination of the Fabi and the CronusMax</description>
        <ports>
			<inputPort id="InConsole">
				<description>input of the selected Console</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="InGame">
				<description>input of the selected Game</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="InMode">
				<description>input of the selected Mode</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="OutConsole">
				<description>output of the selected Console</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="OutGame">
				<description>output of the selected Game</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="OutMode">
				<description>output of the selected Mode</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="OutButtons">
				<description>output of the configured buttons, seperated through a comma</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="OutModel">
				<description>output for the next model to load</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="ModeSwitcher">
				<description>Switch between the modes</description>
			</eventListenerPort>
			<eventListenerPort id="GameSwitcher">
				<description>Switch between the games</description>
			</eventListenerPort>
			<eventListenerPort id="ConsoleSwitcher">
				<description>Switch between the consoles</description>
			</eventListenerPort>

			<eventTriggererPort id="Busy">
				<description>Triggered if Fabi is busy</description>
			</eventTriggererPort>
			<eventTriggererPort id="Ready">
				<description>Triggered if Fabi is ready</description>
			</eventTriggererPort>
			<eventTriggererPort id="loadModel">
				<description>Triggered to load new model</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="ComPort"
				type="integer"
				value="1"
				description=""/>
			<property name="ModeFilePath"
				type="string"
				value=".\data\file.csv"
				description="Path to the file with the configuration"/>

        </properties>

    </componentType>


    <componentType id="asterics.Filter"
                   canonical_name="com.starlab.component.processor.filter.FilterInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>This plugin implements a FIR Filter</description>
        <ports>
			<inputPort id="Input">
				<description>The signal to be filtered</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="Output">
				<description>The filtered signal</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SignalPower">
				<description>Signal Power on the band pass</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="Order"
				type="integer"
				value="500"
				description="Order of the filter. It is recommended to use orders around the sampling rate"/>
			<property name="CutoffFreq1"
				type="double"
				value="0"
				description="Cutoff frequecy for low and high pass filter types. In case of band pass filters it is the low cutoff frequency of the band"/>
			<property name="CutoffFreq2"
				type="double"
				value="0"
				description="In case of band pass filters it is the high cutoff frequency of the band"/>
			<property name="SamplingRate"
				type="integer"
				value="500"
				description="Sampling rate of the input signal"/>
			<property name="Type"
				type="integer"
				value="0"
				combobox="Low pass//High pass//Band pass"
				description="Type of filter (low, high or band pass filter)"/>
			<property name="SignalPowerUpdateRate"
				type="integer"
				value="1"
				description="Update ratio for the SignalPower output port. The SignalPower output port provides a new value every time the Output port has provided N values, where N is the value of this property"/>
		    <property name="SignalPowerBufferSize"
				type="integer"
				value="125"
				description="Length of the buffer that keeps the filtered signal that is used to compute the power of the signal"/>
        </properties>

    </componentType>


    <componentType id="asterics.FS20CommandInterpreter"
                   canonical_name="eu.asterics.component.processor.fs20commandinterpreter.FS20CommandInterpreterInstance">
        <type subtype="Home Control">processor</type>
        <singleton>false</singleton>
        <description>Plugin to interprete FS20 commandos (including housecode and sendaddress) and fireing events regarding to the command</description>
        <ports>
			<inputPort id="command">
				<description>The FS 20 command including housecode and sender address</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        </ports>
        
		<events>
			<eventTriggererPort id="off">
				<description>Switch off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel1">
				<description>Light on 6,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel2">
				<description>Light on 12,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel3">
				<description>Light on 18,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel4">
				<description>Light on 25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel5">
				<description>Light on 31,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel6">
				<description>Light on 37,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel7">
				<description>Light on 43,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel8">
				<description>Light on 50%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel9">
				<description>Light on 56,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel10">
				<description>Light on 62,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel11">
				<description>Light on 68,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel12">
				<description>Light on 75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel13">
				<description>Light on 81,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel14">
				<description>Light on 87,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel15">
				<description>Light on 93,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel16">
				<description>Light on 100%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevel">
				<description>Switch on old level</description>
			</eventTriggererPort>
			<eventTriggererPort id="toggle">
				<description>Toggle between off an on, old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUp">
				<description>Dim up for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimDown">
				<description>Dim down for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUpAndDown">
				<description>Dim up, then down, then up etc. </description>
			</eventTriggererPort>
			<eventTriggererPort id="programTimer">
				<description>Start/stop programmable timer</description>
			</eventTriggererPort>
			<eventTriggererPort id="offForTimerThenOldLevel">
				<description>Off for internal timer, than old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOff">
				<description>On for internal timer, than off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenOff">
				<description>On (old value) for internal timer, then off</description>
			</eventTriggererPort>
			<eventTriggererPort id="reset">
				<description>reset to factory default</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOldLevel">
				<description>On for internal timer, then old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenPreviousState">
				<description>On (old value) for internal timer, then old value</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="Housecode"
				type="integer"
				value="11111111"
				description="The housecode"/>
			<property name="Sendaddress"
				type="integer"
				value="1111"
				description="The address of the sender"/>

        </properties>

    </componentType>


    <componentType id="asterics.HRVRmssdFromRR"
                   canonical_name="eu.asterics.component.processor.hrvrmssdfromrr.HRVRmssdFromRRInstance">
        <type subtype="Sensor Data and Reasoning">processor</type>
        <singleton>false</singleton>
        <description>Calculates and outputs the Heart Rate Variability (HRV) in terms of RMSSD (Root Mean Square of Successive Differences) in milliseconds (ms) based on incoming R-R intervals (also in ms). 
A sliding window of the x most recent R-R intervals, x being the property rmssdWindowSize, is used for the calculation, which is first started as soon as there have been x samples since the last reset (or model start).
Calculation and collection of samples can be paused and continued via event listener ports. The output port rmssd only delivers a value, if there is an actual calculation (i.e. currently no pause and enough samples).
		</description>
        <ports>
			<inputPort id="rrInterval">
				<description>R-R interval in ms, i.e. the time interval between the most significant, the highest, peaks (the R-peaks) of 2 consecutive QRS' of an ECG (electrocardiogram).</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="rmssd">
				<description>RMSSD (Root Mean Square of Successive Differences) in ms, calculated from the collected input port signals (R-R intervals in the sliding window).</description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
        
		<events>
			<eventListenerPort id="resetCalculation">
				<description>Discards previous R-R intervals and resets the counter of intervals used for the calculation. Does not influence running or paused states, i.e. if the plugin is currently paused, it will stay paused, otherwise there is a recalculation as soon as there are (again) enough samples.</description>
			</eventListenerPort>
			<eventListenerPort id="pauseCalculation">
				<description>From now on RMSSD is no longer recalculated and no value is sent to the output port but R-R values from the input port continue to be stored (more recent ones overwrite existing ones due to the sliding window). Can be fired in order to wait for more meaningful R-R samples before the next calculation.</description>
			</eventListenerPort>
			<eventListenerPort id="continueCalculation">
				<description>Must be fired after each pauseCalculation to continue RMSSD calculation and sending the result to the output port again.</description>
			</eventListenerPort>
			<eventListenerPort id="pauseComponent">
				<description>Completely pauses the component's activity, i.e. from now on no RMSSD is recalculated and sent to the output port. In addition to a pauseCalculation, no more R-R values from the input port are collected, either.</description>
			</eventListenerPort>
			<eventListenerPort id="continueComponent">
				<description>To be triggered after pauseComponent in order to collect R-R values from the input port again (values aren't reset but progressively overwritten due to the sliding window) and to continue RMSSD calculation and sending the result to the output port.</description>
			</eventListenerPort>
			
			<eventTriggererPort id="rmssdRecalculated">
				<description>Triggers whenever a RMSSD calculation has been finished and the current RMSSD value is available at the output port, i.e. if rmssdWindowSize is 100 it will trigger first when 100 intervals were received and calculation has finished, then after each further interval and calculation completion.</description>
			</eventTriggererPort>
		</events>	
				
        <properties>
        	<property name="rmssdWindowSize"
				type="integer"
				value="100"
				description="The number of R-R intervals that are used for each RMSSD calculation (sliding window). Example: If set to 100, the 100 most recent R-R intervals are taken into consideration and calculation is not started before at least 100 values have been received at the input port. Valid value must be > 1, otherwise it is replaced by the default value."/>
        </properties>
    </componentType>


    <componentType id="asterics.IIRFilter"
                   canonical_name="eu.asterics.component.processor.iirfilter.IIRFilterInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>This plugin provides various filter implementations</description>
        <ports>
			<inputPort id="in">
				<description>incoming signal</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="out">
				<description>filtered signal</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="magnitude">
				<description>magnitude of filtered signal</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="passType"
				type="integer"
				value="0"
				combobox="lowpass//highpass//bandpass//bandstop"
				description="type of filter"/>
			<property name="characteristicType"
				type="integer"
				value="0"
				combobox="butterworth//chebyshev//bessel"
				description="characteristics of filter"/>
			<property name="order"
				type="integer"
				value="4"
				description="filter order (use values lower than 12 to prevent excessive swinging)"/>
			<property name="samplingFrequency"
				type="double"
				value="100"
				description="sampling frequency of signal"/>
			<property name="fc1"
				type="double"
				value="10"
				description="Filter cutoff frequency in Hz for lowpass/highpass,  lower cutoff frequency in Hz for bandpass/bandstop"/>
			<property name="fc2"
				type="double"
				value="20"
				description="Upper cutoff frequency in Hz for bandpass/bandstop,  ignored for lowpass/highpass."/>
			<property name="ripple"
				type="double"
				value="-1"
				description="Passband ripple in dB. Must be negative. Only used for Chebyshev filter, ignored for other filters"/>

        </properties>

    </componentType>


    <componentType id="asterics.Integrate"
                   canonical_name="eu.asterics.component.processor.integrate.IntegrateInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Integration with upper and lower bounds and reset</description>
        <ports>
            <inputPort id="in">
                <description>Input port of integrator</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Output port of integrator</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="reset">
                <description>Event port triggers reset of accumulator</description>
            </eventListenerPort>
        </events>        

        <properties>
            <property name="resetValue"
                      type="double"
                      value="0"
                      description="The reset value for the accumulator"/>
            <property name="upperLimit"
                      type="double"
                      value="50000"
                      description="The upper limit for the accumulator (limits disabled if upper=lower limit)"/>
            <property name="lowerLimit"
                      type="double"
                      value="-50000"
                      description="The lower limit for the accumulator (limits disabled if upper=lower limit)"/>
            <property name="wrapAround"
                      type="boolean"
                      value="false"
                      description="wrap around value if over/underflow ?"/>                       
        </properties>
    </componentType>



    <componentType id="asterics.IntToString"
                   canonical_name="eu.asterics.component.processor.inttostring.IntToStringInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts int to string</description>
        <ports>
			<inputPort id="input">
				<description>Integer input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="hexadecimalOutput"
				type="boolean"
				value="false"
				description="If set, the output data will be hexadecimal"/>

        </properties>

    </componentType>


    <componentType id="asterics.IRMicro"
                   canonical_name="eu.asterics.component.processor.irmicro.IRMicroInstance">
        <type subtype="Home Control">processor</type>
        <singleton>false</singleton>
        <description>Infrared (IR) sender and receiver. Stores recorded IR codes locally</description>
        <ports>
			<inputPort id="sendName">
				<description>Name of IR code to be sent</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="recordName">
				<description>Name of IR code to be recorded</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="receivedName">
				<description>Sends the name of received and already stored IR code</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="receivedHex">
				<description>Sends the received Hex code, even if remote is not recorded to database</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="clearAll">
				<description>Clear all stored IR codes</description>
			</eventListenerPort>
			<eventListenerPort id="clearLast">
				<description>Clear last received/sent IR code from database</description>
			</eventListenerPort>

			<eventTriggererPort id="recordFinish">
				<description>Recording finished</description>
			</eventTriggererPort>
			<eventTriggererPort id="recordTimeout">
				<description>Recording was not finished within timeout</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="ComPort"
				type="string"
				value="COM2"
				description="Select the COM port of the Arduino module"/>
			<property name="Timeout"
				type="integer"
				value="10000"
				description="Timeout of a started recording before firing recordTimeout event"/>

        </properties>

    </componentType>


    <componentType id="asterics.JsonParser"
                   canonical_name="eu.asterics.component.processor.jsonparser.JsonParserInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Receives a JSON (JavaScript Object Notation) string and JSON field name as input and parses it into a JSON object to send one or more field values (several ones, 
only if the keepParsedObject is true and other jsonFieldName input values follow). For details on which errors are handled (by event listeners) and error messages are provided for, 
see description of the error output port and of the event triggers that cause an error port output.
		</description>
        <ports>
			<inputPort id="jsonInputString">
				<description>The JSON-formatted string to be converted into a JSON object.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="jsonFieldName">
				<description>The key/name of the JSON object's field, of which the value shall be sent to the output port.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="keepParsedObject">
				<description>Optional. If connected, it overwrites the keepParsedObject property.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>boolean</dataType>
			</inputPort>

			<outputPort id="jsonFieldValue">
				<description>The value of the JSON field, identified by jsonFieldName, converted to a string (also "" is valid; an explicit null is converted to "null"). 
In case of failure, it will be "" and the error port provides details.
				</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="latestReadFieldName">
				<description>The name of the field whenever an attempt of reading a field value (from the parsed JSON object) has been completed. 
This output can only be "" if the field name was ""/null/unset, in which case the error output port provides details.
				</description>
				<dataType>string</dataType>
			</outputPort>	
			<outputPort id="error">
				<description>Receives a value (different from "") whenever an attempt of input parsing or reading the next field fails. No matter whether it is 
because of a missing JSON object (as needed for reading a field but not previously parsed) or missing or invalid input port values. It receives "" (= no error) 
at the next successful parse or read. Thus it can be used for showing error messages.
				</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>

		<events>
			<eventListenerPort id="parseInput">
				<description>Uses the value at the input port for parsing and sending the desired JSON field (identified by the jsonFieldName input) value to the jsonFieldValue output port.</description>
			</eventListenerPort>
			<eventListenerPort id="readNextField">
				<description>Triggers the next attempt of reading the value of the currently desired JSON field (identified by jsonFieldName) from an already parsed JSON object. 
This event must be used after parseInput (which must be repeated if keepParsedObject is set to false). parseInput, in combination with a well-matched keepParsedObject property/port, 
is to assure that there is already a JSON object from which values can be read when firing readNextField.
				</description>
			</eventListenerPort>
			<eventListenerPort id="rejectParsedObject">
				<description>Unsets the parsed JSON object for the case that keepParsedObject is true (via property or overwritten by input port value) or if it is false but no 
successful reading of any JSON field has happened (see property description).
				</description>
			</eventListenerPort>

			<eventTriggererPort id="inputParsed">
				<description>Triggers to indicate that the plugin is done with parsing the JSON input (string) into a JSON object.</description>
			</eventTriggererPort>
			<eventTriggererPort id="fieldValueAvailable">
				<description>Triggers when the value of the desired JSON field (specified by the input jsonFieldName and now identified by the output latestReadFieldName) 
is available at the jsonFieldValue output port.
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="fieldValueNotFound">
				<description>Triggers when trying to read a field but when there is no field with the name given at the input port within the parsed JSON object (string). 
Sends a message to the error output.
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="fieldValueInvalidFormat">
				<description>Triggers when trying to read a field but when there has been an error returning the value of the desired JSON field. 
The value has a wrong/an invalid format but is found (i.e. the key is existent). This is the case whenever a found value cannot be parsed to a string 
(which is the output format at the output port jsonFieldValue). Sends a message to the error output.
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="invalidInputFormat">
				<description>Triggers when trying to parse the JSON input string but when it cannot be parsed into a JSON object (to later read values from). 
Sends a message to the error output.
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="missingJsonInput">
				<description>When trying to parse the JSON input string but when there has been no value at the input port jsonInputString. 
Sends a message to the error output.
				</description>
			</eventTriggererPort>
			<eventTriggererPort id="missingFieldName">
				<description>Triggers when trying to read from an already parsed JSON object but when there has been no value at the input port jsonFieldName. 
Sends a message to the error output.
				</description>
			</eventTriggererPort>
		</events>			

        <properties>
			<property name="keepParsedObject"
				type="boolean"
				value="true"
				description="Specifies, whether to keep the parsed JSON object (the one resulting from the latest parsing of jsonInputString) until the next value appears at the jsonInputString port - to read further fields in the meanwhile. 
Usage Note: if a field reading attempt fails, a maybe stored parsed JSON object will never be unset, independently from the value of this property. This is to assure that each JSON input delivers at least one field value or otherwise is replaced by the next JSON input. 
In order to force the parsed JSON object's rejection, rejectParsedObject must be triggered."/>
        </properties>
    </componentType>


    <componentType id="asterics.MathEvaluator"
                   canonical_name="eu.asterics.component.processor.mathevaluator.MathEvaluatorInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Mathematical expression evaluator</description>
        <ports>
            <inputPort id="inA">
                <description>Input port A</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inB">
                <description>Input port B</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inC">
                <description>Input port C</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="inD">
                <description>Input port D</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
            <outputPort id="out">
                <description>Output port for result</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="expression"
                      type="string"
                      value="a+b"
                      description="Mathematical expression containing the variables a, b, c and d"/>
        </properties>
    </componentType>



    <componentType id="asterics.MinMax"
                   canonical_name="eu.asterics.component.processor.minmax.MinmaxInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Remember minimum and maximum of a signal</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="max">
                <description>Output of maximum value</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="min">
                <description>Output of minimum value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="reset">
                <description>Reset min and max to default values on incoming event</description>
            </eventListenerPort>
        </events>  
        <properties>
            <property name="defaultMin"
                      type="double"
                      value="0"
                      description="The default value for minimum"/>
            <property name="defaultMax"
                      type="double"
                      value="10"
                      description="The default value for maximum"/>
        </properties>      
    </componentType>


    <componentType id="asterics.MotionAnalysis"
                   canonical_name="eu.asterics.component.processor.motionanalysis.MotionAnalysisInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Display to visualize and compare data form different sensors</description>
        <ports>
        	<inputPort id="channel1">
                <description>Input port 1 of MotionAnalysis</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>  
            </inputPort>
            <inputPort id="channel2">
                <description>Input port 2 of MotionAnalysis</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="channel3">
                <description>Input port 3 of MotionAnalysis</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="channel4">
                <description>Input port 4 of MotionAnalysis</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
            <outputPort id="result">
				<description>Gives the result of an exercise as a string</description>
				<dataType>string</dataType>
			</outputPort>
            <outputPort id="percent">
				<description>Percent of the exercise to show a video simultaneously</description>
				<dataType>double</dataType>
			</outputPort>
		</ports>
		<events>
			<eventListenerPort id="Start">
				<description>Starts the Exercise</description>
			</eventListenerPort>
			<eventListenerPort id="Stop">
				<description>Stops the Exercise</description>
			</eventListenerPort>
			<eventListenerPort id="Save">
				<description>Starts to save the next exercise</description>
			</eventListenerPort>
			<eventListenerPort id="Stopsave">
				<description>Stop to save the exercise</description>
			</eventListenerPort>
			<eventListenerPort id="Load">
				<description>Loads an Exercise</description>
			</eventListenerPort>
			
			<eventTriggererPort id="Inrange">
                <description>When the exercise is in range of the percentage</description>
            </eventTriggererPort>
		</events>			
        <properties>
			<property name="displayBuffer"
                      type="integer"
                      value="3"
                      description="How many values will be buffered before redraw of oscilloscope"/>
            <property name="drawingMode"
                      type="integer"
                      value="0"
                      combobox="autoupdate min and max//crop to min and max"
                      description="drawing mode of the oscilloscope"/> 
            <property name="displayMode"
                      type="integer"
                      value="0"
                      combobox="redraw on incoming sample//draw periodically"
                      description="display update mode of the oscilloscope"/> 
            <property name="drawingInterval"
                      type="integer"
                      value="100"
                      description="draw interval in milliseconds (if periodic drawing is used)"/> 
            <property name="min"
                      type="double"
                      value="-100"
                      description="minimum display value (if crop drawing mode is used)"/>
            <property name="max"
                      type="double"
                      value="100"
                      description="maximum display value (if crop drawing mode is used)"/>
            <property name="gridColor"
                      type="integer"
                      value="0"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of the grid"/> 
            <property name="loadchannelColor"
                      type="integer"
                      value="1"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of channel 1 signal"/> 
            <property name="drawchannelColor"
                      type="integer"
                      value="10"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="color of channel 1 signal"/>
            <property name="backgroundColor"
                      type="integer"
                      value="11"
                      combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                      description="background color"/>                 
            <property name="fontSize"
                      type="integer"
                      value="14"
                      description="font size of oscilloscope captions"/>
            <property name="caption"
                      type="string"
                      value="Exercise"
                      description="caption of the Exercise"/> 
            <property name="filename"
                      type="string"
                      value="Example"
                      description="name of the file"/>
            <property name="filepath"
                      type="string"
                      value="./data/processor.motionanalysis/"
                      description="path of the file"/>
            <property name="diviation"
                      type="double"
                      value="20"
                      description="percent of deviation which is allowed to eleminate noise"/>     
            <property name="limitation"
                      type="double"
                      value="80"
                      description="percent of allowed values do raise an event"/> 
        </properties>
		<gui>
			<width>6000</width>
			<height>3000</height>
		</gui>

    </componentType>


    <componentType id="asterics.MultiSource"
                   canonical_name="eu.asterics.component.processor.multisource.MultiSourceInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Passes signal from input ports to the one output port</description>
        <ports>
			<inputPort id="input1">
				<description>input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.MultiSourceString"
                   canonical_name="eu.asterics.component.processor.multisourcestring.MultiSourceStringInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Passes strings from input ports to the one output port</description>
        <ports>
			<inputPort id="input1">
				<description>input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>input port 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>input port 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>input port 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.NeuralNetworkLoader"
                   canonical_name="eu.asterics.component.processor.neuralnetworkloader.NeuralNetworkLoaderInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Basic Neural Network</description>
        <ports>
			<inputPort id="input1">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input2">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input3">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input4">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input5">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input6">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input7">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input8">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input9">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input10">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input11">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input12">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input13">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input14">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input15">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input16">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input17">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input18">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input19">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input20">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input21">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input22">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input23">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input24">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input25">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input26">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input27">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input28">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input29">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input30">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input31">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="input32">
				<description>Input port 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			

			<outputPort id="output1">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output2">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output3">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output4">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output5">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output6">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output7">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output8">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output9">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output10">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output11">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output12">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output13">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output14">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output15">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output16">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output17">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output18">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output19">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output20">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output21">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output22">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output23">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output24">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output25">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output26">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output27">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output28">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output29">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output30">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output31">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="output32">
				<description>output port 1</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="filePath"
				type="string"
				value=""
				description="Path of the EG file"/>
				
        </properties>

    </componentType>


    <componentType id="asterics.OneEventManyActions"
                   canonical_name="eu.asterics.component.processor.oneeventmanyactions.OneEventManyActionsInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>One input event raises many actions</description>
        <ports>


        </ports>
		<events>
			<eventListenerPort id="input">
				<description>Action event</description>
			</eventListenerPort>
			<eventListenerPort id="inputOff">
				<description>Select action used in mode 1</description>
			</eventListenerPort>

			<eventTriggererPort id="action1">
				<description>The action 1 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown1">
				<description>Show action 1 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action2">
				<description>The action 2 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown2">
				<description>Show action 2 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action3">
				<description>The action 3 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown3">
				<description>Show action 3 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action4">
				<description>The action 4 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown4">
				<description>Show action 4 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action5">
				<description>The action 5 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown5">
				<description>Show action 5 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action6">
				<description>The action 6 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown6">
				<description>Show action 6 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action7">
				<description>The action 7 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown7">
				<description>Show action 7 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action8">
				<description>The action 8 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown8">
				<description>Show action 8 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action9">
				<description>The action 9 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown9">
				<description>Show action 9 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="action10">
				<description>The action 10 event</description>
			</eventTriggererPort>
			<eventTriggererPort id="actionShown10">
				<description>Show action 10 event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="actionsNumber"
				type="integer"
				value="2"
				combobox="2//3//4//5//6//7//8//9//10"
				description="How many actions will be used."/>
			<property name="mode"
				type="integer"
				value="0"
				combobox="Mode1//Mode2//Mode3"
				description="Component mode"/>
			<property name="delay"
				type="integer"
				value="2000"
				description="The action delay [ms]"/>

        </properties>

    </componentType>


    <componentType id="asterics.openHAB"
                   canonical_name="eu.asterics.component.processor.openhab.openHABInstance">
        <type subtype="Home Control">processor</type>
        <singleton>false</singleton>
        <description>OpenHAB Binding - Interfacing to the openHAB home automation suite</description>
        <ports>
			<inputPort id="item1in">
				<description>Value for item1 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="item2in">
				<description>Value for item2 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="item3in">
				<description>Value for item3 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="item4in">
				<description>Value for item4 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="item5in">
				<description>Value for item5 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="item6in">
				<description>Value for item6 (name is set via property)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="actionString">
				<description>Action string to set any item's state</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="item1">
				<description>Output of item1 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="item2">
				<description>Output of item2 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="item3">
				<description>Output of item3 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="item4">
				<description>Output of item4 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="item5">
				<description>Output of item5 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="item6">
				<description>Output of item6 (name is set via property)</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventTriggererPort id="item1changed">
				<description>State of item1 (name is set via property) changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="item2changed">
				<description>State of item2 (name is set via property) changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="item3changed">
				<description>State of item3 (name is set via property) changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="item4changed">
				<description>State of item4 (name is set via property) changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="item5changed">
				<description>State of item5 (name is set via property) changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="item6changed">
				<description>State of item6 (name is set via property) changed</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="updaterate"
				type="integer"
				value="1000"
				description="update rate of the openHAB items (time in milliseconds)"/>
			<property name="hostname"
				type="string"
				value="localhost"
				description="Base address of the openHAB installation"/>
			<property name="port"
				type="string"
				value="8080"
				description="Port for connection (default for openHAB: 8080 for non-HTTPS, 8443 for HTTPS)"/>
			<property name="protocol"
				type="integer"
				value="0"
				combobox="http//https"
				description="Protocol to be used for connection, either http or https"/>
			<property name="lazyCertificates"
				type="boolean"
				value="false"
				description="if true, any SSL certificate validation will be deactivated for the given hostname"/>
			<property name="username"
				type="string"
				value=""
				description="Username, if required by openHAB configuration"/>
			<property name="password"
				type="string"
				value=""
				description="Password, if required by openHAB configuration"/>
				
				
			<property name="item1in"
				type="string"
				value=""
				description="Item name 1 for input port (set the state)"/>
			<property name="item2in"
				type="string"
				value=""
				description="Item name 2 for input port (set the state)"/>
			<property name="item3in"
				type="string"
				value=""
				description="Item name 3 for input port (set the state)"/>
			<property name="item4in"
				type="string"
				value=""
				description="Item name 4 for input port (set the state)"/>
			<property name="item5in"
				type="string"
				value=""
				description="Item name 5 for input port (set the state)"/>
			<property name="item6in"
				type="string"
				value=""
				description="Item name 6 for input port (set the state)"/>
			
			<property name="item1out"
				type="string"
				value=""
				description="Item name 1 for output port (get the state)"/>
			<property name="item2out"
				type="string"
				value=""
				description="Item name 2 for output port (get the state)"/>
			<property name="item3out"
				type="string"
				value=""
				description="Item name 3 for output port (get the state)"/>
			<property name="item4out"
				type="string"
				value=""
				description="Item name 4 for output port (get the state)"/>
			<property name="item5out"
				type="string"
				value=""
				description="Item name 5 for output port (get the state)"/>
			<property name="item6out"
				type="string"
				value=""
				description="Item name 6 for output port (get the state)"/>
				
			<property name="item1event"
				type="string"
				value=""
				description="Item name 1 for event output port (get a state change)"/>	
			<property name="item2event"
				type="string"
				value=""
				description="Item name 2 for event output port (get a state change)"/>	
			<property name="item3event"
				type="string"
				value=""
				description="Item name 3 for event output port (get a state change)"/>	
			<property name="item4event"
				type="string"
				value=""
				description="Item name 4 for event output port (get a state change)"/>	
			<property name="item5event"
				type="string"
				value=""
				description="Item name 5 for event output port (get a state change)"/>	
			<property name="item6event"
				type="string"
				value=""
				description="Item name 6 for event output port (get a state change)"/>
        </properties>

    </componentType>


    <componentType id="asterics.OscGestureFollower"
                   canonical_name="eu.asterics.component.processor.oscgesturefollower.OscGestureFollowerInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>false</singleton>
        <description>Connects the external GestureFollower tool with ARE</description>
        <ports>
			<inputPort id="CH1">
				<description>Data Stream 1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH2">
				<description>Data Stream 2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH3">
				<description>Data Stream 3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="CH4">
				<description>Data Stream 4</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="likeliest">
				<description>Index of the likeliest gesture</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="stop">
				<description>Stop the following process.</description>
			</eventListenerPort>
			<eventListenerPort id="stoplearn">
				<description>Stop the stop the learning process</description>
			</eventListenerPort>
			<eventListenerPort id="learn1">
				<description>Start learning phrase 1</description>
			</eventListenerPort>
			<eventListenerPort id="learn2">
				<description>Start learning phrase 2</description>
			</eventListenerPort>
			<eventListenerPort id="learn3">
				<description>Start learning phrase 3</description>
			</eventListenerPort>
			<eventListenerPort id="learn4">
				<description>Start learning phrase 4</description>
			</eventListenerPort>
			<eventListenerPort id="learn5">
				<description>Start learning phrase 5</description>
			</eventListenerPort>
			<eventListenerPort id="clear">
				<description>Start learning phrase 6</description>
			</eventListenerPort>
			<eventListenerPort id="follow">
				<description>In the 'follow' mode the incoming phrase is compared with the recorded pharse</description>
			</eventListenerPort>
			<eventListenerPort id="load">
				<description>load gestures from file</description>
			</eventListenerPort>
			<eventListenerPort id="save">
				<description>save learned gestures to file</description>
			</eventListenerPort>
		</events>			
        <properties>
				<property name="InPort"
				type="integer"
				value="8000"
				description="property description"/>
				<property name="OutPort"
				type="integer"
				value="9000"
				description="property description"/>
				<property name="filename"
				type="string"
				value="nodding.mubu"
				getStringList="true"
				description="filename for loading or storing gesture data"/>
        </properties>

    </componentType>


    <componentType id="OskaInternalScanning"
                   canonical_name="eu.asterics.component.processor.oska.OskaInstance">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="increaseScanspeed">
                <description>Increases scan speed of OSKA native scanning</description>
            </eventListenerPort>
            <eventListenerPort id="decreaseScanspeed">
                <description>Decreases scan speed of OSKA native scanning</description>
            </eventListenerPort>

            <eventListenerPort id="pressSwitch1">
                <description>Event port triggers sending of "switchpress:0" to OSKA</description>
            </eventListenerPort>
            <eventListenerPort id="pressSwitch2">
                <description>Event port triggers sending of "switchpress:1" to OSKA</description>
            </eventListenerPort>
            
            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
        </events>        
        
        <properties>
            <property name="port"
                      type="integer"
                      value="4546"
                      description="The port that OSKA should connect to"/>
            <property name="title"
                      type="string"
                      value="OSKA keyboard"
                      description="The title to be displayed in the OSKA title bar"/>
            <property name="oskaPath"
                      type="string"
                      value="..\oska\start keyboard.exe"
                      description="Path to OSKA executable"/>
            <property name="keyboardPath"
                      type="string"
                      value="keyboards\default.xml"
                      getStringList="true"
                      description="Path to OSKA startup keyboard"/>
            <property name="scanSpeed"
                      type="integer"
                      value="1"
                      description="Scanning speed for row/column scan"/>
            <property name="highlightStyle"
                      type="integer"
                      combobox="KeyBorders//InvertKeys//BlockBehindKeys"
                      value="0"
                      description="Highlight style for OSKA"/>
            <property name="settingsFile"
                      type="string"
                      getStringList="true"
                      value="settings\internal_tcp.kst"
                      description="File name of settings file"/>
            <property name="windowDecorated"
                      type="boolean"
                      value="true"
                      description="If true, OSKA will be displayed with a decorated window, if false without decorations"/>
            <property name="resizeEnabled"
                      type="boolean"
                      value="false"
                      description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size"/>
            
        	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
        	    
	</componentType>

    <componentType id="OskaExternalScanning1D"
                   canonical_name="eu.asterics.component.processor.oska.OskaInstance">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

            <inputPort id="posKey">
                <description>Position of highlighted row, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>    
            

         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="switch">
                <description>Event port triggers sending of "press" to OSKA</description>
            </eventListenerPort>
            
            <eventListenerPort id="highlightNext">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrev">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
        </events>        
        
        <properties>
            <property name="port"
                      type="integer"
                      value="4546"
                      description="The port that OSKA should connect to"/>
            <property name="title"
                      type="string"
                      value="OSKA keyboard"
                      description="The title to be displayed in the OSKA title bar"/>
            <property name="oskaPath"
                      type="string"
                      value="..\oska\start keyboard.exe"
                      description="Path to OSKA executable"/>
            <property name="keyboardPath"
                      type="string"
                      getStringList="true"
                      value="keyboards\default.xml"
                      description="Path to OSKA startup keyboard"/>
            <property name="highlightStyle"
                      type="integer"
                      combobox="KeyBorders//InvertKeys//BlockBehindKeys"
                      value="0"
                      description="Highlight style for OSKA"/>
            <property name="settingsFile"
                      type="string"
                      value="settings\default.kst"
                      getStringList="true"
                      description="File name of settings file"/>
            <property name="windowDecorated"
                      type="boolean"
                      value="true"
                      description="If true, OSKA will be displayed with a decorated window, if false without decorations"/>
            <property name="eventScanningEnabled"
                      type="boolean"
                      value="true"
                      description="If true, the component will react to input on the event listener ports that move the highlighter"/>
            <property name="valueScanningEnabled"
                      type="boolean"
                      value="true"
                      description="If true, the component will react to input on the input ports that move the highlighter"/>
            <property name="inputRange"
                      type="integer"
                      combobox="float (0.0-1.0)//integer (0, 1, 2, ...)"
                      value="0"
                      description="Declares whether input port will interpret input as the position mapped to a float value between 0.0 and 1.0 or if the input should interpreted as an integer index in the grid "/>
            <property name="resizeEnabled"
                      type="boolean"
                      value="false"
                      description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size"/>
         	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
	</componentType>

    <componentType id="OskaExternalScanning2D"
                   canonical_name="eu.asterics.component.processor.oska.OskaInstance">
        <type subtype="OSKA">processor</type>
        <singleton>false</singleton>
        <description>Component communicating with OSKA</description>
        <ports>

            <inputPort id="posColumn">
                <description>Position of highlighted column, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <inputPort id="posRow">
                <description>Position of highlighted row, takes values between 0.0 and 1.0, over-/underruns will be clipped</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            
         	<outputPort id="action">
                <description>Outputs action string of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
         	<outputPort id="keycodes">
                <description>Outputs keycode(s) of the selected OSKA cell</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="press">
                <description>Event port triggers sending of "press" to OSKA</description>
            </eventListenerPort>
            
            <eventListenerPort id="highlightNextX">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrevX">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightNextY">
                <description>Event triggers highlighting of next item in current scan mode </description>
            </eventListenerPort>

            <eventListenerPort id="highlightPrevY">
                <description>Event triggers highlighting of previous item in current scan mode </description>
            </eventListenerPort>

            <eventTriggererPort id="eventOut1">
                <description>Triggered by incoming command @OSKA:event,1</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut2">
                <description>Triggered by incoming command @OSKA:event,2</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut3">
                <description>Triggered by incoming command @OSKA:event,3</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut4">
                <description>Triggered by incoming command @OSKA:event,4</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut5">
                <description>Triggered by incoming command @OSKA:event,5</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut6">
                <description>Triggered by incoming command @OSKA:event,6</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut7">
                <description>Triggered by incoming command @OSKA:event,7</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut8">
                <description>Triggered by incoming command @OSKA:event,8</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut9">
                <description>Triggered by incoming command @OSKA:event,9</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventOut10">
                <description>Triggered by incoming command @OSKA:event,10</description>
            </eventTriggererPort>
            
        </events>        
        
        <properties>
            <property name="port"
                      type="integer"
                      value="4546"
                      description="The port that OSKA should connect to"/>
            <property name="title"
                      type="string"
                      value="OSKA keyboard"
                      description="The title to be displayed in the OSKA title bar"/>
            <property name="oskaPath"
                      type="string"
                      value="..\oska\start keyboard.exe"
                      description="Path to OSKA executable"/>
            <property name="keyboardPath"
                      type="string"
                      value="keyboards\default.xml"
                      getStringList="true"
                      description="Path to OSKA startup keyboard"/>
            <property name="highlightStyle"
                      type="integer"
                      combobox="KeyBorders//InvertKeys//BlockBehindKeys"
                      value="0"
                      description="Highlight style for OSKA"/>
            <property name="highlightResetPosition"
                      type="integer"
                      combobox="Disabled//Top left//Center//Bottom right"
                      value="0"
                      description="Declares where highlighting should be placed on a press of a key"/>
            <property name="settingsFile"
                      type="string"
                      getStringList="true"
                      value="settings\default.kst"
                      description="File name of settings file"/>
            <property name="windowDecorated"
                      type="boolean"
                      value="true"
                      description="If true, OSKA will be displayed with a decorated window, if false without decorations"/>
            <property name="eventScanningEnabled"
                      type="boolean"
                      value="true"
                      description="If true, the component will react to input on the event listener ports that move the highlighter"/>
            <property name="valueScanningEnabled"
                      type="boolean"
                      value="true"
                      description="If true, the component will react to input on the input ports that move the highlighter"/>
            <property name="inputRange"
                      type="integer"
                      combobox="float (0.0-1.0)//integer (0, 1, 2, ...)"
                      value="0"
                      description="Declares whether input port will interpret input as the position mapped to a float value between 0.0 and 1.0 or if the input should interpreted as an integer index in the grid "/>
            <property name="resizeEnabled"
                      type="boolean"
                      value="false"
                      description="If true, the keyboard will resize according to settings in model, otherwise it will keep its original size"/>
        	</properties>
        	
        	<gui IsExternalGUIElement="true">
            <width>10000</width>
            <height>8000</height>
        	</gui>        
	</componentType>






    <componentType id="asterics.PathMultiplexer"
                   canonical_name="eu.asterics.component.processor.pathmultiplexer.PathmultiplexerInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Path Multiplexer forwards signal from the selected input to the output</description>
        <ports>
            <inputPort id="input1">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input3">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="input4">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="output">
                <description>Output port</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="passPort1">
                <description>passes data from the port 1</description>
            </eventListenerPort>
            <eventListenerPort id="passPort2">
                <description>passes data from the port 2</description>
            </eventListenerPort>
            <eventListenerPort id="passPort3">
                <description>passes data from the port 3</description>
            </eventListenerPort>
            <eventListenerPort id="passPort4">
                <description>passes data from the port 4</description>
            </eventListenerPort>
            <eventListenerPort id="passNextPort">
                <description>pass from the next port</description>
            </eventListenerPort>
            <eventListenerPort id="passPreviousPort">
                <description>passes from the previous port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property name="number"
                      type="integer"
                      value="1"
                      combobox="1//2//3//4"
                      description="number of connected (and active) ports"/>
        </properties>
    </componentType>



    <componentType id="asterics.PathSelector"
                   canonical_name="eu.asterics.component.processor.pathselector.PathselectorInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Pathselector routes signal to one of four output ports</description>
        <ports>
            <inputPort id="in">
                <description>Input port</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="out1">
                <description>Path 1</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Path 2"</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Path 3</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Path 4</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="select1">
                <description>selects out-port 1</description>
            </eventListenerPort>
            <eventListenerPort id="select2">
                <description>selects out-port 2</description>
            </eventListenerPort>
            <eventListenerPort id="select3">
                <description>selects out-port 3</description>
            </eventListenerPort>
            <eventListenerPort id="select4">
                <description>selects out-port 4</description>
            </eventListenerPort>
            <eventListenerPort id="selectNext">
                <description>selects next out-port</description>
            </eventListenerPort>
            <eventListenerPort id="selectPrevious">
                <description>selects previous out-port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property name="activePorts"
                      type="integer"
                      value="1"
                      combobox="1//2//3//4"
                      description="number of connected (and active) ports"/>
        </properties>
    </componentType>



    <componentType id="asterics.PeakDetector"
                   canonical_name="eu.asterics.component.processor.peakdetector.PeakDetectorInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Peak detection for incoming signal</description>
        <ports>
			<inputPort id="in">
				<description>input signal</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="top">
				<description>detected top value</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="bottom">
				<description>detected bottom value</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="time">
				<description>time between peaks</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="topDetected">
				<description>a top value has been detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="bottomDetected">
				<description>a bottom value has been detected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="mode"
				type="integer"
				value="0"
				combobox="detect tops//detect bottoms//detect both"
				description="mode of operation"/>
			<property name="comparePeaks"
				type="integer"
				value="0"
				description="number of peaks for averaging (0=disable)"/>
			<property name="validTopPercentage"
				type="integer"
				value="0"
				description="minimum percentage of average peaks for valid tops (0=disable)"/>
			<property name="validBottomPercentage"
				type="integer"
				value="0"
				description="maximum percentage of average peaks for valid bottoms (0=disable)"/>
			<property name="timeMode"
				type="integer"
				value="0"
				combobox="milliseconds//BPM"
				description="mode for time output (milliseconds or beats per minute)"/>

        </properties>

    </componentType>


    <componentType id="asterics.ProtocolSSVEPTrain"
                   canonical_name="com.starlab.component.processor.protocolssveptrain.ProtocolSSVEPTrainInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>This plugin is in charge of managing and configuring the SSVEP trainng recording protocol </description>
        <ports>

			<outputPort id="StimFrequency">
				<description>Current stimulation frequency in Hz</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq2">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq3">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			
			<outputPort id="Freq4">
				<description>Background stimulation frequency in Hz for panel 2</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="StartProt">
				<description>Start protocol request</description>
			</eventListenerPort>
			<eventListenerPort id="StopProt">
				<description>Stop protocol requestn</description>
			</eventListenerPort>
			<eventListenerPort id="Continue">
				<description>Next Stimulation trial request</description>
			</eventListenerPort>
			<eventListenerPort id="Repeat">
				<description>Repeat last stimulation trial request</description>
			</eventListenerPort>
			<eventListenerPort id="Stop">
				<description>Stop current stimulation trial request</description>
			</eventListenerPort>

			<eventTriggererPort id="StartTrial">
				<description>Event sent when a stimulation trial starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopTrial">
				<description>Event sent when a stimulation trial ends</description>
			</eventTriggererPort>
			<eventTriggererPort id="StartStim">
				<description>Event sent when a stimulation period starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopStim">
				<description>Event sent when a stimulation period ends</description>
			</eventTriggererPort>
			<eventTriggererPort id="ReadyStim">
				<description>Event sent 1 second befor the stimulation periods starts</description>
			</eventTriggererPort>
			<eventTriggererPort id="UpdatePanelConfig">
				<description>Event sent requesting a stimulation panels re-configuration</description>
			</eventTriggererPort>
			

		</events>			
        <properties>
			<property name="NumRepetitions"
				type="integer"
				value="0"
				description="Number of stimulation periods per trial"/>
			<property name="RepStimDuration"
				type="integer"
				value="0"
				description="Stimulation period duration in seconds"/>
			<property name="RepNonStimDuration"
				type="integer"
				value="0"
				description="Non-Stimulation period duration in seconds"/>
			<property name="freqStim1"
				type="integer"
				value="0"
				description="Stimulation frequency number 1 in Hz"/>
			<property name="freqStim2"
				type="integer"
				value="0"
				description="Stimulation frequency number 2 in Hz"/>
			<property name="freqStim3"
				type="integer"
				value="0"
				description="Stimulation frequency number 3 in Hz"/>
			<property name="freqStim4"
				type="integer"
				value="0"
				description="Stimulation frequency number 4 in Hz"/>
			<property name="freqStim5"
				type="integer"
				value="0"
				description="Stimulation frequency number 5 in Hz"/>
			<property name="freqStim6"
				type="integer"
				value="0"
				description="Stimulation frequency number 6 in Hz"/>
			<property name="freqStim7"
				type="integer"
				value="0"
				description="Stimulation frequency number 7 in Hz"/>
			<property name="freqStim8"
				type="integer"
				value="0"
				description="Stimulation frequency number 8 in Hz"/>
			<property name="freqStim9"
				type="integer"
				value="0"
				description="Stimulation frequency number 9 in Hz"/>
			<property name="freqStim10"
				type="integer"
				value="0"
				description="Stimulation frequency number 10 in Hz"/>
			<property name="RandomizeFreq"
				type="boolean"
				value="true"
				description="Randomize stimulation frequencies order"/>

        </properties>

    </componentType>


    <componentType id="asterics.Quantizer"
                   canonical_name="eu.asterics.component.processor.quantizer.QuantizerInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Performs the quantization of the input signal</description>
        <ports>
			<inputPort id="input">
				<description>Signal input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Signal output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="quantizationStep"
				type="double"
				value="1"
				description="Quantization step"/>

        </properties>

    </componentType>


    <componentType id="asterics.RegularExpression"
                   canonical_name="eu.asterics.component.processor.regularexpression.RegularExpressionInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Match the input port string to the defined regular expression (see Java class Pattern).</description>
        <ports>
			<inputPort id="input">
				<description>String to match against the regular expression.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>If property replace=false, sends out input string in case of a match. if property replace=true, sends out replaced string.</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="match">
				<description>The input string matches the pattern.</description>
			</eventTriggererPort>
			<eventTriggererPort id="notMatch">
				<description>The input string does not match the pattern.</description>
			</eventTriggererPort>
			<eventTriggererPort id="replace">
				<description>The string was replaced according to the replaceString.</description>
			</eventTriggererPort>
			<eventTriggererPort id="notReplace">
				<description>The string was not replaced.</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="pattern"
				type="string"
				value=""
				description="The regular expression pattern (see Java class Pattern)"/>
			<property name="replace"
				type="boolean"
				value="false"
				description="Defines if string parts that match to the pattern should be replaced by the replaceString"/>
			<property name="replaceString"
				type="string"
				value=""
				description="Replace string."/>

        </properties>

    </componentType>


    <componentType id="asterics.RelativeMoveSampler"
                   canonical_name="eu.asterics.component.processor.relativemovesampler.RelativeMoveSamplerInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>
			<inputPort id="inputX">
				<description>the X coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputY">
				<description>the Y coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="inputZ">
				<description>the Z coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="outputX">
				<description>the X coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputY">
				<description>the Y coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="outputZ">
				<description>the Z coordinate output</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="samplingRate"
				type="double"
				value="10"
				description="Rate of the sampling (Hz)"/>

        </properties>

    </componentType>


    <componentType id="asterics.SampleAndHold"
                   canonical_name="eu.asterics.component.processor.sampleandhold.SampleAndHoldInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Sample and hold for up to 4 input values</description>
        <ports>
            <inputPort id="in1">
                <description>Input port 1</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in2">
                <description>Input port 2</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in3">
                <description>Input port 3</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="in4">
                <description>Input port 4</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out1">
                <description>Output port 1</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out2">
                <description>Output port 2</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out3">
                <description>Output port 3</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="out4">
                <description>Output port 4</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sampleNow">
                <description>Sample input values on incoming event</description>
            </eventListenerPort>
        </events>
        <properties/>
    </componentType>



    <componentType id="asterics.SerialPort"
                   canonical_name="eu.asterics.component.processor.serialport.SerialPortInstance">
        <type subtype="Communication">processor</type>
        <singleton>false</singleton>
        <description>This plugin can send and receive data from a serial (COM) port.</description>
        <ports>
			<inputPort id="send">
				<description>data to be sent to the serial port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="sendBytes">
				<description>bytes to be sent to the serial port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>byte</dataType>
			</inputPort>			
			<outputPort id="received">
				<description>received data from the serial port</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="receivedBytes">
				<description>received bytes from the serial port</description>
				<dataType>byte</dataType>
			</outputPort>
			<outputPort id="opPortStatus">
				<description>output port for status messages</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>


		</events>			
        <properties>
			<property name="ComPort"
				type="string"
				value="COM4"
				description="The COM Port which will be opened"/>
			<property name="BaudRate"
				type="integer"
				value="9600"
				description="The baud rate for the communication"/>
			<property name="sendStringTerminator"
                type="integer"
                value="0"
                description="append a character when sending the string ?"
                combobox="not used//cr (13)//lf (10)//cr+lf//zero(0)"/>			
			<property name="receiveStringTerminator"
                type="integer"
                value="0"
                description="wait for a termination character when receiving characters (-> receive a string) ?"
                combobox="not used//cr (13)//lf (10)//cr+lf//zero(0)"/>
			<property name="sendBytesBufferSize"
				type="integer"
				value="1"
				description="Wait for the given number of bytes before sending them to the serial port."/>
			<property name="cimId"
					  type="string"
					  value=""
					  description="CIMId of the device to connect to in HEX format with prefix '0x'. For example '0xa401' for FLipMouse."/>
		</properties>
    </componentType>


    <componentType id="asterics.SignalTranslation"
                   canonical_name="eu.asterics.component.processor.signaltranslation.SignalTranslationInstance">
        <type subtype="Signal Shaping">processor</type>
        <singleton>false</singleton>
        <description>Translates signals from a certain input range to an output range</description>
        <ports>
            <inputPort id="in">
                <description>Input port to be translated to output signal range</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="setMax">
                <description>set maximum of input signal (for auto-scale)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <inputPort id="setMin">
                <description>set minimum of input signal (for auto-scale)</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>
            <outputPort id="out">
                <description>Translated ouput</description>
                <dataType>double</dataType>
            </outputPort>            
        </ports>
        <events>
            <eventTriggererPort id="enterRange">
                <description>this event is generated if the defined input range was entered by the last input value</description>
            </eventTriggererPort>
            <eventTriggererPort id="exitRangeBelow">
                <description>this event is generated if the defined input range was left by the last input value, which was smaller than inMin</description>
            </eventTriggererPort>
            <eventTriggererPort id="exitRangeAbove">
                <description>this event is generated if the defined input range was left by the last input value, which was greater than inMax</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property name="inMin"
                      type="double"
                      value="0.0"
                      description="Defines the minimal value of the input range"/>
            <property name="inMax"
                      type="double"
                      value="1.0"
                      description="Defines the maximal value of the input range"/>
            <property name="outMin"
                      type="double"
                      value="0.0"
                      description="Defines the minimal value of the output range"/>
            <property name="outMax"
                      type="double"
                      value="10.0"
                      description="Defines the maximal value of the output range"/>
        </properties>
        
    </componentType>



    <componentType id="asterics.SpeechProcessor"
                   canonical_name="eu.asterics.component.processor.speechprocessor.SpeechProcessorInstance">
        <type subtype="Audio and Voice">processor</type>
        <singleton>true</singleton>
        <description>This plugin allows to genereate and recognize speech via the speech processor server application</description>
        <ports>
            <inputPort id="speak">
				<description>words to be spoken by the speech synthesizer</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        
 		    <outputPort id="command">
				<description>recognized command as a string</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
			<eventTriggererPort id="activated">
				<description>Will be triggered if the activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="deActivated">
				<description>Will be triggered if the de-activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand1">
				<description>Will be triggered if a defined command 1 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand2">
				<description>Will be triggered if a defined command 2 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand3">
				<description>Will be triggered if a defined command 3 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand4">
				<description>Will be triggered if a defined command 4 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand5">
				<description>Will be triggered if a defined command 5 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand6">
				<description>Will be triggered if a defined command 6 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand7">
				<description>Will be triggered if a defined command 7 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand8">
				<description>Will be triggered if a defined command 8 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand9">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand10">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand11">
				<description>Will be triggered if a defined command 11 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand12">
				<description>Will be triggered if a defined command 12 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand13">
				<description>Will be triggered if a defined command 13 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand14">
				<description>Will be triggered if a defined command 14 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand15">
				<description>Will be triggered if a defined command 15 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand16">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand17">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand18">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand19">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand20">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand21">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand22">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand23">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand24">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand25">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventListenerPort id="help">
                <description>An incoming event starts playback of all supported voice commands</description>
            </eventListenerPort>
            <eventListenerPort id="activation">
                <description>Activates the Speech recognition</description>
            </eventListenerPort>
            <eventListenerPort id="deactivation">
                <description>Deactivates the Speech recognition</description>
            </eventListenerPort>
			

		</events>			
        <properties>
			<property name="language"
				type="integer"
				value="0"
				description="the desired language"				
				combobox="English//Deutsch//Espanol//Polski"/>
			<property name="recognitionConfidence"
				type="double"
                value="0.5"
				description="the needed recognition confidence (0-1), high value needs precise pronunciation"/>
			<property name="speechLoopDelay"
				type="integer"
				value="1500"
				description="the minimal time between two speech commands. Avoids loops"
			/>
			<property name="activationCommand"
				type="string"
				value="computer, listen!"
				description="speech command which activates command recognition"/>
			<property name="deactivationCommand"
				type="string"
				value="computer, stop!"
				description="speech command which stops command recognition"/>
			<property name="helpCommand"
				type="string"
				value="computer, help!"
				description="speech command which says all other commands"/>
            <property name="mode"
                type="integer"
                value="0"
                description="mode for activation/deactivation of speech recognition"
                combobox="always active//voice-triggered activation and deactivation//automatic deactivation after command recognition//speech recognition disabled (TTS only)"/>			
			<property name="command1"
				type="string"
				value="hello"
				description="speech command, triggers event1 if recognized"/>
			<property name="command2"
				type="string"
				value=""
				description="speech command, triggers event2 if recognized"/>
			<property name="command3"
				type="string"
				value=""
				description="speech command, triggers event3 if recognized"/>
			<property name="command4"
				type="string"
				value=""
				description="speech command, triggers event4 if recognized"/>
			<property name="command5"
				type="string"
				value=""
				description="speech command, triggers event5 if recognized"/>
			<property name="command6"
				type="string"
				value=""
				description="speech command, triggers event6 if recognized"/>
			<property name="command7"
				type="string"
				value=""
				description="speech command, triggers event7 if recognized"/>
			<property name="command8"
				type="string"
				value=""
				description="speech command, triggers event8 if recognized"/>
			<property name="command9"
				type="string"
				value=""
				description="speech command, triggers event9 if recognized"/>
			<property name="command10"
				type="string"
				value=""
				description="speech command, triggers event10 if recognized"/>
			<property name="command11"
				type="string"
				value=""
				description="speech command, triggers event11 if recognized"/>
			<property name="command12"
				type="string"
				value=""
				description="speech command, triggers event12 if recognized"/>
			<property name="command13"
				type="string"
				value=""
				description="speech command, triggers event13 if recognized"/>
			<property name="command14"
				type="string"
				value=""
				description="speech command, triggers event14 if recognized"/>
			<property name="command15"
				type="string"
				value=""
				description="speech command, triggers event15 if recognized"/>
			<property name="command16"
				type="string"
				value=""
				description="speech command, triggers event16 if recognized"/>
			<property name="command17"
				type="string"
				value=""
				description="speech command, triggers event17 if recognized"/>
			<property name="command18"
				type="string"
				value=""
				description="speech command, triggers event18 if recognized"/>
			<property name="command19"
				type="string"
				value=""
				description="speech command, triggers event19 if recognized"/>
			<property name="command20"
				type="string"
				value=""
				description="speech command, triggers event20 if recognized"/>
			<property name="command21"
				type="string"
				value=""
				description="speech command, triggers event21 if recognized"/>
			<property name="command22"
				type="string"
				value=""
				description="speech command, triggers event22 if recognized"/>
			<property name="command23"
				type="string"
				value=""
				description="speech command, triggers event23 if recognized"/>
			<property name="command24"
				type="string"
				value=""
				description="speech command, triggers event24 if recognized"/>
			<property name="command25"
				type="string"
				value=""
				description="speech command, triggers event25 if recognized"/>				
        </properties>

    </componentType>


    <componentType id="asterics.SSVEPDetect"
                   canonical_name="com.starlab.component.processor.ssvepdetect.SSVEPDetectInstance">
        <type subtype="DSP and Feature Detection">processor</type>
        <singleton>true</singleton>
        <description>This plugin is in charge of evaluating the SSVEP response (up to 4 different frequencies) among the frequencies defined by the user. It also calculates the config file based on previously recorded training file that will be used to evaluate the detection, and is in charge of updating its parameters according to the config file</description>
        <ports>
			<inputPort id="O1">
				<description>input port for the EEG channel O1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="Oz">
				<description>input port for the EEG channel O2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="O2">
				<description>input port for the EEG channel O3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType> 
			</inputPort>
			<inputPort id="UserName">
				<description>Name Identifying current the user </description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType> 
			</inputPort>			
			<inputPort id="NumberOfPanels">
				<description>Number of stimulation panels</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType> 
			</inputPort>		
					
			<outputPort id="FreqP1">
				<description>Stimulation frequency of panel 1</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP2">
				<description>Stimulation frequency of panel 2</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP3">
				<description>Stimulation frequency of panel 3</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="FreqP4">
				<description>Stimulation frequency of panel 4</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="TrainProcessReport">
				<description>Training process report (fail/succeed)</description>
				<dataType>string</dataType>
			</outputPort>
			
			
        </ports>
        
        
		<events>
			<eventListenerPort id="StartStim">
				<description>Event Informing that the stimulation period has started</description>
			</eventListenerPort>
			<eventListenerPort id="StopStim">
				<description>Event Informing that the stimulation period has finished</description>
			</eventListenerPort>
			<eventListenerPort id="CalculateConfigFile">
				<description>Event requesting the calculation of the configuration file</description>
			</eventListenerPort>
			<eventListenerPort id="UpdateFromConfigFile">
				<description>Event requested an update of the properties according to the configuration file</description>
			</eventListenerPort>
			<eventTriggererPort id="UpdatePanelsConfig">
				<description>Event reporting the stimulation panels plugin to update the stimulation frequencies</description>
			</eventTriggererPort>
			<eventTriggererPort id="NonStimFreqD">
				<description>Event reporting that none stimulation frequency could be detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq1D">
				<description>Event reporting that stimulation frequency number 1 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq2D">
				<description>Event reporting that stimulation frequency number 2 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq3D">
				<description>Event reporting that stimulation frequency number 3 was detected</description>
			</eventTriggererPort>
			<eventTriggererPort id="StimFreq4D">
				<description>Event reporting that stimulation frequency number 4 was detected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="SF1GO1"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 1 and electrode O1"/>
			<property name="SF1GOz"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 1 and electrode Oz"/>
			<property name="SF1GO2"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 1 and electrode O2"/>
			<property name="SF2GO1"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 2 and electrode O1"/>
			<property name="SF2GOz"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 2 and electrode Oz"/>
			<property name="SF2GO2"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 2 and electrode O2"/>
			<property name="SF3GO1"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 3 and electrode O1"/>
			<property name="SF3GOz"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 3 and electrode Oz"/>
			<property name="SF3GO2"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 3 and electrode O2"/>
			<property name="SF4GO1"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 4 and electrode O1"/>
			<property name="SF4GOz"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 4 and electrode Oz"/>
			<property name="SF4GO2"
				type="double"
				value="1.0"
				description="Spatial filter coefficient for stimulation frequency 4 and electrode O2"/>
			<property name="StimFreq1"
				type="integer"
				value="20"
				description="Stimulation frequency number 1 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection"/>
			<property name="StimFreq2"
				type="integer"
				value="20"
				description="Stimulation frequency number 2 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection"/>
			<property name="StimFreq3"
				type="integer"
				value="20"
				description="Stimulation frequency number 3 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection"/>
			<property name="StimFreq4"
				type="integer"
				value="20"
				description="Stimulation frequency number 4 in Hz. If its value is 0 it will not be evaluated in the SSVEP detection"/>
			<property name="BestHarm1"
				type="integer"
				value="20"
				description="Best harmonic to detect stimulation frequency 1"/>
			<property name="BestHarm2"
				type="integer"
				value="20"
				description="Best harmonic to detect stimulation frequency 2"/>
			<property name="BestHarm3"
				type="integer"
				value="20"
				description="Best harmonic to detect stimulation frequency 3"/>
			<property name="BestHarm4"
				type="integer"
				value="20"
				description="Best harmonic to detect stimulation frequency 4"/>

        </properties>

    </componentType>


    <componentType id="asterics.StringAppend"
                   canonical_name="eu.asterics.component.processor.stringappend.StringAppendInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>This plugin allows assembly of a string from single characters or substrings. The current and final results are sent to output ports.</description>
        <ports>
			<inputPort id="inStr">
				<description>input port for receiving strings or single characters</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="inChar">
				<description>input port for receiving string character codes</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="actResult">
				<description>appended string, updated at every new input</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="finalResult">
				<description>appended string, final result</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="sendNow">
				<description>sends the string to the finalResult output port</description>
			</eventListenerPort>
			<eventListenerPort id="sendNowAndClear">
				<description>sends the string to the finalResult output port and clears the string buffer</description>
			</eventListenerPort>
			<eventListenerPort id="deleteCharacter">
				<description>deletes the last character in the string buffer</description>
			</eventListenerPort>
			<eventListenerPort id="clear">
				<description>clears the string buffer</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="autoSendAtEnter"
				type="boolean"
				value="false"
				description="sends and clears the string buffer if the ASCII-code for Enter is received at the inChar port"/>
			<property name="defaultValue"
				type="string"
				value=""
				description="default value for the string buffer"/>

        </properties>

    </componentType>


    <componentType id="asterics.StringDelay"
                   canonical_name="eu.asterics.component.processor.stringdelay.StringDelayInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>delays the incoming string by a given time</description>
        <ports>
			<inputPort id="in">
				<description>input value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="out">
				<description>delayed output value</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="Delay"
				type="integer"
				value="1000"
				description="delay time in milliseconds"/>

        </properties>

    </componentType>


    <componentType id="asterics.StringDispatcher"
                   canonical_name="eu.asterics.component.processor.stringdispatcher.StringDispatcherInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Send text from chosen slot</description>
        <ports>
            <outputPort id="output">
                <description>Output text</description>
                <dataType>string</dataType>
            </outputPort>
            <inputPort id="slotDispatch">
                <description>Send the string from the slot defined by the incoming value</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        </ports>
        <events>
            <eventListenerPort id="dispatchSlot1">
                <description>Send text from slot 1</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot2">
                <description>Send text from slot 2</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot3">
                <description>Send text from slot 3</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot4">
                <description>Send text from slot 4</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot5">
                <description>Send text from slot 5</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot6">
                <description>Send text from slot 6</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot7">
                <description>Send text from slot 7</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot8">
                <description>Send text from slot 8</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot9">
                <description>Send text from slot 9</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot10">
                <description>Send text from slot 10</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot11">
                <description>Send text from slot 11</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot12">
                <description>Send text from slot 12</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot13">
                <description>Send text from slot 13</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot14">
                <description>Send text from slot 14</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot15">
                <description>Send text from slot 15</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot16">
                <description>Send text from slot 16</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot17">
                <description>Send text from slot 17</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot18">
                <description>Send text from slot 18</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot19">
                <description>Send text from slot 19</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlot20">
                <description>Send text from slot 20</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchNextSlot">
                <description>Send text from the next (not empty) slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchCurrentSlot">
                <description>Send text from the current slot (if not empty)</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchPreviousSlot">
                <description>Send text from the previous (not empty) slot</description>
            </eventListenerPort>
            <eventListenerPort id="dispatchSlotSeries">
                <description>Send text in sequence from all not empty slots with delay defined by Delay property</description>
            </eventListenerPort>
            <eventListenerPort id="resetToFirstSlot">
                <description>Sets the internal slot counter to the first slot</description>
            </eventListenerPort>
            
        </events>        
        <properties>
            <property name="delay"
                      type="integer"
                      value="300"
                      description="Delay in milliseconds for sending all slots sequentially"/>
            <property name="slot1"
                      type="string"
                      value=""
                      description="String slot 1"/>
            <property name="slot2"
                      type="string"
                      value=""
                      description="String slot 2"/>
            <property name="slot3"
                      type="string"
                      value=""
                      description="String slot 3"/>
            <property name="slot4"
                      type="string"
                      value=""
                      description="String slot 4"/>
            <property name="slot5"
                      type="string"
                      value=""
                      description="String slot 5"/>
            <property name="slot6"
                      type="string"
                      value=""
                      description="String slot 6"/>
            <property name="slot7"
                      type="string"
                      value=""
                      description="String slot 7"/>
            <property name="slot8"
                      type="string"
                      value=""
                      description="String slot 8"/>
            <property name="slot9"
                      type="string"
                      value=""
                      description="String slot 9"/>
            <property name="slot10"
                      type="string"
                      value=""
                      description="String slot 10"/>
            <property name="slot11"
                      type="string"
                      value=""
                      description="String slot 11"/>
            <property name="slot12"
                      type="string"
                      value=""
                      description="String slot 12"/>
            <property name="slot13"
                      type="string"
                      value=""
                      description="String slot 13"/>
            <property name="slot14"
                      type="string"
                      value=""
                      description="String slot 14"/>
            <property name="slot15"
                      type="string"
                      value=""
                      description="String slot 15"/>
            <property name="slot16"
                      type="string"
                      value=""
                      description="String slot 16"/>
            <property name="slot17"
                      type="string"
                      value=""
                      description="String slot 17"/>
            <property name="slot18"
                      type="string"
                      value=""
                      description="String slot 18"/>
            <property name="slot19"
                      type="string"
                      value=""
                      description="String slot 19"/>
            <property name="slot20"
                      type="string"
                      value=""
                      description="String slot 20"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.StringExpander"
                   canonical_name="eu.asterics.component.processor.stringexpander.StringExpanderInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Adds the preString and postString strings to the incoming string and sends the new string to the output port.</description>
        <ports>
			<inputPort id="input">
				<description>String input  port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="preString">
				<description>sets the preString</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="postString">
				<description>sets the postString property</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>String output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="preString"
				type="string"
				value=""
				description="Leading String."/>
			<property name="postString"
				type="string"
				value=""
				description="Trailing String."/>
			<property name="trim"
				type="boolean"
				value="false"
				description="Removes all leading and trailing white-space characters from the input string."/>

        </properties>

    </componentType>


    <componentType id="asterics.StringExtractor"
                   canonical_name="eu.asterics.component.processor.stringextractor.StringExtractorInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Extracts a subtext from a given input text and forwards it to the output port as soon as extraction was done based on start and end delimiter strings.
Delimiters must be in the correct order and not overlapping. In case of several occurrences, always the first occurrence of the start and the end delimiter are used. 
The event trigger port fires at successful extraction which is also the case for an empty extracted text (also handed to the output port).
		</description>
        <ports>
			<inputPort id="inText">
				<description>Provides the input text, from which a subtext shall be extracted and sent to the output port, based on start and end delimiter specifications.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="extractedText">
				<description>Represents the subtext extracted from the input text based on delimiter specifications.</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>

		<events>
			<eventTriggererPort id="textExtracted">
				<description>Triggers when the end delimiter was detected after the start delimiter (not, if the order is wrong or one is missing or overlapping, i.e. within the other) 
and thus a subtext was extracted and sent to the output port. (An empty string is a valid output that also triggers!)</description>
			</eventTriggererPort>
		</events>		
			
        <properties>
			<property name="startDelimiter"
				type="string"
				value="START"
				description="The start string between which and the end string the text is extracted (no regular expression!)"/>
			<property name="endDelimiter"
				type="string"
				value="END"
				description="The end string between which and the start string the text is extracted (no regular expression!)"/>
        </properties>
    </componentType>


    <componentType id="asterics.StringFilter"
                   canonical_name="eu.asterics.component.processor.stringfilter.StringFilterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>removes a substring from a string and/or pass the string if the substring is contained</description>
        <ports>
			<inputPort id="in">
				<description>input string</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="out">
				<description>output string</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="filterText"
				type="string"
				value="dummy"
				description="the substring to be filtered"/>
			<property name="passOnlyIfContains"
				type="boolean"
				value="true"
				description="if selected, only strings that contain the filter text will be passed to output"/>
			<property name="cropFilterText"
				type="boolean"
				value="true"
				description="if selected, the filter text will be removed"/>

        </properties>

    </componentType>


    <componentType id="asterics.StringFormatter"
                   canonical_name="eu.asterics.component.processor.stringformatter.StringFormatterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Uses the defined format string and converts the values of the input ports according to that format string. See Java Class Formatter.</description>
        <ports>
			<inputPort id="in1String">
				<description>Input variable of type string, referenced with %1$ in the format string.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="in2String">
				<description>Input variable of type string, referenced with %2$ in the format string.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="in3Double">
				<description>Input variable of type double, referenced with %3$ in the format string.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="in4Integer">
				<description>Input variable of type integer, referenced with %4$ in the format string.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="setFormatStr">
				<description>Set the format string to the input port value</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="formattedStr">
				<description>Formatted string according to input variables and format string</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="sendFormattedStr">
				<description>Sends the formatted string to the output port</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="formatString"
				type="string"
				value="%1$s, %2$s, %3$4.2f, %4$d"
				description="The format string to use, see Java class Formatter. The input ports in1XXX-in4XXX represent the formatable variables and can be referenced with the %n$ syntax."/>
			<property name="defaultIn1String"
				type="string"
				value=""
				description="The default value of in1String. Used if there is no input port value."/>
			<property name="defaultIn2String"
				type="string"
				value=""
				description="The default value of in2String. Used if there is no input port value."/>
			<property name="defaultIn3Double"
				type="double"
				value="0"
				description="The default value of in3Double. Used if there is no input port value."/>				
			<property name="defaultIn4Integer"
				type="integer"
				value="0"
				description="The default value of in4Integer. Used if there is no input port value."/>
			<property name="sendOnlyByEvent"
				type="boolean"
				value="false"
				description="Only sends the value of the formatted string, if the event sendFormattedStr is received."/>
			<property name="port1ToDefaultAfterSend"
					type="boolean"
					value="false"
					description="If true, input port 1 is reverted to default value, after value was sent."/>
			<property name="port2ToDefaultAfterSend"
					  type="boolean"
					  value="false"
					  description="If true, input port 2 is reverted to default value, after value was sent."/>
			<property name="port3ToDefaultAfterSend"
					  type="boolean"
					  value="false"
					  description="If true, input port 3 is reverted to default value, after value was sent."/>
			<property name="port4ToDefaultAfterSend"
					  type="boolean"
					  value="false"
					  description="If true, input port 4 is reverted to default value, after value was sent."/>
        </properties>

    </componentType>


    <componentType id="asterics.StringPathMultiplexer"
                   canonical_name="eu.asterics.component.processor.stringpathmultiplexer.StringPathMultiplexerInstance">
        <type subtype="Signal Pathways">processor</type>
        <singleton>false</singleton>
        <description>Forwards strings from the selected input to the output</description>
        <ports>
            <inputPort id="input1">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input2">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input3">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <inputPort id="input4">
                <description>Input port</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>

            <outputPort id="output">
                <description>Output port</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="passPort1">
                <description>passes data from the port 1</description>
            </eventListenerPort>
            <eventListenerPort id="passPort2">
                <description>passes data from the port 2</description>
            </eventListenerPort>
            <eventListenerPort id="passPort3">
                <description>passes data from the port 3</description>
            </eventListenerPort>
            <eventListenerPort id="passPort4">
                <description>passes data from the port 4</description>
            </eventListenerPort>
            <eventListenerPort id="passNextPort">
                <description>pass from the next port</description>
            </eventListenerPort>
            <eventListenerPort id="passPreviousPort">
                <description>passes from the previous port</description>
            </eventListenerPort>
        </events>
        <properties>
            <property name="number"
                      type="integer"
                      value="1"
                      combobox="1//2//3//4"
                      description="number of connected (and active) ports"/>
        </properties>
    </componentType>



    <componentType id="asterics.StringSplitter"
                   canonical_name="eu.asterics.component.processor.stringsplitter.StringSplitterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Split the string in up to 16 strings</description>
        <ports>
			<inputPort id="input">
				<description>String input to split</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="out1">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out2">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out3">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out4">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out5">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out6">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out7">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out8">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out9">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out10">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out11">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out12">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out13">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out14">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out15">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="out16">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="Seperator"
				type="string"
				value=";"
				description="defines the seperator of the strings"/>

        </properties>

    </componentType>


    <componentType id="asterics.StringToDouble"
                   canonical_name="eu.asterics.component.processor.stringtodouble.StringToDoubleInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts string to values</description>
        <ports>
			<inputPort id="input">
				<description>String input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Double output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.StringToInt"
                   canonical_name="eu.asterics.component.processor.stringtoint.StringToIntInstance">
        <type subtype="Data Converters">processor</type>
        <singleton>false</singleton>
        <description>Converts string to integer.</description>
        <ports>
			<inputPort id="input">
				<description>String input port</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="output">
				<description>Integer output port</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="hexadecimalInput"
				type="boolean"
				value="false"
				description="If set, the input values are regard as a hex values"/>

        </properties>

    </componentType>


    <componentType id="asterics.TextSender"
                   canonical_name="eu.asterics.component.processor.textsender.TextSenderInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Send text when gets event</description>
        <ports>
            <inputPort id="setText">
                <description>set the text to the incoming string</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>string</dataType>
            </inputPort>
            <outputPort id="output">
                <description>Output text, triggered via event</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="sendText">
                <description>this event triggers sending the text to the output port</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="text"
                      type="string"
                      value="This is a sample text."
                      description="default text to send"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.Threshold"
            canonical_name="eu.asterics.component.processor.threshold.ThresholdInstance">
        <type subtype="Basic Math">processor</type>
        <singleton>false</singleton>
        <description>Threshold Level Processor</description>
        <ports>
            <inputPort id="in">
                <description>Input port A</description>
                <mustBeConnected>true</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

            <outputPort id="out">
                <description>Output of high/low value</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="eventPosEdge">
                <description>Event port triggers events on pos edge</description>
            </eventTriggererPort>
            <eventTriggererPort id="eventNegEdge">
                <description>Event port triggers events on neg edge</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property name="thresholdHigh"
                      type="double"
                      value="10"
                      description="the threshold level for transitions from below to above"/>
            <property name="thresholdLow"
                      type="double"
                      value="10"
                      description="the threshold level for transitions from above to below"/>
            <property name="outputHigh"
                      type="double"
                      value="1"
                      description="output on value-port if true"/>
            <property name="outputLow"
                      type="double"
                      value="0"
                      description="output on value-port if false"/>
            <property name="operationMode"
                      type="integer"
                      value="0"
                      combobox="binary//cutoff//deadzone"                      
                      description="binary outputs output_high when above and output_low when below threshold, cutoff outputs output_high when above threshold and the actual signal below threshold, deadzone outputs output_low when below threshold and actual signal when above threshold"/>
            <property name="eventCondition"
                      type="integer"
                      combobox="below->above//above->below//both"
                      value="0"
                      description="transition from below to above threshold, from above to below or both"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.TimestampWriter"
                   canonical_name="eu.asterics.component.processor.timestampwriter.TimestampWriterInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>This plugin stores the time in milliseconds (ms) that passed by since the last reset (or start). 
Outputs are the (via date string) formatted and numerical milliseconds and also a formatted absolute UNIX epoch timestamp 
plus the absolute UNIX timestamp in ms. The time zone of the local system is used!
		</description>
        <ports>
			<outputPort id="timePassedMs">
				<description>Milliseconds (ms) since model start or last component reset.</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="timePassedFormatted">
				<description>Milliseconds since model start or last component reset - formatted as date string.</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="timestampUnixMs">
				<description>Unix timestamp in milliseconds (ms).</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="timestampUnixFormatted">
				<description>Unix timestamp - absolute milliseconds formatted as date string.</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
        
		<events>
			<eventTriggererPort id="timestampFormatted">
				<description>Triggers when output values (formatted and as milliseconds) are available at the output ports.</description>
			</eventTriggererPort>

			<eventListenerPort id="resetStartTimestamp">
				<description>Resets the start timestamp for calculating the time passed by (the first timestamp is set at model start).</description>
			</eventListenerPort>
			<eventListenerPort id="sendOutputs">
				<description>Formats and sends outputs, triggers the event timestampFormatted when outputs are available at the ports.</description>
			</eventListenerPort>
		</events>	
				
        <properties>
			<property name="timestampFormat"
				type="string"
				value="dd.MM.yyyy-HH:mm:ss.SSS"
				description="Format that must be valid according to java.text.SimpleDateFormat. It is used for formatting the UNIX timestamp as a date string. If it is invalid or null, the default date format is used."/>
			<property name="diffTimeFormat"
				type="string"
				value="HH:mm:ss.SSS"
				description="Format that must be valid according to java.text.SimpleDateFormat but for meaningfulness with only time components. It is used for formatting passed milliseconds (since start/reset) as a date string. If invalid or null, the default date format is used. 
Important Usage Note: Only the format for time components shall be set, as otherwise the Unix epoch start date components (01.01.1970 at 00:00:00.000 o'clock) are added. e.g. if 5 seconds have passed by, using date components the output would look like 01.01.1970-00:00:05.000!"/>
        </properties>
    </componentType>


    <componentType id="asterics.UniversalRemoteControl"
                   canonical_name="eu.asterics.component.processor.universalremotecontrol.UniversalRemoteControlInstance">
        <type subtype="Microcontroller Interface">processor</type>
        <singleton>false</singleton>
        <description>record ans send IR Codes through Universal Remote Control</description>
        <ports>
			<inputPort id="DeviceType">
				<description>Type of the device to be controlled via IR (e.g.: TV)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="DeviceName">
				<description>Name of the device to be controlled via IR (e.g.: Sony, Samsung, etc.)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="DeviceFunction">
				<description>Name of function of the device (e.g.: On, Off, VolumeUp, etc.)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

        </ports>
		<events>
			<eventListenerPort id="SendIRCode">
				<description>Send an IR Code to the UniversalRemoteControl</description>
			</eventListenerPort>
			<eventListenerPort id="RecordIRCode">
				<description>Record an IR Code through the UniversalRemoteControl</description>
			</eventListenerPort>

			<eventTriggererPort id="StartRecord">
				<description>Triggered when UniversalRemoteControl is recording</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopRecord">
				<description>Triggered when UniversalRemoteControl has finished recording</description>
			</eventTriggererPort>


		</events>			
        <properties>
				<property name="IRCodeFilePath"
				type="string"
				value="./data/processor.UniversalRemoteControl/IRCodes.csv"
				description="Filepath to the file, where the IR Codes are stored"/>
        </properties>

    </componentType>


    <componentType id="asterics.WebSocket"
                   canonical_name="eu.asterics.component.processor.websocket.WebSocketInstance">
        <type subtype="Web">processor</type>
        <singleton>false</singleton>
        <description>This plugin uses a websocket connection to send and read data. The default websocket URI is ws://{hostname}:8082/ws/astericsData. You have to start the ARE with --webservice flag. You can test the connection with http://localhost:8082/
        </description>
        <ports>
			<inputPort id="InA">
				<description>Incoming messages are sent to the websocket as string.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="OutA">
				<description>Incoming messages from the websocket are sent to this output port as string.</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
		<!--
			<eventListenerPort id="event1">
				<description>elp description</description>
			</eventListenerPort>
			<eventListenerPort id="reset">
				<description>Clears buffers and resets websocket connection</description>
			</eventListenerPort>

			<eventTriggererPort id="reconnect">
				<description>Reconnect to websockect</description>
			</eventTriggererPort>
			-->

		</events>			
        <properties>
        </properties>

    </componentType>


    <componentType id="asterics.Yaak"
                   canonical_name="eu.asterics.component.processor.yaak.YaakInstance">
        <type subtype="Phone Interface">processor</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>

			<outputPort id="action">
				<description>Action string sent from the keyboard</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="trigger">
				<description>elp description</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="hostname"
				type="string"
				value="localhost"
				description="IP Address of the device running yaak"/>
			<property name="port"
				type="integer"
				value="44000"
				description="Port where the yaak server listens"/>

        </properties>

    </componentType>


    <componentType id="asterics.Acceleration"
                   canonical_name="eu.asterics.component.sensor.acceleration.AccelerationInstance">
        <type subtype="Inertial Measurement">sensor</type>
        <singleton>false</singleton>
        <description>Acceleration sensor CIM</description>
        <ports>
            <outputPort id="xAcc">
                <description>X-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="yAcc">
                <description>Y-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="zAcc">
                <description>Z-Acceleration</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="total">
                <description>Accumulated absolute accelerations</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="start">
                <description>Incoming event starts acceleration sensor</description>
            </eventListenerPort>
            <eventListenerPort id="stop">
                <description>Incoming event stops acceleration sensor</description>
            </eventListenerPort>
            <eventListenerPort id="calibrate">
                <description>Incoming event sets offset values for x,y,z</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="autoStart"
                      type="boolean"
                      value="true" 
                      description="start acceleration sensor automatically"/>
            <property name="descreteSteps"
                      type="integer"
                      value="0" 
                      description="Mapping to (n) integral steps (0=disable)"/>
            <property name="updateFrequency"
                      type="integer"
                      value="0"
                      combobox="10 Hz//20 Hz//40 Hz//75 Hz//150 Hz//300 Hz"
                      description="frequency of periodic updates in Hz"/>
            <property name="accelerationRange"
                      type="integer"
                      value="0"
                      combobox="1 g//1.5 g//2 g//3 g//4 g//8 g//16 g"
                      description="sensitivity of acceleration"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>                                 
        </properties>
    </componentType>



    <componentType id="asterics.AnalogIn"
                   canonical_name="eu.asterics.component.sensor.analogin.AnalogInInstance">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>ADC CIM sensor for inputs</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="activateInput1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="periodicUpdate"
                      type="integer"
                      value="0"
                      description="value of interval between periodic update messagess of inputs in ms"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
            
                      
        </properties>
    </componentType>
    
    <componentType id="asterics.LegacyAnalogIn"
                   canonical_name="eu.asterics.component.sensor.analogin.AnalogInInstance">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>ADC CIM sensor for inputs</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in3">
                <description>Input 3</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in4">
                <description>Input 4</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in5">
                <description>Input 5</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in6">
                <description>Input 6</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in7">
                <description>Input 7</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in8">
                <description>Input 8</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="activateInput1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput3"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput4"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput5"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput6"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput7"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput8"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="periodicUpdate"
                      type="integer"
                      value="0"
                      description="value of interval between periodic update messagess of inputs in ms"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
            
                      
        </properties>
    </componentType>
    



    <componentType id="asterics.AutostartEvent"
                   canonical_name="eu.asterics.component.sensor.autostartevent.AutostartEventInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Sends the event after model start, with defined delay.</description>
        <ports>


        </ports>
		<events>

			<eventTriggererPort id="output">
				<description>The start event</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="Delay"
				type="integer"
				value="1000"
				description="The event delay [ms]"/>

        </properties>

    </componentType>


    <componentType id="asterics.CellBoard"
                   canonical_name="eu.asterics.component.sensor.cellboard.CellBoardInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>Adjustable matrix of button cells with scanning support</description>
        <ports>
			<inputPort id="row">
				<description>Row of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="column">
				<description>Column of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="cellNumber">
				<description>Number of the cell</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="xmlFile">
				<description>Name of keyboard file (in data/cellBoardKeyboards) which is used when the 'load' event occurs.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="actCell">
				<description>the ID (index number) of the current cell (if single cell can be determined)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="actCellCaption">
				<description>the caption (label text) of the current cell (if single cell can be determined)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="actCellText">
				<description>the action text of the current cell (if single cell can be determined)</description>
				<dataType>string</dataType>
			</outputPort>
			
			<outputPort id="selectedCell">
				<description>The ID (index number) of the selected cell</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="selectedCellCaption">
				<description>The caption (label text) of the selected cell</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="selectedCellText">
				<description>The action text of the selected cell</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="scanRow">
				<description>the number of the current row (when row/column scan is selected)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="scanColumn">
				<description>the number of the current column (when row/column scan is selected)</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="scanMove">
				<description>Move the scan frame</description>
			</eventListenerPort>
			<eventListenerPort id="scanSelect">
				<description>Select the cell during scanning</description>
			</eventListenerPort>
			<eventListenerPort id="moveUp">
				<description>Move frame up</description>
			</eventListenerPort>
			<eventListenerPort id="moveRight">
				<description>Move frame right</description>
			</eventListenerPort>
			<eventListenerPort id="moveLeft">
				<description>Move frame left</description>
			</eventListenerPort>
			<eventListenerPort id="moveDown">
				<description>Move frame down</description>
			</eventListenerPort>
			<eventListenerPort id="load">
				<description>Load keyboard file which is defined by the input port 'xmlFile'</description>
			</eventListenerPort>
			
			<eventTriggererPort id="cellClicked">
				<description>Cell is clicked</description>
			</eventTriggererPort>
			<eventTriggererPort id="scanCancel">
				<description>row or column scanning canceled because max cycles reached</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell1">
				<description>Cell 1 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell2">
				<description>Cell 2 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell3">
				<description>Cell 3 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell4">
				<description>Cell 4 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell5">
				<description>Cell 5 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell6">
				<description>Cell 6 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell7">
				<description>Cell 7 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell8">
				<description>Cell 8 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell9">
				<description>Cell 9 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell10">
				<description>Cell 10 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell11">
				<description>Cell 11 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell12">
				<description>Cell 12 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell13">
				<description>Cell 13 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell14">
				<description>Cell 14 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell15">
				<description>Cell 15 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell16">
				<description>Cell 16 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell17">
				<description>Cell 17 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell18">
				<description>Cell 18 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell19">
				<description>Cell 19 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell20">
				<description>Cell 20 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell21">
				<description>Cell 21 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell22">
				<description>Cell 22 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell23">
				<description>Cell 23 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell24">
				<description>Cell 24 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell25">
				<description>Cell 25 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell26">
				<description>Cell 26 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell27">
				<description>Cell 27 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell28">
				<description>Cell 28 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell29">
				<description>Cell 29 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell30">
				<description>Cell 30 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell31">
				<description>Cell 31 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell32">
				<description>Cell 32 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell33">
				<description>Cell 33 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell34">
				<description>Cell 34 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell35">
				<description>Cell 35 selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="cell36">
				<description>Cell 36 selected</description>
			</eventTriggererPort>

		</events>			
        <properties>
        	<property name="caption"
				type="string"
				value="Cell Board"
				description="Caption of the component"/>
			<property name="rows"
				type="integer"
				value="2"
				combobox="1//2//3//4//5//6//7//8//9//10//11//12//13//14//15//16//17//18//19//20//21//22//23//24//25//26//27//28//29//30//31//32//33//34//35//36"
				description="Number of rows (rows x cols &lt;= 100)"/>
			<property name="columns"
				type="integer"
				value="2"
				combobox="1//2//3//4//5//6//7//8//9//10//11//12//13//14//15//16//17//18//19//20//21//22//23//24//25//26//27//28//29//30//31//32//33//34//35//36"
				description="Number of columns (rows x cols &lt;= 100)"/>
			<property name="textColor"
				type="integer"
				value="0"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Text color"/>
			<property name="backgroundColor"
				type="integer"
				value="11"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Background color"/>
			<property name="scanColor"
				type="integer"
				value="10"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Color of the scan frame"/>
			<property name="scanMode"
				type="integer"
				value="0"
				combobox="none//row-column//column-row//directed//hover selection"
				description="Scanning mode"/>
			<property name="scanCycles"
				type="integer"
				value="3"
				description="number of cycles in a specific scan mode (row/column) before canceling"/>
			<property name="hoverTime"
				type="integer"
				value="1000"
				description="Time of hovering needed to cell selection [ms]."/>
			<property name="hoverIndicator"
				type="integer"
				value="0"
				combobox="fixed frame//growing frame//background color"
				description="type of hover indicator"/>
			<property name="hoverFrameThickness"
				type="integer"
				value="4"
				description="Size of the hover indicator frame"/>
			<property name="enableEdit"
				type="boolean"
				value="true"
				description="if selected, Cells can be edited via right-click"/>
			<property name="enableClickSelection"
				type="boolean"
				value="true"
				description="if selected, Cells can be selected via left mouse click even if a scanning mode is active"/>
			<property name="commandSeparator"
				type="string"
				value=""
				description="Character sequence for separation of multiple command strings"/>
			<property name="keyboardFile"
				type="string"
				value=""
				getStringList="true"
				description="Name of keyboard file (in data/cellBoardKeyboards) to load at startup."/>
			<property name="ignoreKeyboardFileProperties"
				type="boolean"
				value="false"
				description="if true, the properties of the keyboard file are ignored (only cell contents are loaded)"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
			<property name="cellText1"
				type="string"
				value=""
				description="Text of cell 1"/>
			<property name="cellImage1"
				type="string"
				value=""
				description="Image of cell 1"/>
			<property name="actionText1"
				type="string"
				value=""
				description="Action text of cell 1"/>
			<property name="cellText2"
				type="string"
				value=""
				description="Text of cell 2"/>
			<property name="cellImage2"
				type="string"
				value=""
				description="Image of cell 2"/>
			<property name="actionText2"
				type="string"
				value=""
				description="Action text of cell 2"/>
			<property name="cellText3"
				type="string"
				value=""
				description="Text of cell 3"/>
			<property name="cellImage3"
				type="string"
				value=""
				description="Image of cell 3"/>
			<property name="actionText3"
				type="string"
				value=""
				description="Action text of cell 3"/>
			<property name="cellText4"
				type="string"
				value=""
				description="Text of cell 4"/>
			<property name="cellImage4"
				type="string"
				value=""
				description="Image of cell 4"/>
			<property name="actionText4"
				type="string"
				value=""
				description="Action text of cell 4"/>
			<property name="cellText5"
				type="string"
				value=""
				description="Text of cell 5"/>
			<property name="cellImage5"
				type="string"
				value=""
				description="Image of cell 5"/>
			<property name="actionText5"
				type="string"
				value=""
				description="Action text of cell 5"/>
			<property name="cellText6"
				type="string"
				value=""
				description="Text of cell 6"/>
			<property name="cellImage6"
				type="string"
				value=""
				description="Image of cell 6"/>
			<property name="actionText6"
				type="string"
				value=""
				description="Action text of cell 6"/>
			<property name="cellText7"
				type="string"
				value=""
				description="Text of cell 7"/>
			<property name="cellImage7"
				type="string"
				value=""
				description="Image of cell 7"/>
			<property name="actionText7"
				type="string"
				value=""
				description="Action text of cell 7"/>
			<property name="cellText8"
				type="string"
				value=""
				description="Text of cell 8"/>
			<property name="cellImage8"
				type="string"
				value=""
				description="Image of cell 8"/>
			<property name="actionText8"
				type="string"
				value=""
				description="Action text of cell 8"/>
			<property name="cellText9"
				type="string"
				value=""
				description="Text of cell 9"/>
			<property name="cellImage9"
				type="string"
				value=""
				description="Image of cell 9"/>
			<property name="actionText9"
				type="string"
				value=""
				description="Action text of cell 9"/>
			<property name="cellText10"
				type="string"
				value=""
				description="Text of cell 10"/>
			<property name="cellImage10"
				type="string"
				value=""
				description="Image of cell 10"/>
			<property name="actionText10"
				type="string"
				value=""
				description="Action text of cell 10"/>
			<property name="cellText11"
				type="string"
				value=""
				description="Text of cell 11"/>
			<property name="cellImage11"
				type="string"
				value=""
				description="Image of cell 11"/>
			<property name="actionText11"
				type="string"
				value=""
				description="Action text of cell 11"/>
			<property name="cellText12"
				type="string"
				value=""
				description="Text of cell 12"/>
			<property name="cellImage12"
				type="string"
				value=""
				description="Image of cell 12"/>
			<property name="actionText12"
				type="string"
				value=""
				description="Action text of cell 12"/>
			<property name="cellText13"
				type="string"
				value=""
				description="Text of cell 13"/>
			<property name="cellImage13"
				type="string"
				value=""
				description="Image of cell 13"/>
			<property name="actionText13"
				type="string"
				value=""
				description="Action text of cell 13"/>
			<property name="cellText14"
				type="string"
				value=""
				description="Text of cell 14"/>
			<property name="cellImage14"
				type="string"
				value=""
				description="Image of cell 14"/>
			<property name="actionText14"
				type="string"
				value=""
				description="Action text of cell 14"/>
			<property name="cellText15"
				type="string"
				value=""
				description="Text of cell 15"/>
			<property name="cellImage15"
				type="string"
				value=""
				description="Image of cell 15"/>
			<property name="actionText15"
				type="string"
				value=""
				description="Action text of cell 15"/>
			<property name="cellText16"
				type="string"
				value=""
				description="Text of cell 16"/>
			<property name="cellImage16"
				type="string"
				value=""
				description="Image of cell 16"/>
			<property name="actionText16"
				type="string"
				value=""
				description="Action text of cell 16"/>
			<property name="cellText17"
				type="string"
				value=""
				description="Text of cell 17"/>
			<property name="cellImage17"
				type="string"
				value=""
				description="Image of cell 17"/>
			<property name="actionText17"
				type="string"
				value=""
				description="Action text of cell 17"/>
			<property name="cellText18"
				type="string"
				value=""
				description="Text of cell 18"/>
			<property name="cellImage18"
				type="string"
				value=""
				description="Image of cell 18"/>
			<property name="actionText18"
				type="string"
				value=""
				description="Action text of cell 18"/>
			<property name="cellText19"
				type="string"
				value=""
				description="Text of cell 19"/>
			<property name="cellImage19"
				type="string"
				value=""
				description="Image of cell 19"/>
			<property name="actionText19"
				type="string"
				value=""
				description="Action text of cell 19"/>
			<property name="cellText20"
				type="string"
				value=""
				description="Text of cell 20"/>
			<property name="cellImage20"
				type="string"
				value=""
				description="Image of cell 20"/>
			<property name="actionText20"
				type="string"
				value=""
				description="Action text of cell 20"/>
			<property name="cellText21"
				type="string"
				value=""
				description="Text of cell 21"/>
			<property name="cellImage21"
				type="string"
				value=""
				description="Image of cell 21"/>
			<property name="actionText21"
				type="string"
				value=""
				description="Action text of cell 21"/>
			<property name="cellText22"
				type="string"
				value=""
				description="Text of cell 22"/>
			<property name="cellImage22"
				type="string"
				value=""
				description="Image of cell 22"/>
			<property name="actionText22"
				type="string"
				value=""
				description="Action text of cell 22"/>
			<property name="cellText23"
				type="string"
				value=""
				description="Text of cell 23"/>
			<property name="cellImage23"
				type="string"
				value=""
				description="Image of cell 23"/>
			<property name="actionText23"
				type="string"
				value=""
				description="Action text of cell 23"/>
			<property name="cellText24"
				type="string"
				value=""
				description="Text of cell 24"/>
			<property name="cellImage24"
				type="string"
				value=""
				description="Image of cell 24"/>
			<property name="actionText24"
				type="string"
				value=""
				description="Action text of cell 24"/>
			<property name="cellText25"
				type="string"
				value=""
				description="Text of cell 25"/>
			<property name="cellImage25"
				type="string"
				value=""
				description="Image of cell 25"/>
			<property name="actionText25"
				type="string"
				value=""
				description="Action text of cell 25"/>
			<property name="cellText26"
				type="string"
				value=""
				description="Text of cell 26"/>
			<property name="cellImage26"
				type="string"
				value=""
				description="Image of cell 26"/>
			<property name="actionText26"
				type="string"
				value=""
				description="Action text of cell 26"/>
			<property name="cellText27"
				type="string"
				value=""
				description="Text of cell 27"/>
			<property name="cellImage27"
				type="string"
				value=""
				description="Image of cell 27"/>
			<property name="actionText27"
				type="string"
				value=""
				description="Action text of cell 27"/>
			<property name="cellText28"
				type="string"
				value=""
				description="Text of cell 28"/>
			<property name="cellImage28"
				type="string"
				value=""
				description="Image of cell 28"/>
			<property name="actionText28"
				type="string"
				value=""
				description="Action text of cell 28"/>
			<property name="cellText29"
				type="string"
				value=""
				description="Text of cell 29"/>
			<property name="cellImage29"
				type="string"
				value=""
				description="Image of cell 29"/>
			<property name="actionText29"
				type="string"
				value=""
				description="Action text of cell 29"/>
			<property name="cellText30"
				type="string"
				value=""
				description="Text of cell 30"/>
			<property name="cellImage30"
				type="string"
				value=""
				description="Image of cell 30"/>
			<property name="actionText30"
				type="string"
				value=""
				description="Action text of cell 30"/>
			<property name="cellText31"
				type="string"
				value=""
				description="Text of cell 31"/>
			<property name="cellImage31"
				type="string"
				value=""
				description="Image of cell 31"/>
			<property name="actionText31"
				type="string"
				value=""
				description="Action text of cell 31"/>
			<property name="cellText32"
				type="string"
				value=""
				description="Text of cell 32"/>
			<property name="cellImage32"
				type="string"
				value=""
				description="Image of cell 32"/>
			<property name="actionText32"
				type="string"
				value=""
				description="Action text of cell 32"/>
			<property name="cellText33"
				type="string"
				value=""
				description="Text of cell 33"/>
			<property name="cellImage33"
				type="string"
				value=""
				description="Image of cell 33"/>
			<property name="actionText33"
				type="string"
				value=""
				description="Action text of cell 33"/>
			<property name="cellText34"
				type="string"
				value=""
				description="Text of cell 34"/>
			<property name="cellImage34"
				type="string"
				value=""
				description="Image of cell 34"/>
			<property name="actionText34"
				type="string"
				value=""
				description="Action text of cell 34"/>
			<property name="cellText35"
				type="string"
				value=""
				description="Text of cell 35"/>
			<property name="cellImage35"
				type="string"
				value=""
				description="Image of cell 35"/>
			<property name="actionText35"
				type="string"
				value=""
				description="Action text of cell 35"/>
			<property name="cellText36"
				type="string"
				value=""
				description="Text of cell 36"/>
			<property name="cellImage36"
				type="string"
				value=""
				description="Image of cell 36"/>
			<property name="actionText36"
				type="string"
				value=""
				description="Action text of cell 36"/>
        </properties>
		<gui>
			<width>3000</width>
			<height>3000</height>
		</gui>

    </componentType>


    <componentType id="asterics.DigitalIn"
                   canonical_name="eu.asterics.component.sensor.digitalin.DigitalInInstance">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>false</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>triggers if input 1 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>triggers if input 2 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>triggers if input 3 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4High">
                <description>triggers if input 4 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5High">
                <description>triggers if input 5 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6High">
                <description>triggers if input 6 switched to high level</description>
            </eventTriggererPort>

            <eventTriggererPort id="in1Low">
                <description>triggers if input 1 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>triggers if input 2 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>triggers if input 3 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4Low">
                <description>triggers if input 4 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5Low">
                <description>triggers if input 5 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6Low">
                <description>triggers if input 6 switched to low level</description>
            </eventTriggererPort>
        </events>        
        <properties>
            <property name="activateEventIn1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn3"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn4"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn5"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn6"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="periodicUpdate"
                      type="integer"
                      value="0"
                      description="value of interval between periodic update messagess of inputs in ms"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
            
        </properties>
    </componentType>

    <componentType id="asterics.LegacyDigitalIn"
                   canonical_name="eu.asterics.component.sensor.digitalin.DigitalInInstance">
        <type subtype="Generic Control Input">sensor</type>
        <singleton>true</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>triggers if input 1 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>triggers if input 2 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>triggers if input 3 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4High">
                <description>triggers if input 4 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5High">
                <description>triggers if input 5 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6High">
                <description>triggers if input 6 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in7High">
                <description>triggers if input 7 switched to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in8High">
                <description>triggers if input 8 switched to high level</description>
            </eventTriggererPort>

            <eventTriggererPort id="in1Low">
                <description>triggers if input 1 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>triggers if input 2 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>triggers if input 3 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in4Low">
                <description>triggers if input 4 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in5Low">
                <description>triggers if input 5 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in6Low">
                <description>triggers if input 6 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in7Low">
                <description>triggers if input 7 switched to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in8Low">
                <description>triggers if input 8 switched to low level</description>
            </eventTriggererPort>
        </events>        
        <properties>
            <property name="activateEventIn1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn3"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn4"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn5"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn6"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn7"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn8"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="periodicUpdate"
                      type="integer"
                      value="0"
                      description="value of interval between periodic update messagess of inputs in ms"/>
            <property name="uniqueID"
                      type="string"
                      value="not used"
                      getStringList="true"
                      description="ID (if more than one devices of this kind are connected)"/>
                      
            
        </properties>
    </componentType>
    
    


    <componentType id="asterics.EditBox"
                   canonical_name="eu.asterics.component.sensor.editbox.EditBoxInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>Text edit box</description>
        <ports>

			<outputPort id="output">
				<description>output port</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="clear">
                <description>clear the text</description>
            </eventListenerPort>
			<eventListenerPort id="send">
                <description>Send the text of the editbox</description>
            </eventListenerPort>
		</events>			
        <properties>
			<property name="caption"
				type="string"
				value="Edit Box"
				description="Caption of the component"/>
			<property name="default"
				type="string"
				value=""
				description="Default text"/>
			<property name="textColor"
                type="integer"
                value="0"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="color of text"/> 
            <property name="backgroundColor"
                type="integer"
                value="11"
                combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
                description="background color"/> 
            <property name="insertAction"
                type="integer"
                value="0"
                combobox="do nothing//select text//remove text"
                description="defines behaviour of the component after text insert"/>
			<property name="sendDefaultValue"
                type="boolean"
                value="false"
                description="defines if the initial value should be sent at model startup"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>

        </properties>
		<gui>
			<width>3000</width>
			<height>2000</height>
		</gui>

    </componentType>


    <componentType id="asterics.Enobio"
                   canonical_name="com.starlab.component.sensor.enobio.EnobioInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>true</singleton>
        <description>Enobio sensor (ECG, EEG and EMG)</description>
        <ports>
            <outputPort id="Channel1">
                <description>Output port of channel 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel2">
                <description>Output port of channel 2</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel3">
                <description>Output port of channel 3</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Channel4">
                <description>Output port of channel 4</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="Status">
                <description>Output port of status channel</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="externalSignalPosEdgeEvent">
                <description>This event is fired if the external signal toggles from low to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="externalSignalNegEdgeEvent">
                <description>Event port triggers if the external signal toggles from high to low level</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property name="IsChannel1Activated"
                      type="boolean"
                      value="true"
                      description="Defines if the channel 1 is activated"/>
            <property name="IsChannel2Activated"
                      type="boolean"
                      value="true"
                      description="Defines if the channel 2 is activated"/>
            <property name="IsChannel3Activated"
                      type="boolean"
                      value="true"
                      description="Defines if the channel 3 is activated"/>
            <property name="IsChannel4Activated"
                      type="boolean"
                      value="true"
                      description="Defines if the channel 4 is activated"/>
            <property name="HighPassFilterInChannel1"
                      type="boolean"
                      value="false"
                      description="Defines if a high pass filter is applied to the channel 1"/>
            <property name="HighPassFilterInChannel2"
                      type="boolean"
                      value="false"
                      description="Defines if a high pass filter is applied to the channel 2"/>
            <property name="HighPassFilterInChannel3"
                      type="boolean"
                      value="false"
                      description="Defines if a high pass filter is applied to the channel 3"/>
            <property name="HighPassFilterInChannel4"
                      type="boolean"
                      value="false"
                      description="Defines if a high pass filter is applied to the channel 4"/>
            <property name="LineNoiseFilter"
                      type="boolean"
                      value="false"
                      description="Defines if the 50 Hz band-stop filter is applied to all four channels"/>
        </properties>
    </componentType>



    <componentType id="asterics.EOG"
                   canonical_name="eu.asterics.component.sensor.eog.EogInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>true</singleton>
        <description>connects to EOG CIM and measures horizontal and vertical eye movements</description>
        <ports>

			<outputPort id="horizontal">
				<description>horizontal eye movement</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="vertical">
				<description>vertical eye movement</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="updatePeriod"
				type="integer"
				value="100"
				description="Update period for EOG values (in milliseconds)"/>

        </properties>

    </componentType>


    <componentType id="asterics.EShoe"
                   canonical_name="eu.asterics.component.sensor.eshoe.EShoeInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>eShoe-Plugin to gather data from the eShoe</description>
        <ports>
			<inputPort id="InputString">
				<description>Triggers the desired event</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="AccX">
				<description>Acceleration in X-Direction  [mg]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccY">
				<description>Acceleration in Y-Direction  [mg]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccZ">
				<description>Acceleration in Z-Direction  [mg]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Heel">
				<description>Pressure of the heel  [g]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="MetaV">
				<description>Pressure of the outer ball [g]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="MetaI">
				<description>Pressure of the inner ball [g]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Toe">
				<description>Pressure of the big Toe [g]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="GyroX">
				<description>rotational velocity around the X-achses  [Grad/sec]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="GyroY">
				<description>rotational velocity around the Y-achses  [Grad/sec]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="GyroZ">
				<description>rotational velocity around the Z-achses  [Grad/sec]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Angle">
				<description>The angle of the eShoe to the Ground  [Grad]</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="Calibrate">
				<description>Calibrates the eShoe</description>
			</eventListenerPort>
			<eventListenerPort id="Start">
				<description>Starts the eShoe</description>
			</eventListenerPort>
			<eventListenerPort id="Stop">
				<description>Stops the eShoe</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="ComPort"
				type="integer"
				value="1"
				description="Com Port of the eShoe"/>
			<property name="SamplingRate"
				type="integer"
				value="50"
				combobox="50//200"
				description="Com Port of the eShoe [Hz]"/>
			<property name="SDMemory"
				type="boolean"
				value="false"
				description="Use of SD Memory"/>

        </properties>

    </componentType>


    <componentType id="asterics.EventGenerator"
                   canonical_name="eu.asterics.component.sensor.event_generator.EventGeneratorInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Simple Event generator</description>
        <ports>
            <!-- no ports involved -->
        </ports>
        <events>
            <eventTriggererPort id="event_out_1">
                <description>The default event port where the generated events are produced</description>
            </eventTriggererPort>
        </events>
        <properties>
            <property name="generation_delay"
                      type="integer"
                      value="1000"
                      description="The delay in milliseconds between events"/>
            <property name="event_payload"
                      type="string"
                      value=""
                      description="The payload to be included in the events (empty means null)"/>
        </properties>
    </componentType>



    <componentType id="asterics.Eyetracker"
                   canonical_name="eu.asterics.component.sensor.eyetracker.EyetrackerInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Webcamera-based eye tracking sensor with gaze tracking support</description>
        <ports>
            <inputPort id="pt1x">
                <description>Headpose compensation tracking point 1, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt1y">
                <description>Headpose compensation tracking point 1, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt2x">
                <description>Headpose compensation tracking point 2, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt2y">
                <description>Headpose compensation tracking point 2, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt3x">
                <description>Headpose compensation tracking point 3, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt3y">
                <description>Headpose compensation tracking point 3, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt4x">
                <description>Headpose compensation tracking point 4, x-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="pt4y">
                <description>Headpose compensation tracking point 4, y-coordinate</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
        
            <outputPort id="x">
                <description>Output port of X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="y">
                <description>Output port of Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="calibrate">
                <description>perform calibration procedure</description>
            </eventListenerPort>
            <eventListenerPort id="offsetCorrection">
                <description>correct cursor offset during eyetracking</description>
            </eventListenerPort>
            <eventListenerPort id="showCameraSettings">
                <description>shows Camera Settings Window</description>
            </eventListenerPort>
            <eventListenerPort id="togglePoseInfoWindow">
                <description>opens/closes the POSIT information window</description>
            </eventListenerPort>
            <eventListenerPort id="startEvaluation">
                <description>starts the evaluation of the systems accuracy</description>
            </eventListenerPort>
            <eventListenerPort id="saveProfile">
                <description>save camera profile to file</description>
            </eventListenerPort>            
            <eventTriggererPort id="blinkDetected">
                <description>triggered if idle time of pupil detection is in the selected blinktime interval</description>
            </eventTriggererPort>            
            <eventTriggererPort id="longBlinkDetected">
                <description>triggered if idle time of pupil detection reaches the maximum blinktime</description>
            </eventTriggererPort>            
        </events>
        <properties>
            <property name="cameraSelection"
                      type="integer"
                      value="0"
                      combobox="first camera//second camera//third camera//forth camera//fifth camera"
                      description="the camera device to be used"/>
            <property name="cameraResolution"
                      type="integer"
                      value="1"
                      combobox="160x120//320x240//352x288//640x480//800x600//1024x768//1600x1200"
                      description="desired camera resolution"/>
            <property name="cameraProfile" 
                      type="string"
                      value=""
                      description="Filename of the camera profile"/>            
            <property name="cameraDisplayUpdate"
                      type="integer"
                      value="100"
                      description="the update period for the camera display in milliseconds (0=no display window)"/>
            <property name="trackingMode"
                      type="integer"
                      value="1"
                      combobox="only blob tracking//calibrated eye tracking//calibrated eye tracking with head pose estimation"
                      description="desired tracking mode"/>
            <property name="minArea"
                      type="integer"
                      value="100"
                      description="minimum Area for pupil detection"/>
            <property name="maxArea"
                      type="integer"
                      value="3000"
                      description="maximum Area for pupil detection"/>
            <property name="roundness"
                      type="double"
                      value="0.92"
                      description="roundness criteria for pupil detection (1=perfect circle)"/>
            <property name="glintBrightness"
                      type="integer"
                      value="100"
                      description="threshold brightness for glint removal (0-255)"/>
            <property name="xMin"
                      type="integer"
                      value="0"
                      description="minimum value for output at port X"/>
            <property name="xMax"
                      type="integer"
                      value="2000"
                      description="maximum value for output at port X (0 for auto-detect screen x-resolution)"/>
            <property name="yMin"
                      type="integer"
                      value="0"
                      description="minimum value for output at port Y"/>
            <property name="yMax"
                      type="integer"
                      value="1024"
                      description="maximum value for output at port Y (0 for auto-detect screen y-resolution)"/>
            <property name="calibrationStepsX"
                      type="integer"
                      value="3"
                      description="calibration sections in X direction (must be 2 or more)"/>
            <property name="calibrationStepsY"
                      type="integer"
                      value="3"
                      description="calibration sections in Y direction (must be 2 or more)"/>
            <property name="averaging"
                      type="integer"
                      value="10"
                      description="averaging steps for output calculation (must be less than 30)"/>
            <property name="screenSize"
                      type="double"
                      value="22"
                      description="screen diagonal in inches"/>
            <property name="minBlinkDuration"
                      type="integer"
                      value="300"
                      description="minimum idle time for blink detection (0=disable blink detection)"/>
            <property name="maxBlinkDuration"
                      type="integer"
                      value="800"
                      description="maximum idle time for blink detection"/>
        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>1500</height>
        </gui>
    </componentType>


    <componentType id="asterics.EyeTribe"
                   canonical_name="eu.asterics.component.sensor.eyetribe.EyeTribeInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>interfaces to the EyeTribe Gaze tracking system</description>
        <ports>

			<outputPort id="gazeX">
				<description>eye gaze x-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gazeY">
				<description>eye gaze y-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="posX">
				<description>eye x-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="posY">
				<description>eye y-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="fixationTime">
				<description>time user fixates a spot</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="closeTime">
				<description>time user closes eyes</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="startCalibration">
				<description>to start the calibration process</description>
			</eventListenerPort>
			<eventListenerPort id="offsetCorrection">
				<description>to apply an offset correction to the current gazepoint</description>
			</eventListenerPort>
			<eventListenerPort id="removeLastOffsetCorrection">
				<description>remove the last offset correction point from the list of correction points</description>
			</eventListenerPort>

			<eventTriggererPort id="blink">
				<description>triggered when eye blink occurs</description>
			</eventTriggererPort>
			<eventTriggererPort id="longblink">
				<description>triggered when long eye blink occurs</description>
			</eventTriggererPort>
			<eventTriggererPort id="fixation">
				<description>triggered when user fixates spot on screen for a particular time</description>
			</eventTriggererPort>
			<eventTriggererPort id="fixationEnd">
				<description>triggered when user stops a fixation</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="minBlinkTime"
				type="integer"
				value="50"
				description="minimum eye close time (in milliseconds) for triggering an eye blink event"/>
			<property name="midBlinkTime"
				type="integer"
				value="200"
				description="eye close time (in milliseconds) to decide short/long blink event"/>
			<property name="maxBlinkTime"
				type="integer"
				value="2000"
				description="longer eye close times (in milliseconds) will not create eye blink events"/>
			<property name="fixationTime"
				type="integer"
				value="700"
				description="time for triggering a fixation event (in milliseconds)"/>
			<property name="pupilPositionMode"
				type="integer"
				value="0"
                description="the mode decides which pupil coordinates are sent to the posX and posY output ports: left eye, right eye or average;  the coordinates are in the range (0-1000)"
                combobox="left eye//right eye//average of left and right eye"/>
			<property name="offsetCorrectionRadius"
				type="integer"
				value="150"
				description="radius (in pixels) in which offset correction spots are active"/>
			<property name="offsetCorrectionMode"
				type="integer"
				value="0"
                description="one stage: look around to change offset, send another event to finish; two stage: look at gaze point first, then on cursor "
                combobox="one stage manual offset correction//two stage automatic offset correction"/>
        </properties>

    </componentType>


    <componentType id="asterics.EyeX"
                   canonical_name="eu.asterics.component.sensor.eyex.EyeXInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>interfaces to the EyeX Gaze tracking system</description>
        <ports>
			<inputPort id="xOffset">
				<description>offset for x gaze position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="yOffset">
				<description>offset for y gaze position</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<outputPort id="gazeX">
				<description>eye gaze x-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gazeY">
				<description>eye gaze y-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="posX">
				<description>eye x-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="posY">
				<description>eye y-coordinate</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="fixationTime">
				<description>time user fixates a spot</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="closeTime">
				<description>time user closes eyes</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="offsetCorrection">
				<description>to apply an offset correction to the current gazepoint</description>
			</eventListenerPort>
			<eventListenerPort id="removeLastOffsetCorrection">
				<description>remove the last offset correction spot from the list of correction points</description>
			</eventListenerPort>
			<eventListenerPort id="stopOffsetCorrection">
				<description>to stop offset correction mode</description>
			</eventListenerPort>
			<eventListenerPort id="createAndCalibrateGuestProfile">
				<description>creates a new guest-profile and calibrates it</description>
			</eventListenerPort>
			<eventListenerPort id="calibrateCurrentProfile">
				<description>calibrates the current profile</description>
			</eventListenerPort>
			<eventListenerPort id="resetOffset">
				<description>reset the x and y offset input port values to 0</description>
			</eventListenerPort>
			<eventListenerPort id="switchToOffsetCorrectionSpots">
				<description>enables setting of offset correction spots</description>
			</eventListenerPort>
			<eventListenerPort id="switchToPermanentOffsetCorrection">
				<description>enables the permanent offset correction mode</description>
			</eventListenerPort>
			<eventListenerPort id="switchToCombinedOffsetCorrection">
				<description>enables the combined offset correction mode</description>
			</eventListenerPort>
			<eventListenerPort id="switchToSendCoordinatesEvent">
				<description>enables the SendCoordinatesEvent mode</description>
			</eventListenerPort>
			<eventListenerPort id="sendCoordinatesEvent">
				<description>sends current tracking coordinates if SendCoordinatesEvent mode is active</description>
			</eventListenerPort>
			<eventListenerPort id="activate">
				<description>activate eyetracker</description>
			</eventListenerPort>
			<eventListenerPort id="deactivate">
				<description>deactivate eyetracker</description>
			</eventListenerPort>
			<eventTriggererPort id="blink">
				<description>triggered when eye blink occurs</description>
			</eventTriggererPort>
			<eventTriggererPort id="longblink">
				<description>triggered when long eye blink occurs</description>
			</eventTriggererPort>
			<eventTriggererPort id="fixation">
				<description>triggered when user fixates spot on screen for a particular time</description>
			</eventTriggererPort>
			<eventTriggererPort id="fixationEnd">
				<description>triggered when user stops a fixation</description>
			</eventTriggererPort>
		</events>			
        <properties>
			<property name="enabled"
				type="boolean"
				value="true"
				description="selects if the eyetracker is enabled at startup"/>
			<property name="averaging"
				type="integer"
				value="4"
				description="number of values for internal averaging of gazeX and gazeY outputs"/>
			<property name="minBlinkTime"
				type="integer"
				value="50"
				description="minimum eye close time (in milliseconds) for triggering an eye blink event"/>
			<property name="midBlinkTime"
				type="integer"
				value="200"
				description="eye close time (in milliseconds) to decide short/long blink event"/>
			<property name="maxBlinkTime"
				type="integer"
				value="2000"
				description="longer eye close times (in milliseconds) will not create eye blink events"/>
			<property name="fixationTime"
				type="integer"
				value="700"
				description="time for triggering a fixation event (in milliseconds)"/>
			<property name="pupilPositionMode"
				type="integer"
				value="0"
                description="the mode decides which pupil coordinates are sent to the posX and posY output ports: left eye, right eye or average;  the coordinates are in the range (0-1000)"
                combobox="left eye//right eye//average of left and right eye//off"/>
			<property name="offsetCorrectionRadius"
				type="integer"
				value="150"
				description="radius (in pixels) where offset correction spots are active"/>
			<property name="offsetCorrectionMode"
				type="integer"
				value="1"
                description="correction spots: allows to add offset correction spots; permanent: permanently adds incoming offset values; combined: coarse positioning via eye gaze and fine positioning via offset inputs; by event: only send coordinates via incoming event"
                combobox="correction spots//permanent offset correction//combined offset correction//send coordinates by event"/>
        </properties>

    </componentType>


    <componentType id="asterics.FacetrackerCLM"
                   canonical_name="eu.asterics.component.sensor.facetrackerCLM2.FacetrackerCLM2Instance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Facetracker plugin. Ideal in mouse control models. It also implements a blink detection system.</description>
        <ports>
			<outputPort id="Roll">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Pitch">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Yaw">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			
			<outputPort id="PosX">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="PosY">
				<description>Dummy Value and name  for the moment</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Scale">
				<description>Scale</description>
				<dataType>double</dataType></outputPort>

			<outputPort id="BrowLift">
				<description>distance from eye to eyebrow (can be used to detect brow lifting)</description>
				<dataType>integer</dataType></outputPort>

			<outputPort id="LipDistance">
				<description>distance from upper to lower lip (can be used to detect mouth open/close)</description>
				<dataType>integer</dataType></outputPort>

			<outputPort id="EyeLeft">
				<description>State of the Left Eye (Open 0 /Close 1/Other -1)</description>
				<dataType>integer</dataType></outputPort>
			<outputPort id="EyeRight">
				<description>State of the Right Eye (Open 0 /Close 1/Other -1)</description>
				<dataType>integer</dataType></outputPort></ports>
		<events>
			<eventTriggererPort id="EyebrowsRaised">
				<description>etp description</description>
			</eventTriggererPort>
			<eventListenerPort id="reset">
				<description>Forces Reset</description>
			</eventListenerPort>
			<eventListenerPort id="showCameraSettings">
				<description>Opens Camera Settings Dialog</description></eventListenerPort>
			<eventListenerPort id="setReferencePose">
				<description>Sets the reference pose.</description></eventListenerPort></events>			
        <properties>
			<property name="cameraSelection" type="integer"
				description="the camera device to be opened"
				combobox="first camera//second camera//third camera//forth camera//fifth camera"
				value="0" />
			<property name="cameraResolution" type="integer" value="1" description="Desired camera resolution" combobox="160x120//320x240//640x480"></property>
			<property name="modelName" type="string" value="Generic" description="The name of the model file without the extension."></property>
			<property name="cameraDisplayUpdate" type="integer" description="the update period for the camera display in milliseconds (0=no display window)" value="100"></property></properties>
        <gui IsExternalGUIElement="true">
        	<width>2000</width>
        	<height>1500</height></gui></componentType>


    <componentType id="asterics.FacetrackerLK"
                   canonical_name="eu.asterics.component.sensor.facetrackerLK.FacetrackerLKInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>Webcamera-based face tracking sensor</description>
        <ports>
            <outputPort id="noseX">
                <description>Output port of nose X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="noseY">
                <description>Output port of nose Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinX">
                <description>Output port of chin X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinY">
                <description>Output port of chin Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="init">
                <description>perform new face detection when head is centered</description>
            </eventListenerPort>
            <eventListenerPort id="showCameraSettings">
                <description>shows Camera Settings Window</description>
            </eventListenerPort> 
            <eventListenerPort id="saveProfile">
                <description>save camera profile to file</description>
            </eventListenerPort>                        
        </events>
        <properties>
            <property name="cameraSelection"
                      type="integer"
                      value="0"
                      combobox="first camera//second camera//third camera//forth camera//fifth camera"
                      description="the camera device to be used"/>
            <property name="cameraResolution"
                      type="integer"
                      value="1"
                      combobox="160x120//320x240//352x288//640x480//800x600//1024x768//1600x1200"
                      description="desired camera resolution"/>
            <property name="cameraDisplayUpdate"
                      type="integer"
                      value="100"
                      description="the update period for the camera display in milliseconds (0=no display window)"/>
            <property name="cameraProfile" 
                      type="string"
                      value=""
                      description="Filename of the camera profile"/>            
                              
        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>1500</height>
        </gui>
    </componentType>



    <componentType id="asterics.FolderBrowser"
                   canonical_name="eu.asterics.component.sensor.folderbrowser.FolderBrowserInstance">
        <type subtype="File System">sensor</type>
        <singleton>false</singleton>
        <description>browse folders and files in filesystem</description>
        <ports>

			<outputPort id="folderName">
				<description>name of the current folder (without path)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="folderPath">
				<description>name of the current folder (including path)</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="fileNames">
				<description>names of the files in current folder</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="filePaths">
				<description>names of the files in current folder (including path)</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="next">
				<description>next folder in current directory</description>
			</eventListenerPort>
			<eventListenerPort id="previous">
				<description>previous folder in current directory</description>
			</eventListenerPort>
			<eventListenerPort id="enter">
				<description>enter current folder</description>
			</eventListenerPort>
			<eventListenerPort id="exit">
				<description>exit current folder</description>
			</eventListenerPort>
			<eventListenerPort id="current">
				<description>output current folder</description>
			</eventListenerPort>
			<eventListenerPort id="listFiles">
				<description>lists files in current folder</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="initialFolder"
				type="string"
				value="."
				description="initial folder where browsing starts"/>
			<property name="wrapAround"
				type="boolean"
				value="true"
				description="wrap around after last entry"/>
			<property name="exitInitialFolder"
				type="boolean"
				value="false"
				description="allow to exit the initial folder"/>
			<property name="autoListFiles"
				type="boolean"
				value="false"
				description="automatically output files on folder entry "/>
			<property name="noFolderMessage"
				type="string"
				value="no subfolder available"
				description="message to be sent to folderName port if no subfolder is available"/>
			<property name="noFileMessage"
				type="string"
				value="no file available"
				description="message to be sent to fileNames port if no file is available"/>
        </properties>

    </componentType>


    <componentType id="asterics.FS20Receiver"
                   canonical_name="eu.asterics.component.sensor.fs20receiver.FS20ReceiverInstance">
        <type subtype="Home Control">sensor</type>
        <singleton>true</singleton>
        <description>Receiver Plugin for the FS20 Home automatisation system</description>
        <ports>
			<outputPort id="fs20command">
                <description>FS20String containing housecode, senderaddress and command</description>
                <dataType>string</dataType>
            </outputPort>

        </ports>
		<events>

			<eventTriggererPort id="off">
				<description>Switch off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel1">
				<description>Light on 6,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel2">
				<description>Light on 12,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel3">
				<description>Light on 18,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel4">
				<description>Light on 25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel5">
				<description>Light on 31,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel6">
				<description>Light on 37,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel7">
				<description>Light on 43,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel8">
				<description>Light on 50%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel9">
				<description>Light on 56,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel10">
				<description>Light on 62,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel11">
				<description>Light on 68,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel12">
				<description>Light on 75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel13">
				<description>Light on 81,25%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel14">
				<description>Light on 87,5%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel15">
				<description>Light on 93,75%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onLevel16">
				<description>Light on 100%</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevel">
				<description>Switch on old level</description>
			</eventTriggererPort>
			<eventTriggererPort id="toggle">
				<description>Toggle between off an on, old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUp">
				<description>Dim up for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimDown">
				<description>Dim down for one step</description>
			</eventTriggererPort>
			<eventTriggererPort id="dimUpAndDown">
				<description>Dim up, then down, then up etc. </description>
			</eventTriggererPort>
			<eventTriggererPort id="programTimer">
				<description>Start/stop programmable timer</description>
			</eventTriggererPort>
			<eventTriggererPort id="offForTimerThenOldLevel">
				<description>Off for internal timer, than old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOff">
				<description>On for internal timer, than off</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenOff">
				<description>On (old value) for internal timer, then off</description>
			</eventTriggererPort>
			<eventTriggererPort id="reset">
				<description>reset to factory default</description>
			</eventTriggererPort>
			<eventTriggererPort id="onForTimerThenOldLevel">
				<description>On for internal timer, then old value</description>
			</eventTriggererPort>
			<eventTriggererPort id="onOldLevelForTimerThenPreviousState">
				<description>On (old value) for internal timer, then old value</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="Housecode"
				type="integer"
				value="11111111"
				description="The housecode of the receiver"/>
			<property name="Sendaddress"
				type="integer"
				value="1111"
				description="The send address of the receiver"/>
        </properties>
    </componentType>


    <componentType id="asterics.HeadPositionHC"
                   canonical_name="eu.asterics.component.sensor.headpositionhc.HeadPositionHCInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>false</singleton>
        <description>Picking between choices with moving the head to the right or left</description>
        <ports>

			<outputPort id="CellNumber">
				<description>Gives the number of the selected Cell</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="Select">
				<description>sends an event, when a cell is selected</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="ChoicesEachSide"
				type="integer"
				value="3"
				combobox="1//2//3//4//5//6"
				description="Sets the number of choices for each side (left and right) "/>
			<property name="Angle1LeftSide"
				type="integer"
				value="160"
				description="Sets the UpperValue of the angle for the first Choice of the left side "/>
			<property name="Angle2LeftSide"
				type="integer"
				value="120"
				description="Sets the UpperValue of the angle for the second Choice of the left side "/>
			<property name="Angle3LeftSide"
				type="integer"
				value="100"
				description="Sets the UpperValue of the angle for the third Choice of the left side "/>
			<property name="Angle4LeftSide"
				type="integer"
				value="65"
				description="Sets the UpperValue of the angle for the 4. Choice of the left side "/>
			<property name="Angle5LeftSide"
				type="integer"
				value="-100000"
				description="Sets the UpperValue of the angle for the 5. Choice of the left side "/>
			<property name="Angle6LeftSide"
				type="integer"
				value="100000"
				description="Sets the UpperValue of the angle for the 6. Choice of the left side "/>
			<property name="Angle1RightSide"
				type="integer"
				value="20"
				description="Sets the LowerValue of the angle for the first Choice of the right side"/>
			<property name="Angle2RightSide"
				type="integer"
				value="60"
				description="Sets the LowerValue of the angle for the second Choice of the right side"/>
			<property name="Angle3RightSide"
				type="integer"
				value="80"
				description="Sets the LowerValue of the angle for the third Choice of the right side"/>
			<property name="Angle4RightSide"
				type="integer"
				value="110"
				description="Sets the LowerValue of the angle for the 4. Choice of the right side"/>
			<property name="Angle5RightSide"
				type="integer"
				value="100000"
				description="Sets the LowerValue of the angle for the 5. Choice of the right side"/>
			<property name="Angle6RightSide"
				type="integer"
				value="-100000"
				description="Sets the LowerValue of the angle for the 6. Choice of the right side"/>
			<property name="PathForHaarCascade"
				type="string"
				value="./data/service.computervision/"
				description=" Path to the directory of the HaarCascade files"/>
			<property name="CameraID"
				type="integer"
				value="0"
				description="The ID of the camera"/>
			<property name="CounterResettingROI"
				type="integer"
				value="10"
				description="After the number of the value new images without detecting a feature the face will be detected again to set a new ROI"/>
			<property name="CounterToSendSelectEvent"
				type="integer"
				value="4"
				description="The angle has to be for X images in the same range to send the select Event"/>

        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>2000</height>
        </gui>
    </componentType>


    <componentType id="asterics.HoverPanel"
                   canonical_name="eu.asterics.component.sensor.hoverpanel.HoverPanelInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>The HoverPanel allows interaction </description>
        <ports>
			<inputPort id="x">
				<description>x coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>
			<inputPort id="y">
				<description>y coordinate input</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports>
		<events>
			<eventListenerPort id="activate">
				<description>activates the HoverPanel</description>
			</eventListenerPort>
			<eventListenerPort id="deactivate">
				<description>deactivates the HoverPanel</description>
			</eventListenerPort>

			<eventTriggererPort id="selected">
				<description>this event is raised when the HoverPanel gets selected</description>
			</eventTriggererPort>
			<eventTriggererPort id="enter">
				<description>this event is raised when the HoverPanel is entered</description>
			</eventTriggererPort>
			<eventTriggererPort id="exit">
				<description>this event is raised when the HoverPanel is left</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="dataSource"
				type="integer"
				value="0"
				combobox="mouseCursor//coordinateInputs"
				description="selects the coordinate data source for interaction with the HoverPanel"/>
			<property name="caption"
				type="string"
				value="hover"
				description="caption of the HoverPanel"/>
			<property name="fontSize"
				type="integer"
				value="14"
				description="caption font size"/>				
			<property name="textColor"
				type="integer"
				value="6"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Text color"/>
			<property name="backgroundColor"
				type="integer"
				value="0"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Background color of the panel"/>
			<property name="activationColor"
				type="integer"
				value="2"
				combobox="black//blue//cyan//darkgray//gray//green//lightgray//magenta//orange//pink//red//white//yellow"
				description="Color for activation of the panel"/>

			<property name="dwellTime"
				type="integer"
				value="200"
				description="selection dwell time in milliseconds"/>
			<property name="idleTime"
				type="integer"
				value="50"
				description="selection idle time in milliseconds"/>
			<property name="opacity"
				type="integer"
				value="50"
				description="opacity (0-100%)"/>
			<property name="stayActive"
				type="boolean"
				value="false"
				description="remain selected after hovering"/>

        </properties>
        
        <gui IsExternalGUIElement="true">
            <width>800</width>
            <height>1000</height>
        </gui>
                
    </componentType>


    <componentType id="asterics.IntelRealSense"
                   canonical_name="eu.asterics.component.sensor.intelrealsense.IntelRealSenseInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>false</singleton>
        <description>Plugin for Intel Real Sense 3D cameras.</description>
        <ports>

			<outputPort id="h">
				<description>The face rectangle height in pixels</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="w">
				<description>The face rectangle width in pixels.</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="x">
				<description>The x coordinate of the top left corner of the face rectangle.</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="y">
				<description>The y coordinate of the top left corner of the face rectangle.</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="roll">
				<description>Degree of head roll</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="yaw">
				<description>Degree of head yaw (left - right)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pitch">
				<description>Degree of head pitch (up - down)</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="browRaiserLeft">
				<description>browRaiserLeft expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="browRaiserRight">
				<description>browRaiserRight expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="browLowererLeft">
				<description>browLowererLeft expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="browLowererRight">
				<description>browLowererRight expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="smile">
				<description>smile expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="kiss">
				<description>kiss expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="mouthOpen">
				<description>mouthOpen expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="tongueOut">
				<description>tongueOut expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="eyesClosedLeft">
				<description>eyesClosedLeft expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="eyesClosedRight">
				<description>eyesClosedRight expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="eyesTurnLeft">
				<description>eyesTurnLeft expression happened</description></eventTriggererPort>
			<eventTriggererPort id="eyesTurnRight">
				<description>eyesTurnRight expression happened</description></eventTriggererPort>
			<eventTriggererPort id="eyesUp">
				<description>eyesUp expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="eyesDown">
				<description>eyesDown expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffLeft">
				<description>puffLeft expression happened</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffRight">
				<description>puffRight expression happened</description>
			</eventTriggererPort>

		</events>			
        <properties>
            <property name="deviceModel"
                      type="integer"
                      value="0"
                      combobox="F200//R200//R200_Enhanced//SR300"
                      description="Camera model, one of: F200, R200, R200_Enhanced, SR300"/>				
			<property name="enableExpressions"
				type="boolean"
				value="true"
				description="Enable,Disable facial expressions"/>
			<property name="displayGUI"
				type="boolean"
				value="true"
				description="Enable, Disable camera gui."/>
			<property name="scoreBrowRaiserLeft"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreBrowRaiserRight"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreBrowLowererLeft"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreBrowLowererRight"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreSmile"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreKiss"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreMouthOpen"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreThongueOut"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesClosedLeft"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesClosedRight"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesTurnLeft"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesTurnRight"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesUp"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scoreEyesDown"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scorePuffLeft"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>
			<property name="scorePuffRight"
				type="integer"
				value="50"
				description="Set score threshold value of expression to trigger event."/>

        </properties>

    </componentType>


    <componentType id="asterics.JoystickCapture"
                   canonical_name="eu.asterics.component.sensor.joystickcapture.JoystickCaptureInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Gets data from the first available Joystick device; up to 6 axis and 20 buttons can be used; Note the different order of buttons 1-4 in a PC-compatible gamepad to the PS3 sixaxis controller (HIDjoystick)</description>
        <ports>

			<outputPort id="x">
				<description>X-Axis (Left-X)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="y">
				<description>Y-Axis (Left-Y)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="z">
				<description>Z-Axis (Right-X)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="r">
				<description>R-Axis (Right-Y)</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="u">
				<description>U-Axis</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="v">
				<description>V-Axis</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pov">
				<description>Point-Of-Vision (Direction 1-8)</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
            <eventTriggererPort id="pressedButton1">
                <description>button 1 (Triangle) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton1">
                <description>button 1 (Triangle) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton2">
                <description>button 2 (Circle) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton2">
                <description>button 2 (Circle) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton3">
                <description>button 3 (Cross) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton3">
                <description>button 3 (Cross) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton4">
                <description>button 4 (Square) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton4">
                <description>button 4 (Square) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton5">
                <description>button 5 (L1) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton5">
                <description>button 5 (L1) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton6">
                <description>button 6 (R1) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton6">
                <description>button 6 (R1) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton7">
                <description>button 7 (L2) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton7">
                <description>button 7 (L2) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton8">
                <description>button 8 (R2) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton8">
                <description>button 8 (R2) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton9">
                <description>button 9 (Select) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton9">
                <description>button 9 (Select) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton10">
                <description>button 10 (Start) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton10">
                <description>button 10 (Start) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton11">
                <description>button 11 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton11">
                <description>button 11 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton12">
                <description>button 12 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton12">
                <description>button 12 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton13">
                <description>button 13 (PS) has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton13">
                <description>button 13 (PS) has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton14">
                <description>button 14 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton14">
                <description>button 14 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton15">
                <description>button 15 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton15">
                <description>button 15 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton16">
                <description>button 16 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton16">
                <description>button 16 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton17">
                <description>button 17 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton17">
                <description>button 17 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton18">
                <description>button 18 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton18">
                <description>button 18 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton19">
                <description>button 19 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton19">
                <description>button 19 has been released</description>
            </eventTriggererPort>
            <eventTriggererPort id="pressedButton20">
                <description>button 20 has been pressed</description>
            </eventTriggererPort>
            <eventTriggererPort id="releasedButton20">
                <description>button 20 has been released</description>
            </eventTriggererPort>

		</events>			
        <properties>
            <property name="updatePeriod"
                      type="integer"
                      value="100"
                      description="the update period for getting new values from the joystick device (in milliseconds)"/>
			
        </properties>

    </componentType>


    <componentType id="asterics.KeyboardCapture" 
                   canonical_name="eu.asterics.component.sensor.keyboardcapture.KeyboardCaptureInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Keyboard capture</description> 
        <ports>
            <outputPort id="keyCode">
                <description>Output port for keycode</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="words">
                <description>Output port for individual words</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
         <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event port triggers on recognition of command 1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event port triggers on recognition of command 2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event port triggers on recognition of command 3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event port triggers on recognition of command 4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event port triggers on recognition of command 5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event port triggers on recognition of command 6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand8">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand9">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand10">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
        </events>
      
        <properties>
            <property name="blockEvents"
                      type="boolean"
                      value="true"
                      description="if selected, keyboard events will not be processed on the local system"/>
            <property name="mode"
                      type="integer"
                      value="0"
                      description="the mode of operation"
                      combobox="process words seperated by space//process single characters"/>
            <property name="command1"
                      type="string"
                      value="one"
                      description="if recognized, event1 will be triggered"/>
            <property name="command2"
                      type="string"
                      value="two"
                      description="if recognized, event2 will be triggered"/>
            <property name="command3"
                      type="string"
                      value="three"
                      description="if recognized, event3 will be triggered"/>
            <property name="command4"
                      type="string"
                      value="four"
                      description="if recognized, event4 will be triggered"/>
            <property name="command5"
                      type="string"
                      value="five"
                      description="if recognized, event5 will be triggered"/>
            <property name="command6"
                      type="string"
                      value="six"
                      description="if recognized, event6 will be triggered"/>
            <property name="command7"
                      type="string"
                      value="seven"
                      description="if recognized, event7 will be triggered"/>
            <property name="command8"
                      type="string"
                      value="eight"
                      description="if recognized, event8 will be triggered"/>
            <property name="command9"
                      type="string"
                      value="nine"
                      description="if recognized, event9 will be triggered"/>
            <property name="command10"
                      type="string"
                      value="ten"
                      description="if recognized, event10 will be triggered"/>
        </properties>
    </componentType>



    <componentType id="asterics.KeyCapture"
                   canonical_name="eu.asterics.component.sensor.keycapture.KeyCaptureInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>false</singleton>
        <description>captures key presses and releases for a single keyboard key</description>
        <ports>
			<inputPort id="keyCode">
				<description>keycode of the key to capture</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>


        </ports> 
		<events>
			<eventListenerPort id="enable">
				<description>enable capturing and blocking</description>
			</eventListenerPort>
			<eventListenerPort id="disable">
				<description>disable capturing and blocking</description>
			</eventListenerPort>
			<eventListenerPort id="block">
				<description>don't propagate keypresses of the key with the specified keycode</description>
			</eventListenerPort>
			<eventListenerPort id="unblock">
				<description>propagate keypresses of the key with the specified keycode</description>
			</eventListenerPort>

			<eventTriggererPort id="keyPressed">
				<description>event gets fired when the specified key was pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="keyReleased">
				<description>event gets fired when the specified key was released</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="keyCode"
				type="integer"
				value="0"
				description="keycode of the key to capture, see help for more information"/>
			<property name="block"
				type="boolean"
				value="false"
				description="if ticked keypresses of the specified key will not be sent to the operating system"/>

        </properties>

    </componentType>


    <componentType id="asterics.Kinect"
                   canonical_name="eu.asterics.component.sensor.kinect.KinectInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>My Plugin description</description>
        <ports>

			<outputPort id="HeadX">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadY">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadZ">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandX">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandY">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftHandZ">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandX">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandY">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightHandZ">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootX">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootY">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="rightFootZ">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootX">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootY">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="leftFootZ">
				<description></description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
		<events>


		</events>			
        <properties>
			<property name="visualize"
				type="boolean"
				value="true"
				description="show JPanel"/>
			<property name="centerZeroPoint"
				type="boolean"
				value="false"
				description="if true the zero point (0,0) is at the center of the image"/>
        </properties>

    </componentType>


    <componentType id="asterics.KinectJ4K"
                   canonical_name="eu.asterics.component.sensor.kinectj4k.KinectJ4KInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>false</singleton>
        <description>My Plugin description</description>
        <ports>

			<outputPort id="FootLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="FootLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="FootLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="FootRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="FootRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="FootRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AnkleRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="KneeRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipCenterX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipCenterY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipCenterZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HipRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SpineX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SpineY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="SpineZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderCenterX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderCenterY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderCenterZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ShoulderRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="ElbowRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="WristRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandLeftX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandLeftY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandLeftZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandRightX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandRightY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HandRightZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadX">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadY">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="HeadZ">
				<description>output port description</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>

        </properties>

    </componentType>


    <componentType id="asterics.Lightscore"
                   canonical_name="eu.asterics.component.sensor.lightscore.LightscoreInstance">
        <type subtype="Sensor Modules">sensor</type>

        <singleton>false</singleton>
        <description>measures and outputs time in milliseconds and fires events (periodically or once)</description>
        <ports>
        
			<inputPort id="led1">
				<description>set light intensity for led1</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="led2">
				<description>set light intensity for led2</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			<inputPort id="led3">
				<description>set light intensity for led3</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>double</dataType>
			</inputPort>
			
			<outputPort id="red">
				<description>red light intensity</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="green">
				<description>green light intensity</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="blue">
				<description>blue light intensity</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="white">
				<description>white light intensity</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="accX">
				<description>acceleration x axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="accY">
				<description>acceleration Y axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="accZ">
				<description>acceleration Z axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="magX">
				<description>magnetometer x axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="magY">
				<description>magnetometer Y axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="magZ">
				<description>magnetometer Z axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="gyrX">
				<description>gyroscope x axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="gyrY">
				<description>gyroscope y axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="gyrZ">
				<description>gyroscope z axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="yaw">
				<description>yaw in euler degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="pitch">
				<description>pitch in euler degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="roll">
				<description>roll in euler degrees</description>
				<dataType>double</dataType>
			</outputPort>
        </ports>
		<events>
			<eventListenerPort id="start">
				<description>start data output</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stop data output</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="autostart"
				type="boolean"
				value="false"
				description="autostart data output"/>
			<property name="id"
				type="string"
				value="none"
				description="id string of lightscores sensor"/>
        </properties>
    </componentType>



    <componentType id="asterics.LineReader"
                   canonical_name="eu.asterics.component.sensor.linereader.LineReaderInstance">
        <type subtype="File System">sensor</type>
        <singleton>false</singleton>
        <description>reads contents of a text file line by line</description>
        <ports>
			<inputPort id="skipLines">
				<description>a number of lines to skip (read continues at next line)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

			<outputPort id="actLine">
				<description>the current line which is read from the file</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="readNextLine">
				<description>reads the next line from the file</description>
			</eventListenerPort>
			<eventListenerPort id="resetToFirstLine">
				<description>resets the file pointer to the beginning of the file</description>
			</eventListenerPort>

			<eventTriggererPort id="endOfFile">
				<description>triggered when end of file or other error occurred </description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="fileName"
				type="string"
				value="test.txt"
				description="name of the file to open"/>

        </properties>

    </componentType>


    <componentType id="asterics.Lipmouse"
                   canonical_name="eu.asterics.component.sensor.lipmouse.LipmouseInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Lipmouse CIM</description>
        <ports>
			<inputPort id="AtCmd">
				<description>AT-Command to be sent to Lipmouse</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="X">
				<description>X's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="Y">
				<description>Y's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pressure">
				<description>Pressure value</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="calibration">
				<description>for calibrating the mouse</description>
			</eventListenerPort>
			<eventListenerPort id="start">
				<description>start lipmouse</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stop lipmouse</description>
			</eventListenerPort>
			<eventListenerPort id="setLed1">
				<description>switch on led1</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed1">
				<description>switch off led1</description>
			</eventListenerPort>
			<eventListenerPort id="setLed2">
				<description>switch on led2</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed2">
				<description>switch off led2</description>
			</eventListenerPort>
			<eventListenerPort id="setLed3">
				<description>switch on led3</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed3"> 
				<description>switch off led3</description>
			</eventListenerPort>

			<eventTriggererPort id="sip">
				<description>sip action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="longSip">
				<description>long sip action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="sipStart">
				<description>sip action started</description>
			</eventTriggererPort>
			<eventTriggererPort id="sipEnd">
				<description>sip action ended</description>
			</eventTriggererPort>
			<eventTriggererPort id="puff">
				<description>puff action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="longPuff">
				<description>long puff action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffStart">
				<description>puff action started</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffEnd">
				<description>puff action ended</description>
			</eventTriggererPort>
			<eventTriggererPort id="button1Pressed">
				<description>button1 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button1Released">
				<description>button1 has been released</description>
			</eventTriggererPort>
			<eventTriggererPort id="button2Pressed">
				<description>button2 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button2Released">
				<description>button2 has been released</description>
			</eventTriggererPort>
			<eventTriggererPort id="button3Pressed">
				<description>button3 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button3Released">
				<description>button3 has been released</description>
			</eventTriggererPort>

		</events>			
        <properties>
            <property name="uniqueID"
              type="string"
              value="not used"
              getStringList="true"
              description="ID (if more than one devices of this kind are connected)"/>
        
			<property name="periodicADCUpdate"
				type="integer"
				value="50"
				description="Automatic update of ADC values (time in milliseconds, 0=off)"/>
			<property name="sipThreshold"
				type="integer"
				value="505"
				description="Threshold for a sip action"/>
			<property name="sipTime"
				type="integer"
				value="700"
				description="time to select short/long sip action "/>
			<property name="puffThreshold"
				type="integer"
				value="520"
				description="Threshold for a puff action"/>
			<property name="puffTime"
				type="integer"
				value="700"
				description="time to select short/long puff action "/>
			<property name="enableStandaloneFunctions"
				type="boolean"
				value="false"
				description="if checked, the FlipMouse will perform functions according to slot settings"/>

        </properties>

    </componentType>


    <componentType id="asterics.LipmouseIR"
                   canonical_name="eu.asterics.component.sensor.lipmouseir.LipmouseIRInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>LipmouseIR CIM</description>
        <ports>
			<inputPort id="DeviceType">
				<description>Type of the device to be controlled via IR (e.g.: TV)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="DeviceName">
				<description>Name of the device to be controlled via IR (e.g.: Sony, Samsung, etc.)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			<inputPort id="DeviceFunction">
				<description>Name of function of the device (e.g.: On, Off, VolumeUp, etc.)</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
			
			<outputPort id="X">
				<description>X's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="Y">
				<description>Y's value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="Pressure">
				<description>Presure value</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="Calibration">
				<description>For calibrating the mouse</description>
			</eventListenerPort>
			<eventListenerPort id="SendIRCode">
				<description>Send an IR Code to the Lipmouse</description>
			</eventListenerPort>
			<eventListenerPort id="RecordIRCode">
				<description>Record an IR Code through the Lipmouse</description>
			</eventListenerPort>

			<eventTriggererPort id="StartRecord">
				<description>Triggered when Lipmouse is recording</description>
			</eventTriggererPort>
			<eventTriggererPort id="StopRecord">
				<description>Triggered when Lipmouse has finished recording</description>
			</eventTriggererPort>
			
			<eventListenerPort id="setLed1">
				<description>switch on led1</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed1">
				<description>switch off led1</description>
			</eventListenerPort>
			<eventListenerPort id="setLed2">
				<description>switch on led2</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed2">
				<description>switch off led2</description>
			</eventListenerPort>
			<eventListenerPort id="setLed3">
				<description>switch on led3</description>
			</eventListenerPort>
			<eventListenerPort id="clearLed3">
				<description>switch off led3</description>
			</eventListenerPort>

			<eventTriggererPort id="sip">
				<description>sip action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="longSip">
				<description>long sip action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="sipStart">
				<description>sip action started</description>
			</eventTriggererPort>
			<eventTriggererPort id="sipEnd">
				<description>sip action ended</description>
			</eventTriggererPort>
			<eventTriggererPort id="puff">
				<description>puff action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="longPuff">
				<description>long puff action performed</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffStart">
				<description>puff action started</description>
			</eventTriggererPort>
			<eventTriggererPort id="puffEnd">
				<description>puff action ended</description>
			</eventTriggererPort>
			<eventTriggererPort id="button1Pressed">
				<description>button1 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button1Released">
				<description>button1 has been released</description>
			</eventTriggererPort>
			<eventTriggererPort id="button2Pressed">
				<description>button2 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button2Released">
				<description>button2 has been released</description>
			</eventTriggererPort>
			<eventTriggererPort id="button3Pressed">
				<description>button3 has been pressed</description>
			</eventTriggererPort>
			<eventTriggererPort id="button3Released">
				<description>button3 has been released</description>
			</eventTriggererPort>

		</events>			
        <properties>
        	<property name="uniqueID"
              type="string"
              value="not used"
              getStringList="true"
              description="ID (if more than one devices of this kind are connected)"/>
        
			<property name="periodicADCUpdate"
				type="integer"
				value="50"
				description="Automatic update of ADC values (time in milliseconds, 0=off)"/>
			<property name="sipThreshold"
				type="integer"
				value="505"
				description="Threshold for a sip action"/>
			<property name="sipTime"
				type="integer"
				value="700"
				description="time to select short/long sip action "/>
			<property name="puffThreshold"
				type="integer"
				value="520"
				description="Threshold for a puff action"/>
			<property name="puffTime"
				type="integer"
				value="700"
				description="time to select short/long puff action "/>
			<property name="IRCodeFilePath"
				type="string"
				value="./data/sensor.LipmouseIR/IRCodes.csv"
				description="Filepath to the file, where the IR Codes are stored"/>

        </properties>

    </componentType>


    <componentType id="asterics.MouseCapture"
                   canonical_name="eu.asterics.component.sensor.mousecapture.MouseCaptureInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Captures mouse cursor activity from local system</description> 
        <ports>
            <outputPort id="mouseX">
                <description>Output port mouse X movement</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseY">
                <description>Output port mouse Y movement</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventTriggererPort id="leftButtonPressed">
                <description>Event port triggers on left mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="leftButtonReleased">
                <description>Event port triggers on left mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="rightButtonPressed">
                <description>Event port triggers on right mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="rightButtonReleased">
                <description>Event port triggers on right mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="middleButtonPressed">
                <description>Event port triggers on middle mouse button press</description>
            </eventTriggererPort>
            <eventTriggererPort id="middleButtonReleased">
                <description>Event port triggers on middle mouse button released</description>
            </eventTriggererPort>
            <eventTriggererPort id="wheelUp">
                <description>Event port triggers when mouse wheel is moved up</description>
            </eventTriggererPort>
            <eventTriggererPort id="wheelDown">
                <description>Event port triggers when mouse wheel is moved down</description>
            </eventTriggererPort>
			<eventListenerPort id="blockEvents">
                <description>Eventlistener to block mouse events. This means the mouse events will not be processed by the local system.</description>
            </eventListenerPort>
			<eventListenerPort id="forwardEvents">
                <description>Forward mouse events to the local system</description>
            </eventListenerPort>
  			<eventListenerPort id="toggleBlock">
                <description>Toggles the block mouse event</description>
            </eventListenerPort>
  			<eventListenerPort id="pollMousePosition">
                <description>Gets current mouse cursor x/y values and outputs them</description>
            </eventListenerPort>
        </events>
        
        <properties>
            <property name="blockEvents"
                      type="boolean"
                      value="true"
                      description="if selected, mouse events will not be processed on the local system"/>
        </properties>
    </componentType>



    <componentType id="asterics.openBCI"
                   canonical_name="eu.asterics.component.sensor.openBCI.openBCIInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>This plugin receives an openBCI data stream.  8 Channels of bioelectric data can be processed.</description>
        <ports>

			<outputPort id="Channel1">
				<description>output port for channel1 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel2">
				<description>output port for channel2 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel3">
				<description>output port for channel3 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel4">
				<description>output port for channel4 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel5">
				<description>output port for channel5 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel6">
				<description>output port for channel6 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel7">
				<description>output port for channel7 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel8">
				<description>output port for channel8 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccX">
				<description>output port for Accelerometer X data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccY">
				<description>output port for Accelerometer Y data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccZ">
				<description>output port for Accelerometer Z data</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="ComPort"
				type="string"
				value="COM4"
				description="The COM Port which will be opened to receive the openBCI packet stream"/>
			<property name="BaudRate"
				type="integer"
				value="115200"
				description="The baud rate for the packet stream"/>
        </properties>
    </componentType>


    <componentType id="asterics.OpenViBE"
                   canonical_name="eu.asterics.component.sensor.openvibe.OpenViBEInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>UDP Server for transfer of OSC data</description>
        <ports>

			<outputPort id="CH1">
				<description>CH1 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>CH2 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>CH3 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>CH4 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>CH5 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>CH6 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>CH7 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>CH8 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH9">
				<description>CH9 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH10">
				<description>CH10 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH11">
				<description>CH11 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH12">
				<description>CH12 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH13">
				<description>CH13 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH14">
				<description>CH14 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH15">
				<description>CH15 (double)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH16">
				<description>CH16 (double)</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="TriggerOut">
				<description>Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_00">
				<description>OVTK_StimulationId_Label_00 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_01">
				<description>OVTK_StimulationId_Label_01 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_02">
				<description>OVTK_StimulationId_Label_02 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_03">
				<description>OVTK_StimulationId_Label_03 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_04">
				<description>OVTK_StimulationId_Label_04 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_05">
				<description>OVTK_StimulationId_Label_05 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_06">
				<description>OVTK_StimulationId_Label_06 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_07">
				<description>OVTK_StimulationId_Label_07 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_08">
				<description>OVTK_StimulationId_Label_08 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_09">
				<description>OVTK_StimulationId_Label_09 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0A">
				<description>OVTK_StimulationId_Label_0A Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0B">
				<description>OVTK_StimulationId_Label_0B Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_0C">
				<description>OVTK_StimulationId_Label_0C Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_Target">
				<description>OVTK_StimulationId_Label_Target Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Label_NonTarget">
				<description>OVTK_StimulationId_Label_NonTarget Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_0">
				<description>OVTK_StimulationId_Letter_0 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_1">
				<description>OVTK_StimulationId_Letter_1 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_2">
				<description>OVTK_StimulationId_Letter_2 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_3">
				<description>OVTK_StimulationId_Letter_3 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_4">
				<description>OVTK_StimulationId_Letter_4 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_5">
				<description>OVTK_StimulationId_Letter_5 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_6">
				<description>OVTK_StimulationId_Letter_6 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_7">
				<description>OVTK_StimulationId_Letter_7 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_8">
				<description>OVTK_StimulationId_Letter_8 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_9">
				<description>OVTK_StimulationId_Letter_9 Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_A">
				<description>OVTK_StimulationId_Letter_A Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_B">
				<description>OVTK_StimulationId_Letter_B Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_C">
				<description>OVTK_StimulationId_Letter_C Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_D">
				<description>OVTK_StimulationId_Letter_D Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_E">
				<description>OVTK_StimulationId_Letter_E Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_F">
				<description>OVTK_StimulationId_Letter_F Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_G">
				<description>OVTK_StimulationId_Letter_G Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_H">
				<description>OVTK_StimulationId_Letter_H Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_I">
				<description>OVTK_StimulationId_Letter_I Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_J">
				<description>OVTK_StimulationId_Letter_J Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_K">
				<description>OVTK_StimulationId_Letter_K Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_L">
				<description>OVTK_StimulationId_Letter_L Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_M">
				<description>OVTK_StimulationId_Letter_M Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_N">
				<description>OVTK_StimulationId_Letter_N Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_O">
				<description>OVTK_StimulationId_Letter_O Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_P">
				<description>OVTK_StimulationId_Letter_P Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Q">
				<description>OVTK_StimulationId_Letter_Q Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_R">
				<description>OVTK_StimulationId_Letter_R Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_S">
				<description>OVTK_StimulationId_Letter_S Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_T">
				<description>OVTK_StimulationId_Letter_T Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_U">
				<description>OVTK_StimulationId_Letter_U Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_V">
				<description>OVTK_StimulationId_Letter_V Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_W">
				<description>OVTK_StimulationId_Letter_W Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_X">
				<description>OVTK_StimulationId_Letter_X Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Y">
				<description>OVTK_StimulationId_Letter_Y Trigger Output in case of received data</description>
			</eventTriggererPort>
			<eventTriggererPort id="OVTK_StimulationId_Letter_Z">
				<description>OVTK_StimulationId_Letter_Z Trigger Output in case of received data</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="Port"
				type="integer"
				value="57110"
				description="AsTeRICS UDP OSC listening Port"/>

        </properties>

    </componentType>


    <componentType id="asterics.OscServer"
                   canonical_name="eu.asterics.component.sensor.oscserver.OscServerInstance">
        <type subtype="Communication">sensor</type>
        <singleton>false</singleton>
        <description>Receives OSC messages and forward it to the ARE</description>
        <ports>

			<outputPort id="CH1">
				<description>output CH1</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>output CH2</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>output CH3</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>output CH4</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>output CH5</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>output CH6</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>output CH7</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>output CH8</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH9">
				<description>string output CH9</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH10">
				<description>string output CH10</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH11">
				<description>string output CH11</description>
				<dataType>string</dataType>
			</outputPort>
			<outputPort id="CH12">
				<description>string output CH12</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="Port"
				type="integer"
				value="57000"
				description="Osc Server Port"/>
			<property name="AddressCH1"
				type="string"
				value="/Channel1"
				description="Address of Osc Stream 1"/>
			<property name="ArgNrCH1"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 1"/>
			<property name="AddressCH2"
				type="string"
				value="/Channel2"
				description="Address of Osc Stream 2"/>
			<property name="ArgNrCH2"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 2"/>
			<property name="AddressCH3"
				type="string"
				value="/Channel3"
				description="Address of Osc Stream 3"/>
			<property name="ArgNrCH3"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 3"/>
			<property name="AddressCH4"
				type="string"
				value="/Channel4"
				description="Address of Osc Stream 4"/>
			<property name="ArgNrCH4"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 4"/>
			<property name="AddressCH5"
				type="string"
				value="/Channel5"
				description="Address of Osc Stream 5"/>
			<property name="ArgNrCH5"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 5"/>
			<property name="AddressCH6"
				type="string"
				value="/Channel6"
				description="Address of Osc Stream 6"/>
			<property name="ArgNrCH6"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 6"/>
			<property name="AddressCH7"
				type="string"
				value="/Channel7"
				description="Address of Osc Stream 7"/>
			<property name="ArgNrCH7"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 7"/>
			<property name="AddressCH8"
				type="string"
				value="/Channel8"
				description="Address of Osc Stream 8"/>
			<property name="ArgNrCH8"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 8"/>
			<property name="AddressCH9"
				type="string"
				value="/Channel9"
				description="Address of Osc Stream 9"/>
			<property name="ArgNrCH9"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 9"/>
			<property name="AddressCH10"
				type="string"
				value="/Channel10"
				description="Address of Osc Stream 10"/>
			<property name="ArgNrCH10"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 10"/>
			<property name="AddressCH11"
				type="string"
				value="/Channel11"
				description="Address of Osc Stream 11"/>
			<property name="ArgNrCH11"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 11"/>
			<property name="AddressCH12"
				type="string"
				value="/Channel12"
				description="Address of Osc Stream 12"/>
			<property name="ArgNrCH12"
				type="integer"
				value="1"
				description="Argument Number of OSC Stream 12"/>
			
        </properties>

    </componentType>


    <componentType id="asterics.p2_parser"
                   canonical_name="eu.asterics.component.sensor.p2_parser.P2_parserInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>This plugin receives a P"-packet stream compatible to the OpenEEG ModularEEG / SMT EEG firmware. 6 Channels of bioelectric data can be processed.</description>
        <ports>

			<outputPort id="Channel1">
				<description>output port for channel1 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel2">
				<description>output port for channel2 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel3">
				<description>output port for channel3 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel4">
				<description>output port for channel4 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel5">
				<description>output port for channel5 data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Channel6">
				<description>output port for channel6 data</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="ComPort"
				type="string"
				value="COM4"
				description="The COM Port which will be opened to receive a P2-packet stream"/>
			<property name="BaudRate"
				type="integer"
				value="57600"
				description="The baud rate for the P2 packet stream"/>

        </properties>

    </componentType>


    <componentType id="asterics.PhilipsHueSensor"
                   canonical_name="eu.asterics.component.sensor.philipshuesensor.PhilipsHueSensorInstance">
        <type subtype="Home Control">sensor</type>
        <singleton>false</singleton>
        <description>Control Philips Hue devices via the RESTful API</description>
        <ports>

            <outputPort id="currentState">
                <description>Current state of all Philips Hue devices (JSON)</description>
                <dataType>string</dataType>
            </outputPort>

        </ports>
        <events>

            <eventTriggererPort id="statusChanged">
                <description>fires when the configured sensor changes its status</description>
            </eventTriggererPort>

            <eventTriggererPort id="tick">
                <description>fires for each tick (depends on updateRate variable)</description>
            </eventTriggererPort>

            <eventTriggererPort id="dimmerButtonOn">
                <description>dimmer switch: fires when the first button (on) is pressed</description>
            </eventTriggererPort>

            <eventTriggererPort id="dimmerButtonBrighter">
                <description>dimmer switch: fires when the second button (brightness up) is pressed</description>
            </eventTriggererPort>

            <eventTriggererPort id="dimmerButtonDarker">
                <description>dimmer switch: fires when the third button (brightness down) is pressed</description>
            </eventTriggererPort>

            <eventTriggererPort id="dimmerButtonOff">
                <description>dimmer switch: fires when the last button (off) is pressed</description>
            </eventTriggererPort>

            <eventTriggererPort id="motionDetected">
                <description>motion sensor: fires once, when motion is detected</description>
            </eventTriggererPort>

        </events>
        <properties>
            <property name="apiKey"
                      type="string"
                      value="Osq3VsXahrkSEJU3NzPMTnu3mdvL8T0CuTjSlUrH"
                      description="Philips Hue RESTful API key"/>
            <property name="ip"
                      type="string"
                      value="10.0.0.57"
                      description="Philips Hue Bridge IP"/>
            <property name="target"
                      type="string"
                      value="/sensors/11"
                      description="Target device"/>
            <property name="updateRate"
                      type="integer"
                      value="1000"
                      description="Polling rate for the bridge"/>

        </properties>

    </componentType>


    <componentType id="asterics.PlatformAnalogIn"
                   canonical_name="eu.asterics.component.sensor.platformanalogin.PlatformAnalogInInstance">
        <type subtype="Personal Platform">sensor</type>
        <singleton>false</singleton>
        <description>ADC inputs of personal platform</description>
        <ports>
            <outputPort id="in1">
                <description>Input 1</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="in2">
                <description>Input 2</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="adcSampleTrigger">
                <description>Event port triggers ADC sampling once</description>
            </eventListenerPort>
        </events>        
        <properties>
            <property name="activateInput1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateInput2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="periodicUpdate"
                      type="integer"
                      value="0"
                      description="value of interval between periodic update messagess of inputs in ms"/>
                      
        </properties>
    </componentType>



    <componentType id="asterics.PlatformDigitalIn"
                   canonical_name="eu.asterics.component.sensor.platformdigitalin.PlatformDigitalInInstance">
        <type subtype="Personal Platform">sensor</type>
        <singleton>true</singleton>
        <description>GPIO CIM sensor for inputs</description>
        <ports>
        </ports>
        <events>
            <eventTriggererPort id="in1High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
<!--             
            <eventTriggererPort id="in4High">
                <description>Event port triggers events when input switches to high level</description>
            </eventTriggererPort>
 -->
            <eventTriggererPort id="in1Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in2Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
            <eventTriggererPort id="in3Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
<!--
            <eventTriggererPort id="in4Low">
                <description>Event port triggers events when input switches to low level</description>
            </eventTriggererPort>
 -->             
        </events>        
        <properties>
            <property name="activateEventIn1"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn2"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
            <property name="activateEventIn3"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
<!-- 
            <property name="activateEventIn4"
                      type="boolean"
                      value="false"
                      description="Defines if CIM should notify ARE on input level changes of this input"/>
 -->                      
        </properties>
    </componentType>



    <componentType id="asterics.Proximity"
                   canonical_name="eu.asterics.component.sensor.proximity.ProximityInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Distance Sensor</description>
        <ports>

			<outputPort id="distance">
				<description>Output port of proximitysensor</description>
				<dataType>integer</dataType>
			</outputPort>
			
			
			<inputPort id="input">
				<description>Input port of proximitysensor to set threshold</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>integer</dataType>
			</inputPort>

        </ports>
		<events>

			<eventTriggererPort id="LowToHigh">
				<description>etp current value exceeds threshold - sending 1</description>
			</eventTriggererPort>
			<eventTriggererPort id="HighToLow">
				<description>etp current value falls below threshold - sending 0</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="threshold"
				type="integer"
				value="0"
				description="Value to produce events"/>
			<property name="sendingMode"
                type="integer"
                value="0"
                combobox="Continous data//Events: below->above//Events: above->below//Events: both"
                description="sending mode of the proximity sensor"/> 

        </properties>

    </componentType>


    <componentType id="asterics.RandomNumber"
                   canonical_name="eu.asterics.component.sensor.randomnumber.RandomNumberInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Generates a random number</description>
        <ports>

			<outputPort id="Number">
				<description>Random number</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="NewNumber">
				<description>Generates a new random number</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="Min"
				type="integer"
				value="0"
				description="Minimum random value"/>
			<property name="Max"
				type="integer"
				value="1"
				description="Maximum random value"/>
            <property name="autostart"
                      type="boolean"
                      value="true"
                      description="automatically generate random number at startup"/>

        </properties>

    </componentType>


    <componentType id="asterics.RazorIMU"
                   canonical_name="eu.asterics.component.sensor.razorimu.RazorImuInstance">
        <type subtype="Inertial Measurement">sensor</type>
        <singleton>true</singleton>
        <description>9 Degree-of-Freedom Razor Inertial Measurement Unit</description>
        <ports>
            <outputPort id="pitch">
                <description>value for pitch</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="yaw">
                <description>value for yaw</description>
                <dataType>double</dataType>
            </outputPort>
            <outputPort id="roll">
                <description>value for roll</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="comPort"
                      type="string"
                      value="COM7"
                      description="COM port of the IMU"/>
            <property name="baudRate"
                      type="integer"
                      value="57600"
                      description="BaudRate of the IMU's com port (57600)"/>
            <property name="operationMode"
                      type="string"
                      value="PitchYawRoll"
                      description="(currently: PitchYawRoll)"/>        </properties>
    </componentType>



    <componentType id="asterics.ReadCSV"
                   canonical_name="eu.asterics.component.sensor.readcsv.ReadCSVInstance">
        <type subtype="File System">sensor</type>
        <singleton>false</singleton>
        <description>Open and read a CSV file</description>
        <ports>

			<outputPort id="Output">
				<description>output of the string</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="read">
				<description>open a file</description>
			</eventListenerPort>


		</events>			
        <properties>
        	<property name="FilePath" type="string" value="./data/csv/" description="path of the file"></property></properties>

    </componentType>


    <componentType id="asterics.ReadEDF"
                   canonical_name="eu.asterics.component.sensor.readedf.ReadEDFInstance">
        <type subtype="File System">sensor</type>
        <singleton>false</singleton>
        <description>This plugin reads data from an edf-file and sends it to its output ports</description>
        <ports>
			<outputPort id="CH1">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH2">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH3">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH4">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH5">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH6">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH7">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH8">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH9">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH10">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH11">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH12">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH13">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH14">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH15">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="CH16">
				<description>output port for sending edf channel data</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
            <property name="filename"
                      type="string"
                      value=""
                      getStringList="true"
                      description="EDF file to be opened."/>
        </properties>

    </componentType>


    <componentType id="asterics.RFIDReader"
                   canonical_name="eu.asterics.component.sensor.rfidreader.RFIDReaderInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Interfaces to the ID Innovations RFID reader and outputs a recognized tag identifier</description>
        <ports>

			<outputPort id="tagID">
				<description>Identification string of the RFID tag</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="comPort"
				type="string"
				value="COM8"
				description="The COM Port where the RFID reader is connected"/>
			<property name="baudRate"
				type="integer"
				value="9600"
				description="The baud rate for communication with the RFID reader"/>

        </properties>

    </componentType>


    <componentType id="asterics.SensorBoard"
                   canonical_name="eu.asterics.component.sensor.sensorboard.SensorboardInstance">
        <type subtype="Sensor Modules">sensor</type>
        <singleton>false</singleton>
        <description>Interfaces the sensor board CIM which provides accelerometer, gyroscope, compass, IR-camera and pressure sensor</description>
        <ports>

			<outputPort id="accX">
				<description>acceleration X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="accY">
				<description>acceleration Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="accZ">
				<description>acceleration Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroX">
				<description>angle velocity X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroY">
				<description>angle velocity Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="gyroZ">
				<description>angle velocity Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassX">
				<description>compass direction X</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassY">
				<description>compass direction Y</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="compassZ">
				<description>compass direction Z</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt1X">
				<description>infrared point 1 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt1Y">
				<description>infrared point 1 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt2X">
				<description>infrared point 2 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt2Y">
				<description>infrared point 2 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt3X">
				<description>infrared point 3 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt3Y">
				<description>infrared point 3 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt4X">
				<description>infrared point 4 X position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pt4Y">
				<description>infrared point 4 Y position</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="pressure">
				<description>air pressure sensor</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="refreshInterval"
				type="integer"
				value="50"
				description="refresh interval for sensor values"/>

        </properties>

    </componentType>


    <componentType id="asterics.SignalGenerator"
                   canonical_name="eu.asterics.component.sensor.signalgenerator.SignalGeneratorInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>Signal Generator</description>
        <ports>
            <outputPort id="out">
                <description>signal output</description>
                <dataType>double</dataType>
            </outputPort>
        </ports>
        <properties>
            <property name="sendInterval"
                      type="integer"
                      value="20"
                      description="The interval for sending values (ms)"/>
            <property name="waveForm"
                      type="integer"
                      value="1"
                      description="0:random 1:sine 2:sawtooth 3:rectangle"
                      combobox="random//sine//sawtooth//rectangle"/>
            <property name="frequency"
                      type="double"
                      value="2"
                      description="cycles per second"/>
            <property name="amplitude"
                      type="double"
                      value="100"
                      description="signal amplitude"/>
            <property name="phaseShift"
                      type="double"
                      value="0"
                      description="phase offset (in milliseconds)"/>
            <property name="offset"
                      type="double"
                      value="0"
                      description="signal offset (constant)"/>
        </properties>
    </componentType>



    <componentType id="asterics.SignalShaper"
                   canonical_name="eu.asterics.component.sensor.signalshaper.SignalShaperInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>This component allow to shape signal from the lines</description>
        <ports>

			<outputPort id="output">
				<description>Signal output port</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="start">
				<description>Start signal generation.</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="interval"
				type="integer"
				value="20"
				description="Send interval [ms]"/>
			<property name="numberOfLines"
				type="integer"
				value="0"
				combobox="1//2//3//4//5"
				description="The number of lines used for the signal generation"/>
			<property name="behaviourAfterFinish"
				type="integer"
				value="0"
				combobox="do nothing//repeat//send the last value"
				description="What the component should do after send  signal."/>
			<property name="beginValue1"
				type="double"
				value="0"
				description="Begin value of the line 1"/>
			<property name="endValue1"
				type="double"
				value="0"
				description="End value of the line 1"/>
			<property name="time1"
				type="integer"
				value="0"
				description="The time fo the line 1 [ms]"/>
			<property name="beginValue2"
				type="double"
				value="0"
				description="Begin value of the line 2"/>
			<property name="endValue2"
				type="double"
				value="0"
				description="End value of the line 2"/>
			<property name="time2"
				type="integer"
				value="0"
				description="The time fo the line 2 [ms]"/>
			<property name="beginValue3"
				type="double"
				value="0"
				description="Begin value of the line 3"/>
			<property name="endValue3"
				type="double"
				value="0"
				description="End value of the line 3"/>
			<property name="time3"
				type="integer"
				value="0"
				description="The time fo the line 3 [ms]"/>
			<property name="beginValue4"
				type="double"
				value="0"
				description="Begin value of the line 4"/>
			<property name="endValue4"
				type="double"
				value="0"
				description="End value of the line 4"/>
			<property name="time4"
				type="integer"
				value="0"
				description="The time fo the line 4 [ms]"/>
			<property name="beginValue5"
				type="double"
				value="0"
				description="Begin value of the line 5"/>
			<property name="endValue5"
				type="double"
				value="0"
				description="End value of the line 5"/>
			<property name="time5"
				type="integer"
				value="0"
				description="The time fo the line 5 [ms]"/>
			
        </properties>

    </componentType>


    <componentType id="asterics.Slider"
                   canonical_name="eu.asterics.component.sensor.slider.SliderInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>false</singleton>
        <description>a slider GUI element which provides the slider value at an output port</description>
        <ports>
            <inputPort id="setValue">
                <description>sets the position of the slider</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <inputPort id="in">
                <description>input signal</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>double</dataType>
            </inputPort>

			<outputPort id="value">
				<description>the current slider value</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="out">
				<description>output signal (with applied gain)</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
			
        <properties>
			<property name="min"
				type="integer"
				value="0"
				description="the minimum value for the slider"/>
			<property name="max"
				type="integer"
				value="100"
				description="the maximum value for the slider"/>
			<property name="default"
				type="integer"
				value="50"
				description="the default value for the slider"/>
			<property name="gain"
				type="double"
				value="0.01"
				description="signal gain factor (out = in * gain * slider_value)"/>
            <property name="autosend"
                      type="boolean"
                      value="true"
                      description="automatically send the Slider's default value at model startup"/>				
			<property name="caption"
				type="string"
				value="my slider"
				description="the slider caption"/>
			<property name="majorTickSpacing"
				type="integer"
				value="20"
				description="the major tick spacing"/>
			<property name="minorTickSpacing"
				type="integer"
				value="5"
				description="the minor tick spacing"/>
			<property name="alignment"
				type="integer"
				value="0"
				combobox="horizontal//vertical"
				description="slider alignment"/>
			<property name="fontSize"
				type="integer"
				value="14"
				description="slider font size"/>
            <property name="storeValue"
                      type="boolean"
                      value="false"
                      description="if enabled, the current slider value will be stored and reloaded when model starts next time"/>				
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
				
        </properties>
        <gui>
            <width>4000</width>
            <height>1000</height>
        </gui>        
    </componentType>


    <componentType id="asterics.SpaceNavigator3DMouse"
                   canonical_name="eu.asterics.component.sensor.spacenavigtor3Dmouse.SpaceNavigtor3DMouseInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Captures inputs from the 3D-Connexion SpaceNavigator Mouse</description>
        <ports>
            <outputPort id="mouseX">
                <description>Axis X</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseY">
                <description>Axis Y</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseZ">
                <description>Axis Z</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseRx">
                <description>Axis X rotation</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="mouseRy">
            	<description>Axis Y rotation</description>
            	<dataType>integer</dataType></outputPort>
            <outputPort id="mouseRz">
            	<description>Axis Z rotation</description>
            	<dataType>integer</dataType></outputPort>
            <outputPort id="buttons">
            	<description>Buttons combination</description>
            	<dataType>integer</dataType></outputPort>
        </ports>
        <properties>
            <property name="interval"
                      type="integer"
                      value="300"
                      description="The interval for capturing 3D mouse state (ms)"/>
        </properties>
    </componentType>



    <componentType id="asterics.TextfieldReader" 
                   canonical_name="eu.asterics.component.sensor.textfieldreader.TextfieldreaderInstance">
        <type subtype="Graphical User Interface">sensor</type>
        <singleton>true</singleton>
        <description>Captures key input from a text field and compares input with a set of command-words</description> 
        <ports>
            <outputPort id="keys">
                <description>Output port for keycode</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="words">
                <description>Output port for individual words</description>
                <dataType>string</dataType>
            </outputPort>
        </ports>
         <events>
            <eventTriggererPort id="recognizedCommand1">
                <description>Event port triggers on recognition of command 1</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand2">
                <description>Event port triggers on recognition of command 2</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand3">
                <description>Event port triggers on recognition of command 3</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand4">
                <description>Event port triggers on recognition of command 4</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand5">
                <description>Event port triggers on recognition of command 5</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand6">
                <description>Event port triggers on recognition of command 6</description>
            </eventTriggererPort>
            <eventTriggererPort id="recognizedCommand7">
                <description>Event port triggers on recognition of command 7</description>
            </eventTriggererPort>
        </events>
      
        <properties>
            <property name="command1"
                      type="string"
                      value="one"
                      description="if recognized, event1 will be triggered"/>
            <property name="command2"
                      type="string"
                      value="two"
                      description="if recognized, event2 will be triggered"/>
            <property name="command3"
                      type="string"
                      value="three"
                      description="if recognized, event3 will be triggered"/>
            <property name="command4"
                      type="string"
                      value="four"
                      description="if recognized, event4 will be triggered"/>
            <property name="command5"
                      type="string"
                      value="five"
                      description="if recognized, event5 will be triggered"/>
            <property name="command6"
                      type="string"
                      value="six"
                      description="if recognized, event6 will be triggered"/>
            <property name="command7"
                      type="string"
                      value="seven"
                      description="if recognized, event7 will be triggered"/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>
        </properties>
    </componentType>



    <componentType id="asterics.Timer"
                   canonical_name="eu.asterics.component.sensor.timer.TimerInstance">
        <type subtype="Simulation">sensor</type>
        <singleton>false</singleton>
        <description>measures and outputs time in milliseconds and fires events (periodically or once)</description>
        <ports>
            <inputPort id="period">
                <description>time period in milliseconds</description>
                <mustBeConnected>false</mustBeConnected>
                <dataType>integer</dataType>
            </inputPort>
            <outputPort id="time">
                <description>time passed</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="start">
                <description>start timer</description>
            </eventListenerPort>
            <eventListenerPort id="stop">
                <description>stop timer</description>
            </eventListenerPort>
            <eventListenerPort id="reset">
                <description>reset timer to 0</description>
            </eventListenerPort>
            <eventTriggererPort id="periodFinished">
                <description>time period has passed</description>
            </eventTriggererPort>
        </events>
        
        <properties>
            <property name="mode"
                      type="integer"
                      value="0"
                      description="Timer mode"
					  combobox="one shot//repeat n times//endless loop//once and continue time output//measure time from start to stop"/>
            <property name="repeatCounter"
                      type="integer"
                      value="1"
                      description="how many repeat cycles"/>
            <property name="timePeriod"
                      type="integer"
                      value="2000"
                      description="the time in milliseconds"/>
            <property name="resolution"
                      type="integer"
                      value="50"
                      description="resolution for timer calculation and output"/>
            <property name="waitPeriod"
                      type="integer"
                      value="0"
                      description="wait time before timer starts in milliseconds"/>
            <property name="autostart"
                      type="boolean"
                      value="false"
                      description="start timer automatically or wait for start event"/>
        </properties>
    </componentType>



    <componentType id="asterics.Tobii4CHeadTracker"
                   canonical_name="eu.asterics.component.sensor.tobii4cheadtracker.Tobii4CHeadTrackerInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>true</singleton>
        <description>The plugin provides the head tracking functionality of the Tobii 4C eye tracker. </description>
        <ports>

			<outputPort id="headRotX">
				<description>Head rotation x angle (Euler)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="headRotY">
				<description>Head rotation y angle (Euler)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="headRotZ">
				<description>Head rotation z angle (Euler)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="headPosX">
				<description>Head position x coordinate (mm)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="headPosY">
				<description>Head position y coordinate (mm)</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="headPosZ">
				<description>Head position z coordinate (mm)</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="activate">
				<description>Activate eye tracker</description>
			</eventListenerPort>
			<eventListenerPort id="deactivate">
				<description>Deactivate eye tracker</description>
			</eventListenerPort>

			<eventTriggererPort id="userPresenceStatusAway">
				<description>Indicates that no user is sitting front of the tracker</description>
			</eventTriggererPort>
			<eventTriggererPort id="userPresenceStatusPresent">
				<description>Indicates that a user is sitting in front of the tracker</description>
			</eventTriggererPort>
			<eventTriggererPort id="calibrationStarted">
				<description>Indicates that the tracker calibration has been started</description>
			</eventTriggererPort>
			<eventTriggererPort id="calibrationFinished">
				<description>Indicates that the tracker calibration has been finished</description>
			</eventTriggererPort>
			<eventTriggererPort id="displayAreaChanged">
				<description>Indicates that the assigned display has been changed</description>
			</eventTriggererPort>
			<eventTriggererPort id="powerSaveStateTrue">
				<description>Indicates that the tracker is in power save mode</description>
			</eventTriggererPort>
			<eventTriggererPort id="powerSaveStateFalse">
				<description>Indicates that the tracker is not in power save mode</description>
			</eventTriggererPort>
			<eventTriggererPort id="deviceOff">
				<description>Indicates that the tracker is currently paused</description>
			</eventTriggererPort>
			<eventTriggererPort id="deviceOn">
				<description>Indicates that the tracker is currently  enabled</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="enabled"
				type="boolean"
				value="true"
				description="Selects if the tracker is enabled at startup"/>

        </properties>

    </componentType>


    <componentType id="asterics.TobiTiC"
                   canonical_name="eu.asterics.component.sensor.tobitic.TobiTiCInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>Implements a simple TOBI TiC  interface and outputs classifier values</description>
        <ports>

			<outputPort id="value1">
				<description>value of first class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value2">
				<description>value of second class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value3">
				<description>value of third class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value4">
				<description>value of forth class label</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="value5">
				<description>value of fifth class label</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>


		</events>			
        <properties>
			<property name="tcpPort"
				type="integer"
				value="52000"
				description="IP port to listen to"/>
			<property name="classLabel1"
				type="string"
				value="label1"
				description="name of the first class label"/>
			<property name="classLabel2"
				type="string"
				value="label2"
				description="name of the second class label"/>
			<property name="classLabel3"
				type="string"
				value="label3"
				description="name of the third class label"/>
			<property name="classLabel4"
				type="string"
				value="label4"
				description="name of the forth class label"/>
			<property name="classLabel5"
				type="string"
				value="label5"
				description="name of the fifth class label"/>

        </properties>
    </componentType>


    <componentType id="asterics.TrueSense"
                   canonical_name="eu.asterics.component.sensor.truesense.TrueSenseInstance">
        <type subtype="Bioelectric Measurement">sensor</type>
        <singleton>false</singleton>
        <description>Interface to the OPI Truesense biolelectric sensor</description>
        <ports>

			<outputPort id="Signal">
				<description>the raw data signal</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Temp">
				<description>temperature</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccX">
				<description>acceleration x axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccY">
				<description>acceleration y axis</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="AccZ">
				<description>acceleration z axis</description>
				<dataType>double</dataType>
			</outputPort>

        </ports>
		<events>
			<eventListenerPort id="start">
				<description>start data acquisition</description>
			</eventListenerPort>
			<eventListenerPort id="stop">
				<description>stop data acquisition</description>
			</eventListenerPort>


		</events>			
        <properties>
			<property name="ComPort"
				type="string"
				value="Com4"
				description="the COM port to which the Truesense ZigBee module is connected"/>
			<property name="BaudRate"
				type="integer"
				value="57600"
				description="the baud rate for the connection"/>

        </properties>

    </componentType>


    <componentType id="asterics.TuioReactivision"
                   canonical_name="eu.asterics.component.sensor.tuioreactivision.TuioReactivisionInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>false</singleton>
        <description>integrates Tuio into asterics</description>
        <ports>

			<outputPort id="MarkerID">
				<description>markerID</description>
				<dataType>integer</dataType>
			</outputPort>
			<outputPort id="SessionID">
				<description>sessionID</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Xpos">
				<description>xpos</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Ypos">
				<description>ypos</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Angle">
				<description>angle</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="MotionSpeed">
				<description>motionSpeed</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="RotationSpeed">
				<description>rotationSpeed</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="MotionAccel">
				<description>motionAcceleration</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="RotationAccel">
				<description>rotationAcceleration</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="Text">
				<description>term for object</description>
				<dataType>string</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="Event1">
				<description>event1</description>
			</eventTriggererPort>
			<eventTriggererPort id="Event2">
				<description>event2</description>
			</eventTriggererPort>
			<eventTriggererPort id="Event3">
				<description>event3</description>
			</eventTriggererPort>
			<eventTriggererPort id="Event4">
				<description>event4</description>
			</eventTriggererPort>
			<eventTriggererPort id="Event5">
				<description>event5</description>
			</eventTriggererPort>
			<eventTriggererPort id="Event6">
				<description>event6</description>
			</eventTriggererPort>

		</events>			
        <properties>
			<property name="TextOutput"
				type="boolean"
				value="false"
				description="If enabled, uses Marker2Text assignments of file 'TextFile' to send text to port 'Text'"/>			
			<property name="MarkerAllocation"
				type="boolean"
				value="false"
				description="If enabled, uses Marker2Event assignments of file 'TextFile' to trigger events"/>
			<property name="reactivisionPath"
				type="string"
				value=""
				description="Path of reacTIVision.exe. If set, automatically starts/stops program. (http://reactivision.sourceforge.net/)"/>
			<property name="TextFile"
				type="string"
				value="data/sensor.tuioreactivision/Marker2Event.txt"
				description="Path of Marker2Text or Marker2Event assignment file"/>
        </properties>

    </componentType>


    <componentType id="asterics.WiiMote"
                   canonical_name="eu.asterics.component.sensor.wiimote.WiiMoteInstance">
        <type subtype="Standard Input Devices">sensor</type>
        <singleton>true</singleton>
        <description>Interfaces to the WiiMote via Bluetooth HID and provides data from Wiimote and Nunchuck controller</description>
        <ports>

			<outputPort id="pitch">
				<description>pitch orientation  of the WiiMote in degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="roll">
				<description>roll orientation  of the WiiMote in degrees</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point1X">
				<description>IR camera point1 tracking X position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point1Y">
				<description>IR camera point1 tracking Y position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point2X">
				<description>IR camera point2 tracking X position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="point2Y">
				<description>IR camera point2 tracking Y position [0..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="nunX">
				<description>X position of the Nunchuck Joystick [-1..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="nunY">
				<description>Y position of the Nunchuck Joystick [-1..1]</description>
				<dataType>double</dataType>
			</outputPort>
			<outputPort id="battery">
				<description>battery status [0-100%]</description>
				<dataType>integer</dataType>
			</outputPort>

        </ports>
		<events>

			<eventTriggererPort id="pressedUp">
				<description>direction up pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedUp">
				<description>direction up released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedDown">
				<description>direction down pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedDown">
				<description>direction down released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedLeft">
				<description>direction left pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedLeft">
				<description>direction left released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedRight">
				<description>direction right pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedRight">
				<description>direction right released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedA">
				<description>button A pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedA">
				<description>button A released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedB">
				<description>button B pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedB">
				<description>button B released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressed1">
				<description>button 1 pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="released1">
				<description>button 1 released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressed2">
				<description>button 2 pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="released2">
				<description>button 2 released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedPlus">
				<description>button + pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedPlus">
				<description>button + released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedMinus">
				<description>button - pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedMinus">
				<description>button - released on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedHome">
				<description>etp description</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedHome">
				<description>button Home pressed on the WiiMote</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedNunchuckC">
				<description>button C pressed on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedNunchuckC">
				<description>button C released on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="pressedNunchuckZ">
				<description>button Z pressed on the Nunchuck extension</description>
			</eventTriggererPort>
			<eventTriggererPort id="releasedNunchuckZ">
				<description>button Z released on the Nunchuck extension</description>
			</eventTriggererPort>

		</events>			
        <properties>
            <property name="updatePeriod"
                      type="integer"
                      value="5"
                      description="the update period for getting new values from the WiiMote device (in milliseconds)"/>	
        </properties>
    </componentType>


    <componentType id="asterics.XFacetrackerLK"
                   canonical_name="eu.asterics.component.sensor.XfacetrackerLK.XFacetrackerLKInstance">
        <type subtype="Computer Vision">sensor</type>
        <singleton>false</singleton>
        <description>X-platform webcamera-based face tracking sensor</description>
        <ports>
            <outputPort id="noseX">
                <description>Output port of nose X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="noseY">
                <description>Output port of nose Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinX">
                <description>Output port of chin X coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
            <outputPort id="chinY">
                <description>Output port of chin Y coordinate</description>
                <dataType>integer</dataType>
            </outputPort>
        </ports>
        <events>
            <eventListenerPort id="init">
                <description>perform new face detection when head is centered</description>
            </eventListenerPort>
            
            <eventListenerPort id="showCameraSettings">
                <description>shows Camera Settings Window</description>
            </eventListenerPort> 
            <!-- 
            <eventListenerPort id="saveProfile">
                <description>save camera profile to file</description>
            </eventListenerPort>
             -->                        
        </events>
        <properties>
            <property name="frameGrabber"
              type="string"
              value="Default"
              getStringList="true"
              description="Name of FrameGrabber to use (Default, VideoInput, OpenCV, FFmpeg, OpenKinect, PS3Eye, IPCamera)"/>
            <property name="frameGrabberFormat"
                      type="string"
                      value=""
                      description="Format for grabber, e.g. FFmpeg: 'dshow' (default), 'vfwcap', 'gdigrab'"/>              
            <property name="deviceList"
              type="string"
              value=""
              getStringList="true"
              description="List of available devices, if supported by grabber"/>
            <property name="cameraSelection"
                      type="string"
                      value="0"
                      description="The camera device to be used - use camdIdx e.g. '0' (VideoInput, OpenCV, OpenKinect, PS3Eye), or camName e.g. 'video=Integrated Camera' or 'desktop' (FFmpeg), stream-url for IPCamera"/>
            <property name="cameraResolution"
                      type="integer"
                      value="1"
                      combobox="160x120//320x240//352x288//640x480//800x600//1024x768//1600x1200"
                      description="Desired camera resolution"/>
            <property name="frameRate"
                      type="integer"
                      value="0"
                      description="The frame rate to use for frame grabbing. In case of 0 or a negative value, the maximum frame rate will be used."/>
            <property name="titleVideoFrameWindow"
                      type="string"
                      value=""
                      description="The title of the window showing the video frame."/>
            <property name="displayGUI"
                      type="boolean"
                      value="true"                      
                      description="if selected, the GUI window will be shown"/>                      
            <property name="enableOverlaySettings"
                      type="boolean"
                      value="true"                      
                      description="if selected, the video frame shows the current frame rate and device name as overlayed text."/>
            <!-- <property name="resizeHeight"
                      type="integer"
                      value="120"
                      description="The frame height for to be used for face detection. On slow platforms, decrease value, otherwise leave it."/>                         -->
                      <!-- 
            <property name="cameraDisplayUpdate"
                      type="integer"
                      value="100"
                      description="the update period for the camera display in milliseconds (0=no display window)"/>
                       -->
                      <!-- 
            <property name="cameraProfile" 
                      type="string"
                      value=""
                      description="Filename of the camera profile"/>            
                            -->   
        </properties>
        <gui IsExternalGUIElement="true">
            <width>2000</width>
            <height>1500</height>
        </gui>
    </componentType>

</componentTypes>