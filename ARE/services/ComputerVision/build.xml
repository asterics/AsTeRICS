<project name="asterics.${component.id}" default="jar" basedir=".">

	<property name="component.id" value="mw.computervision"/>
	<!-- set global properties for this build -->
	<property name="build" location="../out/production/${component.id}"/>
	<property name="src.java" location="src/main/java"/>
	<property name="dist" location=".."/>
	<property name="runtime" location="../../../bin/ARE"/>
	<property name="osgi" location="${runtime}/org.eclipse.osgi_3.14.0.v20190517-1309.jar"/>
	<property name="middleware" location="../../middleware"/>
	<property name="services" location="../../services"/>
	<property name="resources" location="src/main/resources"/>
	<!-- don't forget to also update the MANIFEST file!! -->
	
	<property name="jar.os.name.windows" value="windows"/>
	<property name="jar.os.name.linux" value="linux"/>
	<property name="jar.os.name.macosx" value="macosx"/>

	<property name="javacv.target.file" location="${services}/javacv-1.3.0-full-all.jar"/>
	<property name="javacv.windows.target.file" location="${services}/javacv-1.3.0-basic-${jar.os.name.windows}.jar"/>
	<property name="javacv.linux.target.file" location="${services}/javacv-1.3.0-basic-${jar.os.name.linux}.jar"/>
	<property name="javacv.macosx.target.file" location="${services}/javacv-1.3.0-basic-${jar.os.name.macosx}.jar"/>
	<property name="javacv.ffmpeg.target.file" location="${services}/javacv-1.3.0-ffmpeg-all.jar"/>

	<fileset id="javacv-files-windows" dir="javacv/src/main/resources" excludes="**/ffmpeg*.jar, **/*-linux-*.jar, **/*-macosx-*.jar" includes="lib/native/*.jar">
	</fileset>

	<fileset id="javacv-files-linux" dir="javacv/src/main/resources" excludes="**/videoinput*.jar, **/*-windows-*.jar, **/*-macosx-*.jar" includes="lib/native/*.jar">
	</fileset>
	<fileset id="javacv-files-macosx" dir="javacv/src/main/resources" excludes="**/ffmpeg*.jar, **/videoinput*.jar, **/*-windows-*.jar, **/*-linux-*.jar" includes="lib/native/*.jar">
	</fileset>
	
	<fileset id="javacv-files-ffmpeg" dir="javacv/src/main/resources" excludes="**/opencv*.jar, **/videoinput*.jar, **/libfreenect*.jar" includes="lib/native/*.jar">
	</fileset>

	<property name="classpath" location=".."/>
	<path id="asterics.classpath">
		<pathelement path="${classpath}"/>
		<pathelement location="bin"/>
		<pathelement location="${osgi}"/>
		<pathelement location="${middleware}/asterics.ARE.jar"/>
		<pathelement location="${javacv.windows.target.file}" />
	</path>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init, merge-jars" description="compile the source ">
		<javac source="${javac.source}" target="${javac.target}"  includeantruntime="false" srcdir="${src.java}" destdir="${build}"  verbose="true" debug="${debug}" 
           classpath="${classpath}">
			<classpath refid="asterics.classpath"/>
		</javac>
	</target>
	<target name="jar" depends="compile" description="generate the OSGi bundle" >
		<jar jarfile="${dist}/asterics.${component.id}.jar" basedir="${build}"
      	manifest="${resources}/META-INF/MANIFEST.MF">
		</jar>
		<copy file="${dist}/asterics.${component.id}.jar" 
          tofile="${runtime}/asterics.${component.id}.jar"/>
	</target>

	<!-- Generates the platform dependendant smaller jars for javacv -->
	<target name="merge-jars" depends="check-merged-jar, do-merge-jars-windows, do-merge-jars-linux, do-merge-jars-macosx">
	</target>
	
	<target name="check-merged-jar">
		<available file="${javacv.target.file}" property="javacv.exists">
		</available>
		<available file="${javacv.windows.target.file}" property="javacv.windows.exists">
		</available>
		<available file="${javacv.linux.target.file}" property="javacv.linux.exists">
		</available>
		<available file="${javacv.macosx.target.file}" property="javacv.macosx.exists">
		</available>
	</target>

	<!-- The full jar is not generated by default  because it is too big -->
	<!-- If you need FFMpegFrameGrabber generate the full jar and exchange the small bundle with this one -->
	<target name="do-merge-jars" description="Generate a merged javacv OSGI-bundle with all jars" unless="javacv.exists">
		<jar jarfile="${javacv.target.file}"
      	manifest="javacv/src/main/resources/META-INF/MANIFEST.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset dir="javacv/src/main/resources" includes="lib/native/*.jar"/>
				</zips>
			</archives>
		</jar>
	</target>
	
	<!-- a smaller version the javacv bundle with opencv, libfreenect, and videoinput but without ffmpeg -->
	<target name="do-merge-jars-small" description="Generate a small merged javacv OSGI-bundle (without ffmpeg,...)">
		<jar jarfile="../javacv-1.3.0-basic-all.jar"
	      	manifest="javacv/src/main/resources/META-INF/MANIFEST.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset dir="javacv/src/main/resources" excludes="**/ffmpeg*.jar" includes="lib/native/*.jar"/>
				</zips>
			</archives>
		</jar>
	</target>
	
	<!-- A windows-only version with opencv, libfreenect, and videoInput -->
	<target name="do-merge-jars-windows" description="Generate a merged javacv OSGI-bundle with windows-only jars" unless="javacv.windows.exists">
		<jar jarfile="${javacv.windows.target.file}"
      	manifest="javacv/src/main/resources/META-INF/MANIFEST.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset refid="javacv-files-windows"/>
				</zips>
			</archives>
		</jar>
	</target>
	<!-- a linux-only version with opencv, libfreenect -->
	<target name="do-merge-jars-linux" description="Generate a merged javacv OSGI-bundle with linux-only jars" unless="javacv.linux.exists">
		<jar jarfile="${javacv.linux.target.file}"
      	manifest="javacv/src/main/resources/META-INF/MANIFEST.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset refid="javacv-files-linux"/>
				</zips>
			</archives>
		</jar>
	</target>
	<!-- a macosx-only version with opencv, libfreenect -->
	<target name="do-merge-jars-macosx" description="Generate a merged javacv OSGI-bundle with macosx-only jars" unless="javacv.macosx.exists">
		<jar jarfile="${javacv.macosx.target.file}"
      	manifest="javacv/src/main/resources/META-INF/MANIFEST.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset refid="javacv-files-macosx"/>
				</zips>
			</archives>
		</jar>
	</target>

	<!-- 
	Did not work as standalone osgi-bundle, because computervision bundle needs opencv classes for FaceDetection class.
	So would have to add all opencv stuff again which would not bring a size reduction.
	<target name="do-merge-jars-ffmpeg" description="Generate a merged javacv OSGI-bundle with windows-only jars" unless="javacv.exists">
		<jar jarfile="${javacv.ffmpeg.target.file}"
      	manifest="javacv/src/main/resources/META-INF/MANIFEST-ffmpeg.MF" filesetmanifest="merge">
			<archives>
				<zips>
					<fileset refid="javacv-files-ffmpeg"/>
				</zips>
			</archives>
		</jar>
	</target>
	-->

	
	<import file="../../imported.xml"/>
    <include file="../../included.xml"/>
</project>
