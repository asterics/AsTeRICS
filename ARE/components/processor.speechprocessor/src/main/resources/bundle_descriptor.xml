<?xml version="1.0"?>
<componentTypes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="bundle_model.xsd">

    <componentType id="asterics.SpeechProcessor"
                   canonical_name="eu.asterics.component.processor.speechprocessor.SpeechProcessorInstance">
        <type subtype="Audio and Voice">processor</type>
        <singleton>true</singleton>
        <description>This plugin allows to genereate and recognize speech via the speech processor server application</description>
        <ports>
            <inputPort id="speak">
				<description>words to be spoken by the speech synthesizer</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>
        
 		    <outputPort id="command">
				<description>recognized command as a string</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>
		<events>
			<eventTriggererPort id="activated">
				<description>Will be triggered if the activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="deActivated">
				<description>Will be triggered if the de-activation command was received</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand1">
				<description>Will be triggered if a defined command 1 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand2">
				<description>Will be triggered if a defined command 2 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand3">
				<description>Will be triggered if a defined command 3 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand4">
				<description>Will be triggered if a defined command 4 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand5">
				<description>Will be triggered if a defined command 5 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand6">
				<description>Will be triggered if a defined command 6 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand7">
				<description>Will be triggered if a defined command 7 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand8">
				<description>Will be triggered if a defined command 8 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand9">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand10">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand11">
				<description>Will be triggered if a defined command 11 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand12">
				<description>Will be triggered if a defined command 12 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand13">
				<description>Will be triggered if a defined command 13 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand14">
				<description>Will be triggered if a defined command 14 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand15">
				<description>Will be triggered if a defined command 15 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand16">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand17">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand18">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand19">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand20">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand21">
				<description>Will be triggered if a defined command 16 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand22">
				<description>Will be triggered if a defined command 17 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand23">
				<description>Will be triggered if a defined command 18 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand24">
				<description>Will be triggered if a defined command 9 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventTriggererPort id="recognizedCommand25">
				<description>Will be triggered if a defined command 10 is recognized by the speech engine</description>
			</eventTriggererPort>
			<eventListenerPort id="help">
                <description>An incoming event starts playback of all supported voice commands</description>
            </eventListenerPort>
            <eventListenerPort id="activation">
                <description>Activates the Speech recognition</description>
            </eventListenerPort>
            <eventListenerPort id="deactivation">
                <description>Deactivates the Speech recognition</description>
            </eventListenerPort>
			

		</events>			
        <properties>
			<property name="language"
				type="integer"
				value="0"
				description="the desired language"				
				combobox="English//Deutsch//Espanol//Polski"/>
			<property name="recognitionConfidence"
				type="double"
                value="0.5"
				description="the needed recognition confidence (0-1), high value needs precise pronunciation"/>
			<property name="speechLoopDelay"
				type="integer"
				value="1500"
				description="the minimal time between two speech commands. Avoids loops"
			/>
			<property name="activationCommand"
				type="string"
				value="computer, listen!"
				description="speech command which activates command recognition"/>
			<property name="deactivationCommand"
				type="string"
				value="computer, stop!"
				description="speech command which stops command recognition"/>
			<property name="helpCommand"
				type="string"
				value="computer, help!"
				description="speech command which says all other commands"/>
            <property name="mode"
                type="integer"
                value="0"
                description="mode for activation/deactivation of speech recognition"
                combobox="always active//voice-triggered activation and deactivation//automatic deactivation after command recognition//speech recognition disabled (TTS only)"/>			
			<property name="command1"
				type="string"
				value="hello"
				description="speech command, triggers event1 if recognized"/>
			<property name="command2"
				type="string"
				value=""
				description="speech command, triggers event2 if recognized"/>
			<property name="command3"
				type="string"
				value=""
				description="speech command, triggers event3 if recognized"/>
			<property name="command4"
				type="string"
				value=""
				description="speech command, triggers event4 if recognized"/>
			<property name="command5"
				type="string"
				value=""
				description="speech command, triggers event5 if recognized"/>
			<property name="command6"
				type="string"
				value=""
				description="speech command, triggers event6 if recognized"/>
			<property name="command7"
				type="string"
				value=""
				description="speech command, triggers event7 if recognized"/>
			<property name="command8"
				type="string"
				value=""
				description="speech command, triggers event8 if recognized"/>
			<property name="command9"
				type="string"
				value=""
				description="speech command, triggers event9 if recognized"/>
			<property name="command10"
				type="string"
				value=""
				description="speech command, triggers event10 if recognized"/>
			<property name="command11"
				type="string"
				value=""
				description="speech command, triggers event11 if recognized"/>
			<property name="command12"
				type="string"
				value=""
				description="speech command, triggers event12 if recognized"/>
			<property name="command13"
				type="string"
				value=""
				description="speech command, triggers event13 if recognized"/>
			<property name="command14"
				type="string"
				value=""
				description="speech command, triggers event14 if recognized"/>
			<property name="command15"
				type="string"
				value=""
				description="speech command, triggers event15 if recognized"/>
			<property name="command16"
				type="string"
				value=""
				description="speech command, triggers event16 if recognized"/>
			<property name="command17"
				type="string"
				value=""
				description="speech command, triggers event17 if recognized"/>
			<property name="command18"
				type="string"
				value=""
				description="speech command, triggers event18 if recognized"/>
			<property name="command19"
				type="string"
				value=""
				description="speech command, triggers event19 if recognized"/>
			<property name="command20"
				type="string"
				value=""
				description="speech command, triggers event20 if recognized"/>
			<property name="command21"
				type="string"
				value=""
				description="speech command, triggers event21 if recognized"/>
			<property name="command22"
				type="string"
				value=""
				description="speech command, triggers event22 if recognized"/>
			<property name="command23"
				type="string"
				value=""
				description="speech command, triggers event23 if recognized"/>
			<property name="command24"
				type="string"
				value=""
				description="speech command, triggers event24 if recognized"/>
			<property name="command25"
				type="string"
				value=""
				description="speech command, triggers event25 if recognized"/>				
        </properties>

    </componentType>
</componentTypes>