**RECORDING SAMPLES
EyesStateRecord --create  eyes.yml --camera 0 --width 25

*--create or --append followed by the name of the file with 'yml' as extension.

--create will create (what a surprise) a new log.
--append will add new samples to some existing repertoire of samples.

* --camera idx wher idx is the integer index of the camera we'd like to use

* --width it's the width in pixel of the normalised patch of each eye (stay around 25/30 pixels).
If we choose --append then a consistency check is done to ensure to choose the width size of the existing
samples.

* --resample when using several times --append the log file will grow quite a lot.
If we want to acquire new samples but keep only a subset of them, then you can specify how many
eyes pair we want to actually save in the file. Samples are randomly sampled at the end of the session.

EyesStateRecord --append  eyeslog.yml --camera 0 --width 20--resample 250
(this call will save only 250 pairs per category (that is 250*4 total eyes samples).



USAGE
Keyboard interaction. 
Press 'o' (the letter) to acquire 'OPENED eyes' samples. Press again 'o' or SPACEBAR to stop.
Press 'c' to acquire 'CLOSED eyes' samples. Press 'c' again or SPACEBAR to stop acquisition.
Press 'r' if the facetracking result is not satisfying.
ESC to save and quit.

**TRAINING
EyesStateTrain --input eyeslog.yml --eigenratio 0.9 --samples 250 --model model.yml

* --input [string] which log to process.

* --eigenratio [0-1] (float) : this ratio determins the number of eigenvectors (# of principal components) 

that will be selected ok just put some integer number.


* --samples N how many pairs (so, in this case there will be 4*N total samples) to use in learning the SVM classifier. 
If absent we're using all available samples.
The number of samples will be in any case checked against the real number of available samples.

* --model model.yml the name of the model (will be the input of the detector).

**DETECTION
EyesStateDetect --model model.yml --camera 0

* --model file.yml the model to load.
* --camera idx : the camera index (integer).