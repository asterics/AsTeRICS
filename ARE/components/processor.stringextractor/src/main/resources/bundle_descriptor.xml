<?xml version="1.0"?>
<componentTypes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="bundle_model.xsd">

    <componentType id="asterics.StringExtractor"
                   canonical_name="eu.asterics.component.processor.stringextractor.StringExtractorInstance">
        <type subtype="Event and String Processing">processor</type>
        <singleton>false</singleton>
        <description>Extracts a subtext from a given input text and forwards it to the output port as soon as extraction was done based on start and end delimiter strings.
Delimiters must be in the correct order and not overlapping. In case of several occurrences, always the first occurrence of the start and the end delimiter are used. 
The event trigger port fires at successful extraction which is also the case for an empty extracted text (also handed to the output port).
		</description>
        <ports>
			<inputPort id="inText">
				<description>Provides the input text, from which a subtext shall be extracted and sent to the output port, based on start and end delimiter specifications.</description>
				<mustBeConnected>false</mustBeConnected>
				<dataType>string</dataType>
			</inputPort>

			<outputPort id="extractedText">
				<description>Represents the subtext extracted from the input text based on delimiter specifications.</description>
				<dataType>string</dataType>
			</outputPort>
        </ports>

		<events>
			<eventTriggererPort id="textExtracted">
				<description>Triggers when the end delimiter was detected after the start delimiter (not, if the order is wrong or one is missing or overlapping, i.e. within the other) 
and thus a subtext was extracted and sent to the output port. (An empty string is a valid output that also triggers!)</description>
			</eventTriggererPort>
		</events>		
			
        <properties>
			<property name="startDelimiter"
				type="string"
				value="START"
				description="The start string between which and the end string the text is extracted (no regular expression!)"/>
			<property name="endDelimiter"
				type="string"
				value="END"
				description="The end string between which and the start string the text is extracted (no regular expression!)"/>
        </properties>
    </componentType>
</componentTypes>