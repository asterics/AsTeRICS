<project name="asterics.tools.APE" default="buildAndCopy" basedir=".">

	<property name="component.id" value="APE" />
	<!-- set global properties for this build -->
	<property name="build" location="./out/production/${component.id}" />
	<property name="src.java" location="src/main/java" />
	<property name="dist" location="." />
	<property name="middleware" location="../../middleware" />
	<property name="runtime" location="../../../bin/APE" />
	<property name="osgi" location="../../osgi" />
	<property name="classpath" location="../../" />

	<property name="resources" location="src/main/resources" />
	<property name="src.tests" location="src/test/java" />
	<property name="reports.tests" location="reports-junit"/>
	
	<path id="asterics.classpath">
		<pathelement location="bin" />
		<pathelement location="${osgi}/org.eclipse.osgi_3.6.0.v20100517.jar" />
		<pathelement location="${middleware}/asterics.ARE.jar" />
		<pathelement location="${classpath}/junit/junit-4.8.2.jar" />
		<pathelement location="src/main/resources/lib/commons-io-2.4.jar"/>
	</path>


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<javac source="${javac.source}" target="${javac.target}" includeantruntime="false" srcdir="${src.java}" destdir="${build}" verbose="true" debug="${debug}" classpath="${classpath}">
			<classpath refid="asterics.classpath" />
		</javac>
	</target>

	<target name="jar" depends="compile" description="generate the OSGi bundle">
		<jar jarfile="${dist}/${component.id}.jar" basedir="${build}" manifest="${resources}/META-INF/MANIFEST.MF">
			<fileset dir="${resources}" excludes="**/lib"/>
		</jar>
	</target>
	
	<target name="buildAndCopy" depends="jar">
		<copy file="${dist}/${component.id}.jar" tofile="${runtime}/${component.id}.jar" />
		
		<copy todir="${runtime}/lib" >
			<fileset dir="${resources}/lib"></fileset>
		</copy>

		<copy todir="${runtime}">
			<fileset dir=".">
				<include name="*.bat"/>
				<include name="*.sh"/>
			</fileset>
		</copy>
                <fixcrlf srcdir="${runtime}" includes="*.sh"/>
                <chmod dir="${runtime}" includes="*.sh" perm="ugo+rx"/>


		<copy  todir="${runtime}/defProjectDir" failonerror="false" includeemptydirs="true" overwrite="false" verbose="true">
			<fileset dir="${runtime}/template"></fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="out" />
		<delete>
			<fileset dir="." includes="*.jar" />
		</delete>
	</target>

	<target name="junit-tests">
		<mkdir dir="${reports.tests}"/>
		<junit printsummary="yes">
			<classpath location="${classpath}">
			</classpath>
			<classpath refid="asterics.classpath" />
			<test name="eu.asterics.ape.parse.TestModelInspector"/>
		</junit>
		<!--
		<junit printsummary="yes" haltonfailure="yes">
			<classpath location="${classpath}">
			</classpath>
			<classpath refid="asterics.classpath" />

			<formatter type="plain" />
			<batchtest fork="no" todir="${reports.tests}">
				<fileset dir="${src.tests}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		-->
	</target>


	<import file="../../imported.xml"/>
    <include file="../../included.xml"/>
</project>
